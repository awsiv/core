Required PHP modules
---------------------------------
1) mongo
2) mcrypt
4) phpsvn module ver 1.6.6
5) cfmod



Apache configuration
---------------------------------

*) Copy Apache-htaccess to DOCROOT/.htaccess (e.g. /var/www/.htaccess on Ubuntu)
*) apache directive AllowEncodedSlashes On should be present (MUST)
*) Make sure AllowOverride is set to All for this directory in main apache config.
e.g. on Ubuntu /etc/apache2/sites-enabled/000-default, 
  ---
  ...
       <Directory />
                Options FollowSymLinks
                AllowOverride All
        </Directory>
        <Directory /var/www/>
                Options Indexes FollowSymLinks MultiViews
                AllowOverride All
  ...
  --- 

You may instead incorporate the Apache-htaccess file into your main Apache configuration.


Creating inital user
---------------------------------

To create a admin/admin user, point your browser to
http://localhost/testing/mongodbinput on the hub  ...only for development

For production we have to do mongorestore of the directory name "phpcfenginenova" with in the package
./mongorestore -d phpcfengine phpcfenginenova

default username:admin     password:admin

after creating restoring the database from dumpfiles inside phpcfenginenova we can remove the directory phpcfenginenova directory


There should also be a policies directories inside the www root folder of application where it can make  the working directory for various users.
Also we need directory named temp to make temporary storage to do a pdf calculation and emailing that pdf file.


Email send By the system
------------------------------------
The default email address used by the System to send emails is
admin@cfengine.com
It can be changed by editing file name under application/config/ion_auth.php line containing
$config['admin_email']		   = "admin@cfengine.com";


EnvironmentConfiguration
------------------------------------
The Default environment is Developement which will show all kinds of php errors to the user
if it is set to "Production" then errors are logged in apache log as well as in mongo db collection but in this release it
the logs in mongo are  not viewable as there are no viewer to display it.
Environment can be changed by editing the file named index.php in application root with line

define('ENVIRONMENT', 'development');

LDAP configuration
--------------------------------------
By default the mission portal will be using its default database in mongo for user authentication , and when mission portal is installed , it creates
default user(username:admin , password:admin) in mongo DB,
If user want to do user authentication with ldap in fresh install of mission portal , using  admin as username and password,  login into
the system .  Going on the settings section of mission portal from we can configure mission portal to use ldap .Various configuration setting like
hostname: The ldap machine(cf022x.cfengine.com)
base dn:  Ldap rooteg(dc=cf022osx,dc=cfengine,dc=com)
login attribute: the  field in ldap which will be used by mission portal to match the username eg (uid)
Users directory: the ldap directory name that stores the username eg(cn=users or ou=people)
member attribute: The field used by the ldap to signify the user is member of group(need only for OPENLDAP) eg(memberUid)
active directory domain: The field that is required if active directory is used to create a valid username for Active directory eg (windows1.test.cfengine.com)
Need to be given .
It is usually a good practice to test the configuration value entered in this field on the fly by hitting test button , which ask for additional username
and password field for the purpose of test ldap bind .It will show the results accordingly.

Also if the user accidently hit the save button with wrong configuration saved it's always possible to force mission portal to used its local DB
as authentication backend . We can do this by enabling switch named
$config['auth_mode']='database';
in mission portals  application/config/appsettings;
by doing this regard less the configuration saved in database it will used its own users local db to authenticate users.









