\input texinfo-altfont
\input texinfo-logo
\input texinfo
@selectaltfont{cmbright}
@setlogo{NewLogo}

@c *********************************************************************
@c
@c  This is a TEXINFO file. It generates both TEX documentation and
@c  the "on line" documentation "info" files.
@c
@c  The file is structured like a programming language. Each chapter
@c  starts with a chapter comment.
@c
@c  Menus list the subsections so that an online info-reader can parse
@c  the file hierarchically.
@c
@c ***********************************************************************
@c %** start of header
@setfilename st-licenses.info
@settitle Licenses
@setchapternewpage odd
@c %** end of header

@titlepage
@title Upgrading CFEngine Nova
@subtitle A CFEngine Special Topics Handbook
@author CFEngine AS


@page

@cartouche
@quotation
This document describes how software updates work in CFEngine Nova.
@end quotation
@end cartouche

@vskip 0pt plus 1filll
Copyright @copyright{} 2010- CFEngine AS

@end titlepage


@c *************************** File begins here ************************

v
@ifinfo
@dircategory CFEngine Training
@direntry
* CFEngine Modularization:
                      CFEngine is a language based tool specifically
                      designed for configuring and maintaining
                      Unix-like operating systems attached
                      to a TCP/IP network.
@end direntry
@end ifinfo

@ifnottex
@node Top
@top CFEngine-Tutorial
@end ifnottex
@iftex
@contents
@end iftex

@ifhtml
@html
<a href="#Contents"><h1>COMPLETE TABLE OF CONTENTS</h1></a>
<h2>Summary of contents</h2>
@end html
@end ifhtml




@unnumberedsec What does upgrading mean?

@sp 1

A software upgrade involves obtaining a new version of the CFEngine
software from software.CFEngine.com and installing it in place of the
old.  When software is updated, the previous version of the software
is retained.

@sp 1
@cartouche
@i{From version 1.1 of CFEngine Nova, CFEngine is fully capable of
managing its own updates and service restarts with a minimum of manual
work on the policy server.}

@i{Existing users of version 1.0 will need to upgrade the software
manually on the affected systems, or use the existing CFEngine to
assist in the manual process. Please contact CFEngine Professional
Services for for assistance (see Appendix).}
@end cartouche
@sp 1

@unnumberedsec Why do I need to upgrade?

@sp 1

Bug fixes and new features are included in new software releases. To
gain access to these fixes, you need to upgrade the software.  Changes
to the standard Community Open Promise Body Library might make use of
new features, so upgrading brings you access to these new methods.

@unnumberedsec How does upgrading work?
@sp 1

CFEngine packages its software in operating sytsem compatible package
formats (RPM, PKG, MSI, etc). New packages are made available on the
software.CFEngine.com website; these can be downloaded and installed
in the standard way.

@enumerate
@item Go to the @code{software.cfengine.com} website
@item Select the version of the software you require
@item Download the particular package for your operating systems to a
correspondingly named subdirectory on your policy server under
@file{/var/cfengine/master_software_updates}, or simply mirror the entire file
tree on your policy server under
@*
@file{/var/cfengine/master_software_updates}.
@end enumerate

@itemize
@item You do not need to delete the contents of the work directory, e.g. @file{/var/cfengine}
to upgrade. An upgrade only involves changing the binary code base. 

@item You might wish to take advantage of changes to the Nova base policy, e.g.
the @file{update.cf} policy.

@item You can upgrade systems manually by copying the relevant package
to the local host and running the appropriate package update command (see summary below).

@item To upgrade all of your systems automatically, you only need to copy a
new package release to a specially designated location on your policy
server, and CFEngine will do the rest. Each CFEngine client will
detect the presence of the update, download it, install and restart
CFEngine services locally. Thus you can deploy software using a single
point of management.
@end itemize

 
@cartouche
Commonly used commands used to install packages (see also Appendix A):
@smallexample
  Debian or Ubuntu: dpkg --install  cfengine-nova-xxx.deb
  Windows:          Double click or run msiexec /qn /i cfengine-nova-xxx.msi
  RPM families:     rpm -ivh cfengine3-nova-xxx.rpm
  FreeBSD:          pkg_add cfengine3-nova-xxx.tbz
  Solaris:          gunzip cfengine3-nova-xxx.pkg.gz \
                    && pkgadd -d cfengine3-nova-xxx.pkg all
@end smallexample
@end cartouche

@unnumberedsec How can I do phased deployment?
@sp 1


Using CFEngine classes to select a subset of machines, you can deploy
of updates on a small number of test systems first.


@unnumberedsec What if I have multiple operating system platforms?
@sp 1

As of version 1.1 of CFEngine Nova, CFEngine will look for updates
in an operating specific location on the policy server. To update
a particular operating system, you only  need to place its package in the
correct subdirectory and the client host will know where to look.

The current directory structure mirrors that at the software.cfengine.com
website.

@smallexample

centos_5_i686/    freebsd_7.0_i386/                suse_10_i686/
centos_5_x86_64/  freebsd_7.2_amd64/               suse_11_i686/
debian_3_i686/    freebsd_7.2_i386/                suse_11_x86_64/
debian_4_i686/    freebsd_8.0_i386/                suse_9_i686/
debian_5_i686/    redhatenterpriseas_3_i686/       ubuntu_8_i686/
debian_5_x86_64/  redhatenterpriseas_4_i686/       ubuntu_8_x86_64/
fedora_10_i686/   redhatenterpriseas_4_x86_64/     ubuntu_9_i686/
fedora_10_x86_64/ redhatenterpriseserver_5_i686/   ubuntu_9_x86_64/
fedora_11_i686/   redhatenterpriseserver_5_x86_64/ windows_i686/
fedora_11_x86_64/ sunos_5.10_i86pc/                windows_x86_64/
fedora_12_i686/   sunos_5.10_sparc/
fedora_12_x86_64/ sunos_5.9_sparc/

@end smallexample


@unnumberedsec How do Nova policies update if I already have my own policy?
@sp 1

New CFEngine package updates will not overwrite your existing policy.
That means that they will also not improve your current updating arrangement
without your approval.

@sp 1
@cartouche
If you want to make use of CFEngine's enhancements to standard policy
files like @file{update.cf}, you need to examine and integrate these
changes to your policy server manually. 


Update the software before updating policy, as new policy might
require new features in the software. 
@end cartouche

@sp 1
If you require assistance
upgrading, contact CFEngine Support.

@appendix Manual package upgrade commands

Upgrading manually involved uninstalling and then reinstalling a package. You do not need
to delete CFEngine working data when upgrading.
Commonly used commands used to install packages:

@smallexample


  Debian or Ubuntu: 
                    dpkg --purge    cfengine-nova-old.deb
                    dpkg --install  cfengine-nova-xxx.deb

  Windows:          
                    msiexec /qn /x cfengine-nova-old.msi
                    msiexec /qn /i cfengine-nova-xxx.msi

  RPM families:     
                    rpm -e --nodeps cfengine3-nova-old.rpm
                    rpm -ivh cfengine3-nova-xxx.rpm

  FreeBSD:          
                    pkg_delete cfengine3-nova-old.tbz
                    pkg_add cfengine3-nova-xxx.tbz


  Solaris:          
                    pkgrm -n -a cfengine3-nova-old.pkg

                    gunzip cfengine3-nova-xxx.pkg.gz \
                    && pkgadd -d cfengine3-nova-xxx.pkg all

@end smallexample

Note that repository commands like @code{yum} or @code{zypper}
can not be used during manual upgrade, unless you have arranged
a private local repository for the CFEngine Nova packages. 

@bye
