#
#  Copyright (C) CFEngine AS
# 
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License LGPL as published by the
#  Free Software Foundation; version 3.
#   
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  To the extent this program is licensed as part of the Enterprise
#  versions of CFEngine, the applicable Commerical Open Source License
#  (COSL) may apply to this file if you as a licensee so wish it. See
#  included file COSL.txt.
#
#######################################################
# xinetd services hardening
#######################################################
# Scenario:
#  There are some xinetd services that we do not want to run at bootup
#
# CATEGORY:
#  Security
#
# LICENSE:
#  COPBL
#
# PLATFORMS:
#  Redhat, CentOS, Fedora
#
# DESCRIPTION:
#  We have a list of unwanted services and disable them from enabling at bootup
# stage with /sbin/chkconfig. Here are services which would be disabled.   
#
#    "chargen",
#    "chargen-udp",
#    "cup-lpd",
#    "daytime",
#    "daytime-upd",
#    "echo",
#    "echo-udp",
#    "eklogin",
#    "finger",
#    "gssftp",
#    "imap",
#    "imaps",
#    "ipop2",
#    "ipop3",
#    "krb5-telnet",
#    "klogin",
#    "kshell",
#    "ktalk",
#    "ntalk",
#    "pop3s",
#    "rexec",
#    "rlogin",
#    "rsh",
#    "rsync",
#    "servers",
#    "services",
#    "sgi_fam",
#    "talk",
#    "telnet",
#    "tftp",
#    "time",
#    "time-udp",
#    "vsftpd",
#    "wu-ftpd",
#
# REQUIREMENT:
#  CFEngine version 3.x.x
#  inputs => {
#             "security/sec_harden_xinetd.cf", 
#             "cfengine_stdlib.cf",
#             };
# 
# USAGE:
#  In bundlesequence/methods, do like the following;
#
#   bundlesequence => {
#                      sec_harden_xinetd,
#                     };
#
# or
#
#  methods:
#   "HARDEN XINETD" usebundle => sec_harden_xinetd;
#    
#  To add more values, feel free to modify this file under vars: stanza
#
# CHANGES:
#  
#
# Author:
#  Nakarin Phooripoom
#
#
#

bundle agent sec_harden_xinetd
{
 vars:

  redhat|centos|fedora::

   # list all of xinetd services (case sensitive) to be disalbed.

   "xinetd_services"   slist => {
                                 "chargen",
                                 "chargen-udp",
                                 "cup-lpd",
                                 "daytime",
                                 "daytime-upd",
                                 "echo",
                                 "echo-udp",
                                 "eklogin",
                                 "finger",
                                 "gssftp",
                                 "imap",
                                 "imaps",
                                 "ipop2",
                                 "ipop3",
                                 "krb5-telnet",
                                 "klogin",
                                 "kshell",
                                 "ktalk",
                                 "ntalk",
                                 "pop3s",
                                 "rexec",
                                 "rlogin",
                                 "rsh",
                                 "rsync",
                                 "servers",
                                 "services",
                                 "sgi_fam",
                                 "talk",
                                 "telnet",
                                 "tftp",
                                 "time",
                                 "time-udp",
                                 "vsftpd",
                                 "wu-ftpd",
                                },
                     comment => "List of xinetd services which would be disabled at bootup",
                      handle => "sec_harden_xinetd_vars_xinetd_services";

 methods:

   # perform the actual disable all xinetd services according to the list above

  redhat|centos|fedora::

   "disable xinetd"  usebundle => disable_xinetd("$(xinetd_services)"),
                       comment => "Call a bundle to disable xinetd services",
                        handle => "sec_harden_xinetd_methods_disable_xinetd_redhat_centos_fedora";

}

#######################################################

bundle agent disable_xinetd(name)
{
 vars:

  any::

   "status"  string => execresult("/sbin/chkconfig --list $(name)", "noshell"),
            comment => "Check a status of the service",
             handle => "disable_xinetd_vars_status";

#

 classes:

  any::

   "on"  expression => regcmp(".*on","$(status)"),
            comment => "Check if to disable the service",
             handle => "disable_xinetd_classes_regcmp_on";
   "off" expression => regcmp(".*off","$(status)"),
            comment => "Check if to enable the service",
             handle => "disable_xinetd_classes_regcmp_off";

#
   
 commands:

  on::

     "/sbin/chkconfig $(name) off",
        comment => "disable $(name) service",
         handle => "disable_xinetd_commands_chkconfig_off",
         action => log_repaired("stdout","$(name) was disabled");
   
}
