#
#  Copyright (C) CFEngine AS
# 
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License LGPL as published by the
#  Free Software Foundation; version 3.
#   
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  To the extent this program is licensed as part of the Enterprise
#  versions of CFEngine, the applicable Commerical Open Source License
#  (COSL) may apply to this file if you as a licensee so wish it. See
#  included file COSL.txt.
#
#######################################################
# Tripwire Functionality
#######################################################
# Scenario:
#  To do a change management to system files
#
# CATEGORY:
#  Security
#
# LICENSE:
#  COPBL
#
# PLATFORMS:
#  Linux
#
# DESCRIPTION:
#  To check changes on a list of files from an inputs text files you specify.
# For this example, it is called "sec_tripwire.txt" 
# Here are the list that we are watching by default;
#
#    $ cat sec_tripwire.txt
#    # List of files to be watching by CFEngine
#    /etc/passwd
#    /etc/shadow
#    /etc/group
#    /etc/gshadow
#    /etc/services
#
# REQUIREMENT:
#  CFEngine version 3.x.x
#  an input file (sec_tripwire.txt for example) 
#  inputs => {
#             "security/sec_tripwire.cf", 
#             "cfengine_stdlib.cf",
#             };
# 
# USAGE:
#  In bundlesequence/methods, do like the following;
#
#   bundlesequence => {
#                       sec_tripwire("$(inputs)"),
#                     };
#
# or
#
#  methods:
#   "TRIPWIRE" usebundle => sec_tripwire("$(inputs)");
#
#  $(inputs) = a full path to an inputs file = "/root/sec_tripwire.txt"
#    
#  To input more watched files, feel free to modify the text file directly
#
# CHANGES:
#  
#
# Author:
#  Nakarin Phooripoom
#
#
#


bundle agent sec_tripwire(inputs)
{
 vars:
  
  any::

   "mylist"   slist => readstringlist("$(inputs)","#[^\n]*","\n","100","99999999"),
            comment => "Create a list of watched files from an inputs",
             handle => "sec_tripwire_vars_mylist";

#

 classes:

  any::

   "have_mylist" expression => isvariable("mylist"),
                    comment => "Check if there is a mylist variable then create a class have_mylist",
                     handle => "sec_tripwire_classes_have_mylist_variable";

#

 files:

  have_mylist::

   "$(mylist)"
      comment => "Trip all watched files here",
       handle => "sec_tripwire_files_trip_mylist",
      changes => detect_content;

}
