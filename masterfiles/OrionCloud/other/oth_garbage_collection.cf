#
#  Copyright (C) CFEngine AS
# 
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License LGPL as published by the
#  Free Software Foundation; version 3.
#   
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  To the extent this program is licensed as part of the Enterprise
#  versions of CFEngine, the applicable Commerical Open Source License
#  (COSL) may apply to this file if you as a licensee so wish it. See
#  included file COSL.txt.
#
#######################################################
# Garbage collection
#######################################################
# Scenario:
# - Log rotations
# - Remove files/directories old than a certain day
#
# CATEGORY:
#  Other
#
# LICENSE:
#  COPBL
#
# PLATFORMS:
#  any but not Darwin and Windows
#
# DESCRIPTION:
#  To do log rotations to specific files with CFEngine and also remove files/directories older than
# specific days. Feel free to add more file/directorie promises in the bundle.
#
# REQUIREMENT:
#  CFEngine version 3.x.x
#  Public/Private software repository
#  inputs => {
#             "other/oth_garbage_collection.cf", 
#             "cfengine_stdlib.cf",
#             };
# 
# USAGE:
#  In bundlesequence/methods, do like the following;
#
#   bundlesequence => {
#                       oth_garbage_collection,
#                     };
#
# or
#
#  methods:
#   "ROTATE+PURGE" usebundle => oth_garbage_collection;
#
#    
# CHANGES:
#  
#
# Author:
#  Nakarin Phooripoom
#
#
#

bundle agent oth_garbage_collection
{
 files:

  Sunday.nova_edition::

   "$(sys.workdir)/nova_repair.log" 
      comment => "Rotate the promises repaired logs each week",
       handle => "oth_garbage_collection_files_nova_repair_log",
       rename => rotate("7"),
       action => if_elapsed("10000");

   "$(sys.workdir)/nova_notkept.log" 
      comment => "Rotate the promises not kept logs each week",
       handle => "oth_garbage_collection_files_nova_notkept_log",
       rename => rotate("7"),
       action => if_elapsed("10000");

   "$(sys.workdir)/promise.log" 
      comment => "Rotate the promises not kept logs each week",
       handle => "oth_garbage_collection_files_promise_log",
       rename => rotate("7"),
       action => if_elapsed("10000");

  any::

   "$(sys.workdir)/outputs" 
           comment => "Garbage collection of any output files",
            handle => "oth_garbage_collection_files_outputs_dir",
            delete => tidy,
       file_select => days_old("3"),
      depth_search => recurse("inf");

  # Other resources

  !darwin.!windows::

#   "/tmp" 
#           comment => "Garbage collection of any temporary files",
#            handle => "oth_garbage_collection_files_tmp_dir",
#            delete => tidy,
#       file_select => days_old("3"),
#      depth_search => recurse("inf");
  
   "/var/log/apache2/.*bz" 
          comment => "Garbage collection of rotated log files",
           handle => "oth_garbage_collection_files_apache2_bz_log",
           delete => tidy,
      file_select => days_old("30");

   "/var/log/apache2/.*gz" 
          comment => "Garbage collection of rotated log files",
           handle => "oth_garbage_collection_files_apache2_gz_log",
           delete => tidy,
      file_select => days_old("30");

  SuSE::

  "/var/log/zypper.log"
     comment => "Prevent the zypper log from choking the disk",
      handle => "oth_garbage_collection_files_zypper_log",
      rename => rotate("0"),
      action => if_elapsed("10000");

}
