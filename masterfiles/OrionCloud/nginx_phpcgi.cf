# 
# The Cfengine Cloud Pack, Copyright  (C) Cfengine AS, Oslo Norway
# --------------------------------------------------------------------
# 
# This file is provided under a perpetual license as part of tjhe
# Cfengine Cloud Pack (hereby called The Software). The Software may be
# used within a single Internet Domain. If no Internet Domain is
# registered, it may be used within a single legal organization
# possessing a maximum of 1024 computers, or by a single individual with
# up to 250 computers. Multiple licenses may be purchased, as needed.
# 
# The Licensee may modify, adapt and create derivative works based upon
# the Software, for use within its organisation and for sharing between
# other consecutive licensees. However, the Licensee shall not
# reproduce, distribute, resell, rent, lease or disclose the Software in
# any manner or form to any other third party not holding a license for
# the Software.
# 
# The Licensee may not transfer any of its rights under this agreement
# without the prior and express written consent of Cfengine.
# 
# INTELLECTUAL PROPERTY RIGHTS
# 
# Cfengine does not transfer any copyrights or other intellectual
# property rights relating to the Software to the Licensee. Such rights
# are protected by intellectual property legislation in the United
# States, Europe and other jurisdictions and by international treaty
# provisions. Cfengine and its suppliers retain all rights in the
# Software that are not expressly granted to the Licensee through this
# license.
# 
# The Licensee is not allowed to remove, alter or destroy any proprietary,
# trademark or copyright markings or notices placed upon or contained
# within the Software.
# 
# NO WARRANTY
# 
# To the maximum extent permitted by law, Cfengine disclaims any
# warranty for the Software. The Software, any services and any related
# documentation are provided on an "as is" basis without warranty of any
# kind, whether express or implied, including, but not limited to,
# implied warranties of merchantability, fitness for a particular
# purpose or non-infringement. Hereunder the parties acknowledges that
# Cfengine does not warrant for the performance of any data centre on
# which the Software runs, or the absence of any errors in the Software,
# and that any such errors does not constitute a contractual defect.
# 
# LIABILITY
# 
# The liability of the parties in contract, tort (including negligence)
# or otherwise shall for all incidents during the entire term of 30 days
# from the date of purchase be limited to a half of the fees paid for a
# perpetual license. Cfengine or its suppliers shall not be liable for
# any special, incidental, indirect or consequential damages whatsoever
# (including, without limitation, damages for loss of business profits,
# lost savings, business interruption, loss of business information,
# personal injury, loss of privacy, loss of goodwill or any other
# financial loss) arising out of the use of or inability to use the
# Software, even if advised of the possibility of such damages.
# 
# THIRD-PARTY TERMS
# 
# For third-party software that is integrated with or used by
# Cfengine, the current terms of the relevant third party software
# supplier shall apply.
#
#######################################################
# NGINX webserver with phpCGI
#######################################################
#
# Scenario:
# Setup NGINX webserver, supporting phpCGI
#

bundle agent app_nginx_phpcgi
{
 vars:

  any::

   "cache_dir" string => "$(sys.workdir)/cache";

   "mysite"          string => "example.com";
   "mysite_root_dir" string => "/srv/www";
   "dirs"            slist => {
                               "public_html",
                               "logs"
                              };

  ubuntu::

    "nginx_user"  string => "www-data";
    "nginx_group" string => "www-data";
    "nginx_pkgs"   slist => {
                             "nginx",
                             "php5-cli",
                             "php5-cgi",
                             "spawn-fcgi",
                             "build-essential",
                             "wget"
                            };

  centos::

    "nginx_user"  string => "nginx";
    "nginx_group" string => "nginx";
    "nginx_pkgs"   slist => {
                             "nginx",
                             "php-cli",
                             "php",
                             "make",
                             "automake",
                             "gcc",
                             "gcc-c++",
                             "wget",
                             "spawn-fcgi"
                            };

#

 classes:

  centos_5::

   "no_epel" not => fileexists("/etc/yum.repos.d/epel.repo");

#

 files:

  any::

   "$(mysite_root_dir)/www.$(mysite)/$(dirs)/."
      comment => "create some directories",
       create => "true",
        perms => mog("755","$(nginx_user)","$(nginx_group)");

   "$(mysite_root_dir)/www.$(mysite)"
        perms => mog("755","$(nginx_user)","$(nginx_group)");

   "$(cache_dir)/www.$(mysite)"
            comment => "example to define a site's virtual host file",
             create => "true",
              perms => mog("755","$(nginx_user)","$(nginx_group)"),
      edit_defaults => empty,
          edit_line => site_virtual_host("$(mysite_root_dir)","$(mysite)");

   "/etc/nginx/sites-available/www.$(mysite)"
        comment => "copy site's virtual host file to sites-available",
      copy_from => local_cp("$(cache_dir)/www.$(mysite)"),
          perms => mog("755","$(nginx_user)","$(nginx_group)");

   "/etc/nginx/sites-enabled/www.$(mysite)"
        comment => "Create a symbolic link to a virtual host",
      link_from => ln_s("/etc/nginx/sites-available/www.$(mysite)");

  ubuntu::

   "$(cache_dir)/php-fastcgi"
            comment => "Create a wrapper script for spawn-fcgi",
             create => "true",
              perms => mog("755","root","root"),
      edit_defaults => empty,
          edit_line => php_fastcgi_ubuntu;

   "/usr/bin/php-fastcgi"
        comment => "Copy the spawn-fcgi scrpit to a right place",
      copy_from => local_cp("$(cache_dir)/php-fastcgi"),
          perms => mog("755","root","root");

   "$(cache_dir)/php-fastcgi"
            comment => "Create an init script for fast-cgi",
             create => "true",
              perms => mog("755","root","root"),
      edit_defaults => empty,
          edit_line => initd_php_fastcgi_ubuntu;

   "/etc/init.d/php-fastcgi"
        comment => "Copy the init fast-cgi script to init.d",
      copy_from => local_cp("$(cache_dir)/php-fastcgi"),
          perms => mog("755","root","root"),
        classes => if_ok("ensure_php_fastcgi_running");

  centos::

   "$(cache_dir)/php-fastcgi"
            comment => "Create a wrapper script for spawn-fcgi",
             create => "true",
              perms => mog("755","root","root"),
      edit_defaults => empty,
          edit_line => php_fastcgi_centos;

   "/usr/bin/php-fastcgi"
        comment => "Copy the spawn-fcgi script to a right place",
      copy_from => local_cp("$(cache_dir)/php-fastcgi"),
          perms => mog("755","root","root");

   "$(cache_dir)/php-fastcgi"
            comment => "Create an init script for fast-cgi",
             create => "true",
              perms => mog("755","root","root"),
      edit_defaults => empty,
          edit_line => initd_php_fastcgi_centos;

   "/etc/init.d/php-fastcgi"
        comment => "Copy the init fast-cgi script to init.d",
      copy_from => local_cp("$(cache_dir)/php-fastcgi"),
          perms => mog("755","root","root"),
        classes => if_ok("ensure_php_fastcgi_running");
      
#

 packages:

  any::

   "$(nginx_pkgs)"

             comment => "Prepare NGINX with PHP-CGI installed",
      package_policy => "add",
      package_method => generic;

#

 processes:

  any::

   ".*nginx.*"
      restart_class => "start_nginx";

  ubuntu::

   ".*php5-cgi"
      restart_class => "start_php_cgi";

  centos::

   ".*php-cgi"
      restart_class => "start_php_cgi";

#

 commands:

  start_nginx::
  
  "/etc/init.d/nginx start"
     comment => "Ensure nginx running";

  start_php_cgi.ensure_php_fastcgi_running::

   "/etc/init.d/php-fastcgi start"
      comment => "Launch php-fastcgi";

  no_epel.32_bit::

   "/bin/rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-3.noarch.rpm"
      comment => "Setup EPEL repo to install NGINX";

  no_epel.64_bit::

   "/bin/rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/x86_64/epel-release-5-3.noarch.rpm"
      comment => "Setup EPEL repo to install NGINX";
}

######################################################################

bundle edit_line php_fastcgi_ubuntu
{
 insert_lines:
"#!/bin/sh
/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9000 -C 6 -u www-data -f /usr/bin/php5-cgi";
}

######################################################################

bundle edit_line php_fastcgi_centos
{
 insert_lines:
"#!/bin/sh
/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9000 -u nginx -g nginx -f /usr/bin/php-cgi";
}

######################################################################

bundle edit_line initd_php_fastcgi_ubuntu
{
 insert_lines:
"#!/bin/bash
PHP_SCRIPT=/usr/bin/php-fastcgi
FASTCGI_USER=www-data
RETVAL=0
case \"$(const.dollar)1\" in
    start)
      su - $(const.dollar)FASTCGI_USER -c $(const.dollar)PHP_SCRIPT
      RETVAL=$(const.dollar)?
  ;;
    stop)
      killall -9 php5-cgi
      RETVAL=$(const.dollar)?
  ;;
    restart)
      killall -9 php5-cgi
      su - $(const.dollar)FASTCGI_USER -c $(const.dollar)PHP_SCRIPT
      RETVAL=$(const.dollar)?
  ;;
    *)
      echo \"Usage: php-fastcgi {start|stop|restart}\"
      exit 1
  ;;
esac
exit $(const.dollar)RETVAL";
}

######################################################################

bundle edit_line initd_php_fastcgi_centos
{
 insert_lines:
"#!/bin/sh
#
# php-fastcgi - Use PHP as a FastCGI process via nginx.
#
# chkconfig: - 85 15
# description: Use PHP as a FastCGI process via nginx.
# processname: php-fastcgi
# pidfile: /var/run/php-fastcgi.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ \"$(const.dollar)NETWORKING\" = \"no\" ] && exit 0

phpfastcgi=\"/usr/bin/php-fastcgi\"
prog=$(const.dollar)(basename php-cgi)

lockfile=/var/lock/subsys/php-fastcgi

start() {
[ -x $(const.dollar)phpfastcgi ] || exit 5
echo -n $(const.dollar)\"Starting $(const.dollar)prog: \"
daemon $(const.dollar)phpfastcgi
retval=$(const.dollar)?
echo
[ $(const.dollar)retval -eq 0 ] && touch $(const.dollar)lockfile
return $(const.dollar)retval
}

stop() {
echo -n $(const.dollar)\"Stopping $(const.dollar)prog: \"
killproc $(const.dollar)prog
retval=$(const.dollar)?
echo
[ $(const.dollar)retval -eq 0 ] && rm -f $(const.dollar)lockfile
return $(const.dollar)retval
}

restart() {
configtest || return $(const.dollar)?
stop
start
}

reload() {
configtest || return $(const.dollar)?
echo -n $(const.dollar)\"Reloading $prog: \"
killproc $(const.dollar)prog -HUP
RETVAL=$(const.dollar)?
echo
}

force_reload() {
restart
}

rh_status() {
status $(const.dollar)prog
}

rh_status_q() {
rh_status >/dev/null 2>&1
}

case \"$(const.dollar)1\" in
start)
rh_status_q && exit 0
$(const.dollar)1
;;
stop)
rh_status_q || exit 0
$(const.dollar)1
;;
restart|configtest)
$(const.dollar)1
;;
reload)
rh_status_q || exit 7
$(const.dollar)1
;;
force-reload)
force_reload
;;
status)
rh_status
;;
condrestart|try-restart)
rh_status_q || exit 0
;;
*)
echo $(const.dollar)\"Usage: $(const.dollar)0 {start|stop|status|restart}\"
exit 2
esac";
}

######################################################################

bundle edit_line site_virtual_host(dir,site)
{
 insert_lines:
"server {
    listen   80;
    server_name www.$(site) $(site);
    access_log $(dir)/www.$(site)/logs/access.log;
    error_log $(dir)/www.$(site)/logs/error.log;

    location / {
        root   $(dir)/www.$(site)/public_html;
        index  index.html index.htm;
    }

    location ~ \.php$(const.dollar) {
        include /etc/nginx/fastcgi_params;
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param  SCRIPT_FILENAME  $(dir)/www.$(site)/public_html$(const.dollar)fastcgi_script_name;
    }
}";
}

######################################################################