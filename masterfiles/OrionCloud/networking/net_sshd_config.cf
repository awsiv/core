#
#  Copyright (C) CFEngine AS
# 
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License LGPL as published by the
#  Free Software Foundation; version 3.
#   
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  To the extent this program is licensed as part of the Enterprise
#  versions of CFEngine, the applicable Commerical Open Source License
#  (COSL) may apply to this file if you as a licensee so wish it. See
#  included file COSL.txt.
#
#######################################################
# SSHD configuration
#######################################################
# Scenario:
#  Ensure SSHD configuration is in a right stage
#
# CATEGORY:
#  Networking
#
# LICENSE:
#  COPBL
#
# PLATFORMS:
#  Redhat, CentOS, Fedora, Debian, Ubuntu, SUSE
#
# DESCRIPTION:
#  To add/replace SSHD options/values based on its keywords. Aslo ensure that
# SSHD process is up and running. Here are default values;
#     Port 22
#     Protocol 2
#     PermitEmptyPasswords no
#     PermitRootLogin no   
#
# REQUIREMENT:
#  CFEngine version 3.x.x
#  inputs => {
#             "networking/net_sshd_config.cf", 
#             "cfengine_stdlib.cf",
#             };
# 
# USAGE:
#  In bundlesequence/methods, do like the following;
#
#   bundlesequence => {
#                       net_sshd_config("$(state)"),
#                     };
#
# or
#
#  methods:
#   "SSHD CONFIG" usebundle => net_sshd_config("$(state)");
#
#  $(state) = "on"    -> to correct SSHD configuration and process
#  $(state) = "purge" -> to kill all SSHD processes
#    
#  To add more values, feel free to modify this file under vars: stanza
#
# CHANGES:
#  
#
# Author:
#  Nakarin Phooripoom
#
#
#

bundle agent net_sshd_config(state)
{
 vars:

  !windows.on::

# Add sshd option here following a pattern
# "sshd_config[keyword]"  string => "value/option";
# <start here>

   "sshd_config[Port]"                 string => "22";
   "sshd_config[Protocol]"             string => "2";
   "sshd_config[PermitEmptyPasswords]" string => "no";
   "sshd_config[PermitRootLogin]"      string => "no";

# <end here>

   "sshd"   slist => getindices("sshd_config");
          comment => "Get a list of keys to an array for SSHD configuration",
           handle => "net_sshd_config_vars_getindices_sshd";   

#

 classes:

  any::

   "on"     expression => strcmp("$(state)","on"),
               comment => "Check if to install packages",
                handle => "net_sshd_config_classes_strcmp_on";
   "purge"  expression => strcmp("$(state)","purge"),
               comment => "Check if to remove packages",
                handle => "net_sshd_config_classes_strcmp_purge";

#

 files:

  !windows.on::

   "/etc/ssh/sshd_config"
      comment => "Replce existing values with specific ones from SSHD array",
       handle => "net_sshd_config_files_sshd_config_replace",
      edit_line => maintain_sshd_config_replace("$(sshd)","$(sshd_config[$(sshd)])"),
        classes => if_repaired("conf_changed");

   "/etc/ssh/sshd_config"
      comment => "Add new ones if does not exist",
       handle => "net_sshd_config_files_sshd_config_add",
      edit_line => maintain_sshd_config_add("$(sshd)","$(sshd_config[$(sshd)])"),
        classes => if_repaired("conf_changed");

#

 processes:

  !windows.on::

   ".*sshd.*"
      comment => "Check process table for SSHD process if not create a class to restart the process",
       handle => "net_sshd_config_processes_restart_sshd",
      restart_class => "start_sshd";

  !windows.purge::

   ".*sshd.*"
      comment => "Check process table for SSHD process if there is then terminate the process",
       handle => "net_sshd_config_processes_terminate_sshd",
      signals => { "term", "kill" };

#

 commands:

  (start_sshd|conf_changed).(redhat|centos|fedora|suse|SuSE)::

   "/sbin/service sshd restart"
      comment => "Restart command for Redhat-related and SUSE distributions",
       handle => "net_sshd_config_commands_restart_sshd_redhat_centos_fedora_suse";

  (start_sshd|conf_changed).(debian|ubuntu)::

   "/etc/init.d/sshd restart"
      comment => "Restart command for Debian-related distriburions",
       handle => "net_sshd_config_commands_restart_sshd_debian_ubuntu";

}

#####

bundle edit_line maintain_sshd_config_replace(keyword,option)
{
 replace_patterns:
   "^$(keyword)\h+(?!$(option)).*"
           comment => "Check pattern then replace it with a specific one",
            handle => "maintain_sshd_config_replace_patterns_001",
      replace_with => value("$(keyword)dummy");
   "^$(keyword)dummy"
           comment => "Check pattern then replace it with a specific one",
            handle => "maintain_sshd_config_replace_patterns_002",
      replace_with => value("$(keyword) $(option)");
}

bundle edit_line maintain_sshd_config_add(keyword,option)
{
 delete_lines:
   "^$(keyword)\h+(?!$(option)).*"
      comment => "Delete all lines which match the pattern",
       handle => "maintain_sshd_config_delete_lines";

 insert_lines:
   "$(keyword) $(option)"
      comment => "Add a line by the input",
       handle => "maintain_sshd_config_insert_lines";
}

