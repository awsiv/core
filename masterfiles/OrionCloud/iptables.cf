# 
# The Cfengine Cloud Pack, Copyright  (C) Cfengine AS, Oslo Norway
# --------------------------------------------------------------------
# 
# This file is provided under a perpetual license as part of tjhe
# Cfengine Cloud Pack (hereby called The Software). The Software may be
# used within a single Internet Domain. If no Internet Domain is
# registered, it may be used within a single legal organization
# possessing a maximum of 1024 computers, or by a single individual with
# up to 250 computers. Multiple licenses may be purchased, as needed.
# 
# The Licensee may modify, adapt and create derivative works based upon
# the Software, for use within its organisation and for sharing between
# other consecutive licensees. However, the Licensee shall not
# reproduce, distribute, resell, rent, lease or disclose the Software in
# any manner or form to any other third party not holding a license for
# the Software.
# 
# The Licensee may not transfer any of its rights under this agreement
# without the prior and express written consent of Cfengine.
# 
# INTELLECTUAL PROPERTY RIGHTS
# 
# Cfengine does not transfer any copyrights or other intellectual
# property rights relating to the Software to the Licensee. Such rights
# are protected by intellectual property legislation in the United
# States, Europe and other jurisdictions and by international treaty
# provisions. Cfengine and its suppliers retain all rights in the
# Software that are not expressly granted to the Licensee through this
# license.
# 
# The Licensee is not allowed to remove, alter or destroy any proprietary,
# trademark or copyright markings or notices placed upon or contained
# within the Software.
# 
# NO WARRANTY
# 
# To the maximum extent permitted by law, Cfengine disclaims any
# warranty for the Software. The Software, any services and any related
# documentation are provided on an "as is" basis without warranty of any
# kind, whether express or implied, including, but not limited to,
# implied warranties of merchantability, fitness for a particular
# purpose or non-infringement. Hereunder the parties acknowledges that
# Cfengine does not warrant for the performance of any data centre on
# which the Software runs, or the absence of any errors in the Software,
# and that any such errors does not constitute a contractual defect.
# 
# LIABILITY
# 
# The liability of the parties in contract, tort (including negligence)
# or otherwise shall for all incidents during the entire term of 30 days
# from the date of purchase be limited to a half of the fees paid for a
# perpetual license. Cfengine or its suppliers shall not be liable for
# any special, incidental, indirect or consequential damages whatsoever
# (including, without limitation, damages for loss of business profits,
# lost savings, business interruption, loss of business information,
# personal injury, loss of privacy, loss of goodwill or any other
# financial loss) arising out of the use of or inability to use the
# Software, even if advised of the possibility of such damages.
# 
# THIRD-PARTY TERMS
# 
# For third-party software that is integrated with or used by
# Cfengine, the current terms of the relevant third party software
# supplier shall apply.
#
#######################################################
# Iptables
#######################################################
# Scenario:
# Secure the system by sysctl.conf and iptable firewall
# 

bundle agent security_access_iptables
{
 vars:

  any::

   "cache_dir"      string => "$(sys.workdir)/cache";

   "sysctl_conf"    string => "/etc/sysctl.conf";

  centos::

   "iptables_redhat" string => "/etc/sysconfig/iptables";

  ubuntu::

   "iptables_debian" string => "/etc/iptables.rules";

#

 files:

  any::

   "$(cache_dir)/sysctl.conf"
            comment => "Create sysctl.conf cache file",
             create => "true",
      edit_defaults => empty,
          edit_line => restore_sysctl_conf;

   "$(sysctl_conf)"
        comment => "Ensure $(this.promiser) get converged",
      copy_from => local_cp("$(cache_dir)/sysctl.conf"),
        classes => if_repaired("run_sysctl_once");

  centos::

   "$(cache_dir)/iptables"
            comment => "Create iptables rule cache file",
             create => "true",
      edit_defaults => empty,
          edit_line => restore_iptables;

   "$(iptables_redhat)"
        comment => "Ensure $(this.promiser) in a perfect condition",
      copy_from => local_cp("$(cache_dir)/iptables"),
        classes => if_repaired("refresh_iptables");

  ubuntu::

   "$(cache_dir)/iptables.rules"
            comment => "Create iptables rule cache file",
             create => "true",
      edit_defaults => empty,
          edit_line => restore_iptables;

   "$(iptables_debian)"
        comment => "Ensure $(this.promiser) in a perfect condition",
      copy_from => local_cp("$(cache_dir)/iptables.rules"),
        classes => if_repaired("refresh_iptables");

#

 commands:

  run_sysctl_once::

   "/bin/echo /sbin/sysctl -p"
      comment => "run sysctl once";

  refresh_iptables.redhat::

   "/bin/echo /etc/init.d/iptables restart"
      comment => "Refresh iptables for a new policy";

  refresh_iptables.debian::

   "/bin/echo /sbin/iptables-restore < $(iptables_debian)"
      comment => "Refresh iptables for a new policy";
      
}

#################################################

bundle edit_line restore_sysctl_conf
{
vars:
 "list" string => 
"######################################
# This file is protected by cfengine #
######################################  
# Disable response to broadcasts.
# You don't want yourself becoming a Smurf amplifier.
net.ipv4.icmp_echo_ignore_broadcasts = 1
# Enable route verification on all interfaces
# (source address spoofing protection)
net.ipv4.conf.all.rp_filter = 1
# Enable ipV6 forwarding
#net.ipv6.conf.all.forwarding = 1
# Increase the number of possible inotify(7) watches
fs.inotify.max_user_watches = 65536
# Avoid deleting secondary IPs on deleting the primary IP
net.ipv4.conf.default.promote_secondaries = 1
net.ipv4.conf.all.promote_secondaries = 1
# Drop source routed packets
net.ipv4.conf.all.accept_source_route = 0
# Enable TCP SYN cookie protection from SYN floods
net.ipv4.tcp_syncookies =1
# Don't accept ICMP redirect messages
net.ipv4.conf.all.accept_redirects = 0
# Don't send ICMP redirect messages
net.ipv4.conf.all.send_redirects = 0
# Log packets with impossible source addresses
net.ipv4.conf.all.log_martians = 1";
                 
insert_lines:
 "$(list)";
}

#################################################

bundle edit_line restore_iptables
{
 vars:
  "list" string =>
"######################################
# This file is protected by cfengine #
###################################### 
#
# Turn on traffic filtering
*filter

# Set default policies
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]

# Accept all traffic from the loopback interface.
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Accept legitimate responses to traffic we generate.
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

# Allow incoming/outgoing TCP port 22 (ssh) traffic
-A INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT
-A OUTPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT

# Allow inbound/outbound DNS
-A INPUT -i eth0 -p udp --dport 53 -j ACCEPT
-A INPUT -i eth0 -p tcp --dport 53 -j ACCEPT
-A OUTPUT -o eth0 -p udp --dport 53 -j ACCEPT
-A OUTPUT -o eth0 -p tcp --dport 53 -j ACCEPT

# Allow all related traffic to/from non-privileged ports.
-A INPUT -p tcp -m tcp --sport 1024:65535 --dport 1024:65535 -m state --state RELATED,ESTABLISHED -j ACCEPT

# Forward all legitimate responses to forwarded traffic.
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT

# Make it all true.
COMMIT
# First revision on Tue 24 March 2010";

 insert_lines:
  "$(list)";
}