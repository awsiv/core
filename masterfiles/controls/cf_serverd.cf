###############################################################################
# This part is for cf-serverd
#
# General IP access policy for the connection protocol
#  i.e. access to the server itself.
# Access to specific files must be granted in addition.
###############################################################################

body server control

{

 denybadclocks         => "false";
 allowconnects         => { "127.0.0.1" , "::1", @(def.acl) };
 allowallconnects      => { "127.0.0.1" , "::1", @(def.acl) };
 trustkeysfrom         => { "127.0.0.1" , "::1", @(def.acl) };

 skipverify            => { ".*$(def.domain)", "127.0.0.1" , "::1", @(def.acl) };

 allowusers            => { "root" };

 maxconnections        => "100";

 windows::
  cfruncommand => "$(sys.cf_twin) -f \"$(sys.workdir)\inputs\update.cf\" & $(sys.cf_agent)";

 hpux::
  cfruncommand => "/bin/sh -c \"SHLIB_PATH=\"/var/cfengine/lib-twin\" $(sys.cf_twin) -f $(sys.workdir)/inputs/update.cf ; $(sys.cf_agent)\"";

 aix::
  cfruncommand => "/bin/sh -c \"LIBPATH=\"/var/cfengine/lib-twin\" $(sys.cf_twin) -f $(sys.workdir)/inputs/update.cf ; $(sys.cf_agent)\"";

 !(windows|hpux|aix)::
  cfruncommand => "/bin/sh -c \"LD_LIBRARY_PATH=\"/var/cfengine/lib-twin\" $(sys.cf_twin) -f $(sys.workdir)/inputs/update.cf ; $(sys.cf_agent)\"";

}

###############################################################################

bundle server access_rules()

{

 access:

  any::

   "$(def.dir_masterfiles)"
       handle => "server_access_grant_access_policy",
      comment => "Grant access to the policy updates",
      admit   => { ".*$(def.domain)", @(def.acl) };

   "$(def.dir_software)"
       handle => "server_access_grant_access_datafiles",
      comment => "Grant access to software updates",
      admit   => { ".*$(def.domain)", @(def.acl) };

   "$(def.dir_bin)"
       handle => "server_access_grant_access_binary",
      comment => "Grant access to binary for cf-runagent",
      admit   => { ".*$(def.domain)", @(def.acl) };

   "$(def.dir_modules)"
       handle => "server_access_grant_access_modules",
      comment => "Grant access to modules directory",
      admit   => { ".*$(def.domain)", @(def.acl) };

   "/bin/sh"
       handle => "server_access_grant_access_shell_cmd",
      comment => "Grant access to shell for cfruncommand",
      admit   => { "$(sys.policy_hub)" };

   "delta"
             handle => "server_access_grant_delta",
            comment => "Grant delta reporting query for the hub",
      resource_type => "query",
            admit   => { "$(sys.policy_hub)" };
   "full"
             handle => "server_access_grant_full",
            comment => "Grant full reporting query for the hub",
      resource_type => "query",
            admit   => { "$(sys.policy_hub)" };

# Uncomment the promise below to allow cf-runagent to
# access cf-agent on Windows machines
#	
#  "c:\program files\cfengine\bin\cf-agent.exe"
#
#    handle => "grant_access_policy_agent",
#    comment => "Grant access to the agent (for cf-runagent)",
#    admit   => { ".*$(def.domain)", @(def.acl) };	

	
 roles:

# Use roles to allow specific remote cf-runagent users to
# define certain soft-classes when running cf-agent on this host

   ".*" authorize => { "root" };
	
}
