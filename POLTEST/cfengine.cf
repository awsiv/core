##################################################################
#
# Cfengine internal services
#
# Do not edit this file
#
##################################################################

bundle agent cfengine_processes
{
vars:

 "cf_components"       slist => { "cf-key", "cf-know", "cf-monitord", "cf-promises",
                                  "cf-report", "cf-runagent", "cf-serverd", "cf-hub" },
                     comment => "Define all cfengine robot agents",
                      handle => "cfengine_processes_vars_cf_components";

 windows::
   "stop_signal"      string => "kill",
                     comment => "Define a stop signal for Windows",
                      handle => "cfengine_processes_vars_stop_signal_windows";

 !windows::
   "stop_signal"      string => "term",
                     comment => "Define a stop signal for *NIX",
                      handle => "cfengine_processes_vars_stop_signal_unix";

#

classes:

  "restart_cf" expression => "Monday.Hr05.Min00_05",
                  comment => "Define a class to restart cfengine processes",
                   handle => "cfengine_processes_classes_restart_cf";

#

processes:

  restart_cf::

    "$(cf_components)" 

       signals => { "$(stop_signal)" },
       comment => "Kill cfengine processes",
        handle => "cfengine_processes_stop_cf_components";

  restart_cf.!windows::
    "cf-execd"  
       signals => { "$(stop_signal)" },
       comment => "Kill cf-execd process on *NIX",
        handle => "cfengine_processes_stop_cf_execd";

#

commands:

  restart_cf.!windows::

    "$(sys.cf_execd)"
       comment => "Restart cf-execd process",
        handle => "cfengine_processes_commands_cf_execd";

#

services:

  restart_cf.windows::
    "CfengineNovaExec"
    service_policy => "stop",
           comment => "Stop the executor service, part of scheduled restart",
            handle => "cfengine_processes_services_stop_cf_execd_windows";

    "CfengineNovaExec"
    service_policy => "start",
           comment => "Start the executor service, part of scheduled restart",
            handle => "cfengine_processes_services_start_cf_execd_windows";

#

reports:

  restart_cf::
    "Reloaded configuration of all Cfengine components",
       comment => "Alert restarting message",
        handle => "cfengine_processes_reports";

}

##################################################################################

bundle agent cfengine_enable
{
vars:
 freebsd::
  "rc_conf[cfengine3_enable]" string => "\"YES\"",
                             comment => "Define a variable to start cfengine at boot time",
                              handle => "cfengine_enable_vars_rc_conf";
 
 linux::
  "rc_files" slist => {
                       "/etc/rc1.d/K11cfengine3",
                       "/etc/rc2.d/S90cfengine3",
                       "/etc/rc3.d/S90cfengine3",
                       "/etc/rc4.d/S90cfengine3",
                       "/etc/rc5.d/S90cfengine3",
                       "/etc/rc6.d/K11cfengine3"
                       },
           comment => "Define a list of rc files on Linux",
            handle => "cfengine_enable_vars_rc_files";

#
 
files:
 freebsd::
  "/usr/local/etc/rc.d/cfengine3.sh"
     comment => "Ensure that the cfengine rc.d script is executable",
      handle => "cfengine_enable_files_rc_d",
       perms => mog("755", "root", "wheel");
 
  "/etc/rc.conf"
       comment => "cfengine libraries should be enabled in rc.conf if appropriate",
        handle => "cfengine_enable_files_rc_conf_1",
     edit_line => append_if_no_line("[ -e /var/cfengine/lib ] && /sbin/ldconfig -m /var/cfengine/lib");

  "/etc/rc.conf"
       comment => "cfengine should be enabled in rc.conf",
        handle => "cfengine_enable_files_rc_conf_2",
     edit_line => set_variable_values("enable_cfengine.rc_conf");

 linux::
  "$(rc_files)"
       comment => "Ensure that startup scripts are properly linked",
        handle => "cfengine_enable_files_rc_files",
     link_from => ln_s("/etc/init.d/cfengine3");
}

##################################################################

bundle agent cfengine_php_mod
{
files:

  redhat_5|centos_5::

   "/etc/php.d/cfmod.ini"
        comment => "Put cfmod.ini to its place",
         handle => "cfengine_php_mod_cfmod_ini_redhat5",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/cfmod.ini"),
          perms => mo("644","root");

   "/etc/php.d/svn.ini"
        comment => "Put svn.ini to its place",
         handle => "cfengine_php_mod_svn_ini_redhat5",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/svn.ini"),
          perms => mo("644","root");

   "/etc/php.d/json.ini"
        comment => "Put json.ini to its place",
         handle => "cfengine_php_mod_json_ini_redhat5",
      copy_from => local_cp("$(sys.workdir)/software_updates/json/json.ini"),
          perms => mo("644","root");

   "/usr/lib/php/modules/json.so"
         comment => "Prepare cfmod.so for 32-bit system",
         handle => "cfengine_php_mod_json_so_redhat5_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/json/32/json.so"),
           perms => mo("755","root"),
      ifvarclass => "i686";

   "/usr/lib64/php/modules/json.so"
         comment => "Prepare cfmod.so for 64-bit system",
         handle => "cfengine_php_mod_json_so_redhat5_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/json/64/json.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64";

   "/usr/lib/php/modules/cfmod.so"
         comment => "Prepare cfmod.so for 32-bit system",
         handle => "cfengine_php_mod_cfmod_so_redhat5_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/32/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

   "/usr/lib/php/modules/svn.so"
         comment => "Prepare svn.so for 32-bit system",
         handle => "cfengine_php_mod_svn_so_redhat5_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/svn/32/svn.so"),
           perms => mo("755","root"),
      ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

   "/usr/lib64/php/modules/cfmod.so"
         comment => "Prepare cfmod.so for 64-bit system",
         handle => "cfengine_php_mod_cfmod_so_redhat5_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/64/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

   "/usr/lib64/php/modules/svn.so"
         comment => "Prepare svn.so for 64-bit system",
         handle => "cfengine_php_mod_svn_so_redhat5_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/svn/64/svn.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

  redhat_4::

   "/etc/php.d/cfmod.ini"
        comment => "Put cfmod.ini to its place",
         handle => "cfengine_php_mod_cfmod_ini_redhat4",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/cfmod.ini"),
          perms => mo("644","root");

#   "/etc/php.d/svn.ini"
#        comment => "Put svn.ini to its place",
#      copy_from => local_cp("$(sys.workdir)/software_updates/svn/svn.ini"),
#          perms => mo("644","root");

   "/etc/php.d/json.ini"
        comment => "Put json.ini to its place",
         handle => "cfengine_php_mod_json_ini_redhat4",
      copy_from => local_cp("$(sys.workdir)/software_updates/json/json.ini"),
          perms => mo("644","root");

   "/usr/lib/php4/json.so"
         comment => "Prepare cfmod.so for 32-bit system",
          handle => "cfengine_php_mod_json_so_redhat4_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/json/32/json.so"),
           perms => mo("755","root"),
      ifvarclass => "i686";

   "/usr/lib/php4/cfmod.so"
         comment => "Prepare cfmod.so for 32-bit system",
          handle => "cfengine_php_mod_cfmod_so_redhat4_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/32/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

#   "/usr/lib/php4/svn.so"
#         comment => "Prepare svn.so for 32-bit system",
#       copy_from => local_cp("$(sys.workdir)/software_updates/svn/32/svn.so"),
#           perms => mo("755","root"),
#      ifvarclass => "i686",
#        classes => if_repaired("restart_webserver");

   "/usr/lib64/php4/json.so"
         comment => "Prepare cfmod.so for 64-bit system",
          handle => "cfengine_php_mod_json_so_redhat4_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/json/64/json.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64";

   "/usr/lib64/php4/cfmod.so"
         comment => "Prepare cfmod.so for 64-bit system",
          handle => "cfengine_php_mod_cfmod_so_redhat4_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/64/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

#   "/usr/lib64/php4/svn.so"
#         comment => "Prepare svn.so for 64-bit system",
#       copy_from => local_cp("$(sys.workdir)/software_updates/svn/64/svn.so"),
#           perms => mo("755","root"),
#      ifvarclass => "x86_64",
#        classes => if_repaired("restart_webserver");

  ubuntu_10|debian_squeeze_i386|debian_squeeze_amd64|debian_6::

  "/etc/php5/conf.d/cfmod.ini"
       comment => "Put cfmod.ini to its place",
        handle => "cfengine_php_mod_cfmod_ini_ubuntu10",
     copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/cfmod.ini"),
         perms => mo("644","root");

  "/etc/php5/conf.d/svn.ini"
       comment => "Put cfmod.ini to its place",
        handle => "cfengine_php_mod_svn_ini_ubuntu10",
     copy_from => local_cp("$(sys.workdir)/software_updates/svn/svn.ini"),
         perms => mo("644","root");

  "/usr/lib/php5/20090626+lfs/cfmod.so"
        comment => "Prepare cfmod.so for 32-bit system",
        handle => "cfengine_php_mod_cfmod_so_ubuntu10_32",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/20090626/32/cfmod.so"),
          perms => mo("755","root"),
     ifvarclass => "i686",
        classes => if_repaired("restart_webserver");
 
 "/usr/lib/php5/20090626+lfs/svn.so"
        comment => "Prepare svn.so for 32-bit system",
        handle => "cfengine_php_mod_svn_so_ubuntu10_32",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/20090626/32/svn.so"),
          perms => mo("755","root"),
     ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

  "/usr/lib/php5/20090626/cfmod.so"
        comment => "Prepare cfmod.so for 64-bit system",
        handle => "cfengine_php_mod_cfmod_so_ubuntu10_64",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/20090626/64/cfmod.so"),
          perms => mo("755","root"),
     ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");
  
  "/usr/lib/php5/20090626/svn.so"
        comment => "Prepare svn.so for 64-bit system",
        handle => "cfengine_php_mod_svn_so_ubuntu10_64",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/20090626/64/svn.so"),
          perms => mo("755","root"),
     ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

  ubuntu_8|debian_5|ubuntu_9::

  "/etc/php5/conf.d/cfmod.ini"
       comment => "Put cfmod.ini to its place",
        handle => "cfengine_php_mod_cfmod_ini_ubuntu8",
     copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/cfmod.ini"),
         perms => mo("644","root");

  "/etc/php5/conf.d/svn.ini"
       comment => "Put cfmod.ini to its place",
        handle => "cfengine_php_mod_svn_ini_ubuntu8",
     copy_from => local_cp("$(sys.workdir)/software_updates/svn/svn.ini"),
         perms => mo("644","root");

  "/usr/lib/php5/20060613+lfs/cfmod.so"
        comment => "Prepare cfmod.so for 32-bit system",
         handle => "cfengine_php_mod_cfmod_so_ubuntu8_32",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/20060613/32/cfmod.so"),
          perms => mo("755","root"),
     ifvarclass => "i686",
        classes => if_repaired("restart_webserver");
 
 "/usr/lib/php5/20060613+lfs/svn.so"
        comment => "Prepare svn.so for 32-bit system",
         handle => "cfengine_php_mod_svn_so_ubuntu8_32",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/20060613/32/svn.so"),
          perms => mo("755","root"),
     ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

  "/usr/lib/php5/20060613/cfmod.so"
        comment => "Prepare cfmod.so for 64-bit system",
         handle => "cfengine_php_mod_cfmod_so_ubuntu8_64",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/20060613/64/cfmod.so"),
          perms => mo("755","root"),
     ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");
  
  "/usr/lib/php5/20060613/svn.so"
        comment => "Prepare svn.so for 64-bit system",
         handle => "cfengine_php_mod_svn_so_ubuntu8_64",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/20060613/64/svn.so"),
          perms => mo("755","root"),
     ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

  SuSE_11|suse_11::

   "/etc/php5/conf.d/cfmod.ini"
        comment => "Put cfmod.ini to its place",
         handle => "cfengine_php_mod_cfmod_ini_suse",
      copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/cfmod.ini"),
          perms => mo("644","root");

   "/etc/php5/conf.d/svn.ini"
        comment => "Put svn.ini to its place",
         handle => "cfengine_php_mod_svn_ini_suse",
      copy_from => local_cp("$(sys.workdir)/software_updates/svn/svn.ini"),
          perms => mo("644","root");

   "/usr/lib/php5/extensions/cfmod.so"
         comment => "Prepare cfmod.so for 32-bit system",
          handle => "cfengine_php_mod_cfmod_so_suse_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/32/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

   "/usr/lib/php5/extensions/svn.so"
         comment => "Prepare svn.so for 32-bit system",
          handle => "cfengine_php_mod_svn_so_suse_32",
       copy_from => local_cp("$(sys.workdir)/software_updates/svn/32/svn.so"),
           perms => mo("755","root"),
      ifvarclass => "i686",
        classes => if_repaired("restart_webserver");

   "/usr/lib64/php5/extensions/cfmod.so"
         comment => "Prepare cfmod.so for 64-bit system",
          handle => "cfengine_php_mod_cfmod_so_suse_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/cfmod/64/cfmod.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

   "/usr/lib64/php5/extensions/svn.so"
         comment => "Prepare svn.so for 64-bit system",
          handle => "cfengine_php_mod_svn_so_suse_64",
       copy_from => local_cp("$(sys.workdir)/software_updates/svn/64/svn.so"),
           perms => mo("755","root"),
      ifvarclass => "x86_64",
        classes => if_repaired("restart_webserver");

#

 commands:

  restart_webserver.redhat::

   "/etc/init.d/httpd restart"
      comment => "Restart httpd service on RedHat/CentOS/Fedora",
       handle => "cfengine_php_mod_commands_httpd_redhat";

  restart_webserver.debian::

   "/etc/init.d/apache2 restart"
      comment => "Restart apache2 service on Debian/Ubuntu",
       handle => "cfengine_php_mod_commands_apache2_debian";

  restart_webserver.SuSE::

   "/etc/init.d/apache2 restart"
      comment => "Restart apache2 service on SuSE",
       handle => "cfengine_php_mod_commands_apache2_suse";

}

##########################################################################
#
#   cfengine_policysrv.cf - Software and processes on policy server
#
##########################################################################

bundle agent cfengine_policysrv

{
 vars:

  SuSE.am_policy_hub::

   "match_package" slist => { 
                             "apache2", 
                             "apache2-mod_php5",
                             "apache2-prefork",
                             "mysql",
                             "php5",
                             "subversion-devel"
                            },
                 comment => "Define a list of packages to be installed on SuSE",
                  handle => "cfengine_policysrv_vars_match_package_suse";

  redhat.am_policy_hub::

   "match_package" slist => {
                             "httpd",
                             "mod_ssl",
                             "mysql",
                             "mysql-server",
                             "php",
                             "subversion-devel",
                             "php-bcmath"
                            },
                 comment => "Define a list of packages to be installed on RedHat/CentOS/Fedora",
                  handle => "cfengine_policysrv_vars_match_package_redhat";

 debian.am_policy_hub::

  "match_package" slist => {
                            "apache2",
                            "mysql-server",
                            "php5",
                            "ssl-cert"
                           },
                 comment => "Define a list of packages to be installed on Debian/Ubuntu",
                  handle => "cfengine_policysrv_vars_match_package_debian";

#

 packages:

  SuSE.am_policy_hub::

   "$(match_package)"

             comment => "Install packages from the list",
              handle => "cfengine_policysrv_packages_install_package_suse",
      package_policy => "add",
      package_method => zypper,
      classes        => if_repaired("a2enmod_ssl");

  redhat.am_policy_hub::

   "$(match_package)"

             comment => "Install packages from the list",
              handle => "cfengine_policysrv_packages_install_package_redhat",
      package_policy => "add",
      package_method => yum;

  debian.am_policy_hub::

   "$(match_package)"

             comment => "Install packages from the list",
              handle => "cfengine_policysrv_packages_install_package_debian",
      package_policy => "add",
      package_method => apt,
      classes        => if_repaired("a2enmod_php5_ssl");

#

 processes:
   "mongod"      restart_class => "remove_mongod_lock",
                       comment => "Check if mongod process is dead",
                        handle => "cfengine_policysrv_mongod_lock_cleanup";

#

 commands:

  a2enmod_php5_ssl::

   "/usr/sbin/a2enmod php5 ssl",
      comment => "Enable apache modules on Debian/Ubuntu",
       handle => "cfengine_policysrv_commands_a2enmod_debian",
      classes => if_repaired("restart_apache2");

#  restart_apache2::
#
#   "/etc/init.d/apache2 restart";

  a2enmod_ssl::

   "/usr/sbin/a2enmod ssl && /usr/sbin/a2enflag SSL && /usr/bin/gensslcert"
      comment => "Enable apache modules on SuSE",
       handle => "cfengine_policysrv_commands_a2enmod_suse";

  a2ensite_ssl::

   "/usr/sbin/a2ensite ssl"
      comment => "Enable apache SSL on Debian/Ubuntu",
       handle => "cfengine_policysrv_commands_a2ensite_ssl";

#

 files:

  debian.am_policy_hub::

   "/var/www/."

          comment => "Clear up index.html page if there is",
           handle => "cfengine_policysrv_file_tidy_index_html",
           delete => tidy,
       file_select => by_name("index.html"),
      depth_search => recurse("1");

   "/etc/apache2/sites-available/ssl"
        comment => "Prepare SSL config for available sites",
         handle => "cfengine_policysrv_files_ssl",
      copy_from => local_cp("/etc/apache2/sites-available/default-ssl"),
         action => immediate,
        classes => if_repaired("a2ensite_ssl");

  SuSE.am_policy_hub::

   "/etc/apache2/vhosts.d/vhost-ssl.conf"

        comment => "Prepare SSL template for virtual hosts",
         handle => "cfengine_policysrv_files_vhost_ssl",
      copy_from => local_cp("/etc/apache2/vhosts.d/vhost-ssl.template"),
         action => immediate;

  remove_mongod_lock::
   "$(sys.workdir)/state/mongod.lock"
        comment => "Remove stale mongod lock file",
         delete => tidy;

}

#####################################################
#
# Apache webserver module
# 
#####################################################

bundle agent cfengine_web_server(state)
{
vars:

   "start_type" string => "start",
               comment => "Define a start signal",
                handle => "cfengine_web_server_vars_start_type";

#
			
classes:

   "web_servers"          or => { "am_policy_hub" },
                     comment => "Alias a name am_policy_hub to webservers",
                      handle => "cfengine_web_server_classes_web_servers";

   "have_selinux" expression => fileexists("/usr/sbin/setenforce"),
                     comment => "Check for setenforce command",
                      handle => "cfengine_web_server_classes_have_selinux";

#

processes:

  SuSE.web_servers.on::

   "apache2"
     restart_class => "suse_start_apache",
           comment => "Start apache2 process if not exist",
            handle => "cfengine_web_server_processes_apache_on_suse";

   "mysqld"
     restart_class => "suse_start_mysql",
           comment => "Start mysqld process if not exist",
            handle => "cfengine_web_server_processes_mysqld_on_suse";

  redhat.web_servers.on::

   ".*httpd.*"
     restart_class => "redhat_start_apache",
           comment => "Start httpd process if not exist",
            handle => "cfengine_web_server_processes_httpd_on_redhat";

   ".*mysqld.*"
     restart_class => "redhat_start_mysql",
           comment => "Start mysqld process if not exist",
            handle => "cfengine_web_server_processes_mysqld_on_redhat";

  debian.web_servers.on::

   ".*apache2.*"
     restart_class => "debian_start_apache",
           comment => "Start apache2 process if not exist",
            handle => "cfengine_web_server_processes_apache_on_debian";

   "/usr/sbin/mysqld.*"
     restart_class => "debian_start_mysql",
           comment => "Start apache2 process if not exist",
            handle => "cfengine_web_server_processes_mysqld_on_debian";

  SuSE.off::

   "apache2"
      process_stop => "/etc/init.d/apache2 stop",
           comment => "Stop apache2 process",
            handle => "cfengine_web_server_processes_apache_off_suse";

   "mysqld"
      process_stop => "/etc/init.d/mysql stop",
           comment => "Stop mysqld process",
            handle => "cfengine_web_server_processes_mysqld_off_suse";

  redhat.off::

   "/usr/sbin/httpd"
      process_stop => "/etc/init.d/httpd stop",
           comment => "Stop httpd process",
            handle => "cfengine_web_server_processes_httpd_off_redhat";

   "mysqld"
      process_stop => "/etc/init.d/mysqld stop",
           comment => "Stop mysqld process",
            handle => "cfengine_web_server_processes_mysqld_off_redhat";

  debian.off::

   "/usr/sbin/apache2.*"
      process_stop => "/etc/init.d/apache2 stop",
           comment => "Stop apache2 process",
            handle => "cfengine_web_server_processes_apache_off_debian";

   "mysqld"
      process_stop => "/etc/init.d/mysql stop",
           comment => "Stop mysqld process",
            handle => "cfengine_web_server_processes_mysqld_off_debian";

#

commands:

 web_servers.have_selinux::

   "/usr/sbin/setenforce 0"
      comment => "Disable SELINUX",
       handle => "cfengine_web_server_commands_set_selinux",
      classes => cmd_repair("0", "cmd_fixed_setenforce"),
       action => if_elapsed("120");

 web_ok.suse_start_apache::

   "/etc/init.d/apache2 $(start_type)"
      comment => "Start apache2 process if not exist",
       handle => "cfengine_web_server_commands_start_apache_suse";

 suse_start_mysql::

   "/etc/init.d/mysql start"
      comment => "Start mysql process if not exist",
       handle => "cfengine_web_server_commands_start_mysql_suse";

 redhat_start_apache::

   "/etc/init.d/httpd $(start_type)"
      comment => "Start httpd process if not exist",
       handle => "cfengine_web_server_commands_start_httpd_redhat";

 redhat_start_mysql::

   "/etc/init.d/mysqld start"
      comment => "Start mysqld process if not exist",
       handle => "cfengine_web_server_commands_start_mysqld_redhat";

 debian_start_apache::

   "/etc/init.d/apache2 $(start_type)"
      comment => "Start apache process if not exist",
       handle => "cfengine_web_server_commands_start_apache_debian";

 debian_start_mysql::

   "/etc/init.d/mysql start"
      comment => "Start mysql process if not exist",
       handle => "cfengine_web_server_commands_start_mysql_debian";

#

files:

 SuSE.web_servers::

  "/etc/sysconfig/apache2" 

       comment => "Ensure apache2 modules will be loaded",
        handle => "cfengine_web_server_files_sysconfig_apache2",
     edit_line => fixapache,
       classes => if_ok("web_ok");

# redhat.web_servers::
#
#  "/etc/httpd/conf/httpd.conf"
#
#     edit_line => comment_lines_matching("Listen 80","#"),
#     classes => if_ok("web_ok");

# debian.web_servers::
#
#  "/etc/apache2/ports.conf"
#
#     edit_line => append_if_no_line("Listen 443"),
#     classes => if_ok("web_ok");

 #########################################################

classes:

  "on"  expression => strcmp("$(state)","on"),
           comment => "Check if a keyword \"on\" is inputs",
            handle => "cfengine_web_server_classes_on";

  "off" expression => strcmp("$(state)","off"),
           comment => "Check if a keyword \"off\" is inputs",
            handle => "cfengine_web_server_classes_off";

 #########################################################

reports:

 have_selinux::

   " NB - Disabling SELinux to allow PHP to function",
      comment => "Alert message on screen",
       handle => "cfengine_web_server_reports_have_selinux";

}

#######################################################
# For the library
#######################################################

bundle edit_line fixapache

{
vars:

 "add_modules"     slist => { 
                            "php5",
                            "ssl" 
                            };

 "del_modules"     slist => { 
                            "php3",
                            "php4",
                            "jk"
                            };

field_edits:

 #####################################################################
 # APACHE_MODULES="actions alias ssl php5 dav_svn authz_default jk" etc..
 #####################################################################

   "APACHE_MODULES=.*"

      # Insert module "columns" between the quoted RHS 
      # using space separators

      edit_field => quoted_var("$(add_modules)","append");

   "APACHE_MODULES=.*"

      # Delete module "columns" between the quoted RHS 
      # using space separators

      edit_field => quoted_var("$(del_modules)","delete");

}

###########################################################################

bundle agent cfengine_editor
{
 vars:

  redhat::

   "web_owner"   string => "apache",
                comment => "Define an owner for online editor",
                 handle => "cfengine_editor_vars_web_owner_redhat";

   "web_group"   string => "apache",
                comment => "Define a group for online editor",
                 handle => "cfengine_editor_vars_web_group_redhat";

  SuSE::

   "web_owner"   string => "wwwrun",
                comment => "Define an owner for online editor",
                 handle => "cfengine_editor_vars_web_owner_suse";

   "web_group"   string => "www",
                comment => "Define a group for online editor",
                 handle => "cfengine_editor_vars_web_group_suse";

  debian::

   "web_owner"   string => "www-data",
                comment => "Define an owner for online editor",
                 handle => "cfengine_editor_vars_web_owner_debian";

   "web_group"   string => "www-data",
                comment => "Define a group for online editor",
                 handle => "cfengine_editor_vars_web_group_debian";

#

 files:

  !windows.am_policy_hub::

   "$(sys.doc_root)/policies/." -> "Cfengine Nova Editor",

      create => "true",
       perms => mog("700","$(web_owner)","$(web_group)"),
     comment => "Make sure web server has permission to create working directories for editor users",
      handle => "cfengine_editor_files_policies_dir";


  !windows.am_policy_hub::

   "$(sys.doc_root)/policies/." -> "Cfengine Nova Editor",

           delete => tidy,
      file_select => days_old("1"),
     depth_search => recurse("inf"),
          comment => "Remove working directories of old editor sessions",
           handle => "cfengine_editor_files_policies_tidy";

}

###########################################################################

bundle agent cfengine_limit_robot_agents
{
processes:

  linux::

   "cf-execd"
      process_count => check_execd("1"),
            comment => "Check cf-execd process if exceed the number",
             handle => "cfengine_limit_robot_agents_processes_check_cf_execd";

   "cf-monitord"
      process_count => check_monitord("1"),
            comment => "Check cf-monitord process if exceed the number",
             handle => "cfengine_limit_robot_agents_processes_check_cf_monitord";

  am_policy_hub::

   "cf-hub"
      process_count => check_hub("1"),
            comment => "Check cf-hub process if exceed the number",
             handle => "cfengine_limit_robot_agents_processes_check_cf_hub";

  something_wrong_execd::

   "cf-execd"
             signals => { "kill" },
       restart_class => "restart_execd",
             comment => "When cf-execd comes undone then kill all and restart the process",
              handle => "cfengine_limit_robot_agents_processes_kill_cf_execd";

  something_wrong_monitord::

   "cf-monitord"
             signals => { "kill" },
       restart_class => "restart_monitord",
             comment => "When cf-monitord comes undone then kill all and restart the process",
              handle => "cfengine_limit_robot_agents_processes_kill_cf_monitord";

  something_wrong_hub::

   "cf-hub"
             signals => { "kill" },
       restart_class => "restart_hub",
             comment => "When cf-hub comes undone then kill all and restart the process",
              handle => "cfengine_limit_robot_agents_processes_kill_cf_hub";
#

commands:

  restart_execd::

   "$(sys.cf_execd)"
      comment => "Restart cf-execd process",
       handle => "cfengine_limit_robot_agents_commands_restart_cf_execd";

  restart_monitord::

   "$(sys.cf_monitord)"
      comment => "Restart cf-monitord process",
       handle => "cfengine_limit_robot_agents_commands_restart_cf_monitord";

  restart_hub::

   "$(sys.cf_hub)"
      comment => "Restart cf-hub process",
       handle => "cfengine_limit_robot_agents_commands_restart_cf_hub";
}

#

body process_count check_execd(n)
{
match_range => "0,$(n)";
out_of_range_define => {"something_wrong_execd"};
}

body process_count check_monitord(n)
{
match_range => "0,$(n)";
out_of_range_define => {"something_wrong_monitord"};
}

body process_count check_hub(n)
{
match_range => "0,$(n)";
out_of_range_define => {"something_wrong_hub"};
}

###########################################################################

bundle agent cfengine_update_folders
{
 vars:
  "dirs" slist => {
                   "ubuntu_10_i686",
                   "ubuntu_10_x86_64",
                   "centos_5_i686",
                   "centos_5_x86_64",
                   "redhat_5_i686",
                   "redhat_5_x86_64",
                   "suse_11_i686",
                   "suse_11_x86_64",
                   "debian_5_i686",
                   "debian_5_x86_64",
                   "debian_6_i686",
                   "debian_6_x86_64",
                   "debian_squeeze_i686",
                   "debian_squeeze_x86_64"
                  },
       comment => "Define a list for $(sys.flavour)_$(sys.arch) directories",
        handle => "cfengine_update_folders_vars_dirs";

#

 files:

  "$(sys.workdir)/master_software_updates/$(dirs)/."

     comment => "Prepare binary upgrade folders for all distributions in our environment",
      handle => "cfengine_update_folders_files_create_dirs",
      create => "true";
}

###########################################################################

bundle agent cfengine_correct_cftwin
{
 files:

  !windows::

   "/var/cfengine/lib-twin"

           comment => "Correct lib-twin to be the same as lib, in case of dependency upgrade. This effect cf-twin's behaviour",
            handle => "cfengine_correct_cftwin_files_libtwin",
             perms => m("644"),
         copy_from => local_cp("/var/cfengine/lib"),
      depth_search => recurse("inf");

   "/var/cfengine/bin/cf-twin"
   
        comment => "Correct cf-twin to be the same as cf-agent, in case of dependency upgrade",
         handle => "cfengine_correct_cftwin_files_cftwin",
          perms => m("755"),
      copy_from => local_cp("/var/cfengine/bin/cf-agent");
}

#######################################################
# Do some garbage collection on
#######################################################

bundle agent garbage_collection
{
files:

 Sunday::

  "$(sys.workdir)/cf_repair.log" 

    comment => "Rotate the promises repaired logs each week",
     handle => "garbage_collection_files_cf_repair_log",
     rename => rotate("7"),
     action => if_elapsed("10000");

  "$(sys.workdir)/cf_notkept.log" 

    comment => "Rotate the promises not kept logs each week",
     handle => "garbage_collection_files_cf_notkept_log",
     rename => rotate("7"),
     action => if_elapsed("10000");

  "$(sys.workdir)/promise_summary.log" 

    comment => "Rotate the promises not kept logs each week",
     handle => "garbage_collection_files_promise_log",
     rename => rotate("7"),
     action => if_elapsed("10000");

  "$(sys.workdir)/state/cf_value.log" 

    comment => "Rotate the promises not kept logs each week",
     handle => "garbage_collection_files_cf_value_log",
     rename => rotate("7"),
     action => if_elapsed("10000");

   "/var/log/mongod.log"

    comment => "Rotate the mongo db transactio logs each week",
     handle => "garbage_collection_files_mongod_log",
     rename => rotate("7"),
     action => if_elapsed("10000");

 any::

  "$(sys.workdir)/outputs" 

         comment => "Garbage collection of any output files",
          handle => "garbage_collection_files_tidy_outputs",
          delete => tidy,
     file_select => days_old("7"),
    depth_search => recurse("inf");

  # Other resources

  "/tmp" 

         comment => "Garbage collection of any temporary files",
          handle => "garbage_collection_files_tidy_tmp",
          delete => tidy,
     file_select => days_old("3"),
    depth_search => recurse("inf");
  
  "/var/log/apache2/.*bz" 

         comment => "Garbage collection of rotated log files",
          handle => "garbage_collection_files_tidy_bz",
          delete => tidy,
     file_select => days_old("30");


  "/var/log/apache2/.*gz" 

         comment => "Garbage collection of rotated log files",
          handle => "garbage_collection_files_tidy_gz",
          delete => tidy,
     file_select => days_old("30");


 SuSE::

  "/var/log/zypper.log"

    comment => "Prevent the zypper log from choking the disk",
     handle => "garbage_collection_files_zypper_log",
     rename => rotate("0"),
     action => if_elapsed("10000");

}
