
############################################################################
# The Map
############################################################################

bundle knowledge enterprise_knowledge
{
topics:

   "system knowledge"   comment => "Cfengine knowledge console";

 machine_resources::

   "hosts" comment => "A general term for computers that run applications of any kind",
       association => a("form the bulk of","machine resources","are composed from"); 

 system_knowledge::

  "system reports" comment => "Reports generated by cfengine";
  "system trends"  comment => "Long term performance data about the system.";

  "service catalogue" comment => "The basic service promises of the system",
                    association => a("promises are implemented as","system_policy::bundles","implement");

  "service catalogue" 
                    association => a("is a list of","services","are described in");

  "server lifecycle" comment => "From creation to update and eventual reinstallation",
                     association => a("is modelled by","BDMA","is a model for");

 # This is example knowledge -- add your own

 service_catalogue::

  "installation"         comment => "Installing computers from bare metal";
  "boot services"        comment => "Boot services are a way of booting a computer directly from the network";
  "application services" comment => "Software running on servers";
  "network services"     comment => "Network connectivity and availability";
  "monitoring"           comment => "Pseudo-real-time status information about system components",
                     association => a("contributes to","mission status","draws on data from");

 application_services::

  "mail"               comment => "Electronic mail service, as made famous by the Unix operating system.";
  "configuration"      comment => "Cfengine desired-state automation and self-repair service";
  "web"                comment => "The WWW web service";
  "directory services" comment => "Directory services are look-up services, typically with identity or host information.";
  "storage"            comment => "Remotely accessible disk volumes.";
  "database"           comment => "Relational database services";
  "login"              comment => "The ability to log onto systems with a username and password";

 network_services::

  "routing"      comment => "Router and switch configuration";
  "connectivity" comment => "Cables and hardware";

 boot_services::

  "PXE"   comment => "A composite network service based on the PXE protocol, allows systems to boot directly from the network.";
  "BOOTP" comment => "A simple broadcast protocol for booting a system directly from the network, e.g. for installation purposes.";

 directory_services::

  "DNS"      comment => "Domain Name Service for translating Internet addresses into hostnames and vice versa.";
  "LDAP"     comment => "A well-known directory service. MS Active Directory purports to support this standard.";
  "NIS"      comment => "Sun's Network Information Service (previously called Yellow Pages).";
  "DHCP"     comment => "An IP configuration service.";

 database::

  "mysql";
  "postgres";
  "oracle";

 storage::

  "NFS"      comment => "Network File System (storage)";
  "samba"    comment => "The Unix service for integrating with MS Windows";

 Contracts_and_Agreements::

  "Service Level Agreements";






###############################################################################

occurrences:

 copernicus::

   "https://cfengine.com/copernicus/"
            represents => { "Support knowledge portal" };


 mission_status::

   "/reports/meters.png"

            represents => { "site summary", "/reports/host_portal.html" },
            representation => "image";


 machine_resources::

   "reports/hosts_portal.html"

            represents => { "portal" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";
    
 monitoring::

   "reports/hosts_portal.html"

            represents => { "portal" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";   

 system_trends::

   "reports/(.*)/mainpage.html"

            represents => { "weekly $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";   

 system_outputs::

   "reports/(.*)/preview"

            represents => { "alerts from $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 micro_audit_report::

   "Detailed reports with every transaction made by cfengine - very storage consuming"

            represents => { "description" },
            representation => "literal";
 
   "reports/(.*)/audit.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 performance_report::

   "Describes the real time it has taken on average to complete or keep promises"

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/performance.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";


 hashes_report::

   "A list of actual computed hash values for promised files."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/hashes.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 classes_report::

   "Shows non-hard classes defined on the current host. This provides something like CMDB information but at level that can say something about the dynamics of the system. Probabilities that classes have been defined are based on actual observation."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/classes.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 variables_report::

   "Shows the values of variables used on each host. Some discovered, some defined."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/variables.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";



 lastseen_report::

   "When was the last time the current host contacted or was contacted by another? (+) indicates contacted, (-) indictaes was contacted by."

            represents => { "description" },
            representation => "literal";


   "reports/(.*)/lastseen.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 compliance_report::

   "Show the status of alls promise, along with average compliance. Useful for quick auditing."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/compliance.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 promise_report::

   "Show the status of named policy promises, along with average compliance. Useful for quick auditing."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/promise_compliance.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";


 setuid_report::

   "List the discovered setuid/setgid root programs on the system (Unix only)"

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/setuid.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 file_changes_report::

   "A log of changes to files promised under change monitoring"

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/file_changes.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 installed_software_report::

   "OS software packages installed and their version information."

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/software_packages.html"

            represents => { "on $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 installed_patches_report::

   "For systems with a separate patch model, this shows OS software patches. There are two reports (for current status and patches that are available but not already applied)"

            represents => { "description" },
            representation => "literal";

   "reports/(.*)/software_patch_status.html"

            represents => { "status $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

 available_patches_report::

   "reports/(.*)/software_patches_avail.html"

            represents => { "status $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

monitor_summary_report::

   "reports/host_portal.html"

            represents => { "index portal" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

hosts::

   "reports/(.*)/mainpage.html"

            represents => { "status $(match.1)" },
            representation => "file",
            path_root => "$(enterprise_start.doc_root)",
            web_root => "";

}

#######################################################################

bundle knowledge enterprise_start

{
vars:

  "doc_root" string => readfile("$(sys.workdir)/document_root.dat",40),
            comment => "Read the knowledge base document root for the web server";

topics:

 system_knowledge::

   "copernicus"      comment => "Cfengine's online support knowledge base";

   "ontology"        comment => "Main index";

   "management issues"  comment => "The main areas of management";

   "views"  comment => "Roles for IT stakeholders";

   "mission status" comment => "Overview of IT operations",
       association => a("may be seen from","architect view","is a viewpoint on"); 
   "mission status"
       association => a("may be seen from","manager view","is a viewpoint on"); 
   "mission status"
       association => a("may be seen from","operation view","is a viewpoint on"); 
   "mission status"
       association => a("may be seen from","security view","is a viewpoint on"); 


  ##########
  #  Mission views / roles
  ##########

 views::

   "architect view"
       association => a("planning the system lifecycle","BDMA","is an aspect of"); 

   "architect view"
       association => a("is informed by","system trends","are an aspect of"); 

   "architect view"
       association => a("is about plotting","system policy","is an aspect of"); 

   "architect view"
       association => a("depends on environmental","contexts","are an aspect of"); 

   "architect view"
       association => a("has reference support in","copernicus","is a resource for"); 

   "architect view"
       association => a("sees the catalogue of","service catalogue","are an aspect of"); 


   #


   "manager view"
       association => a("sees the catalogue of","service catalogue","are an aspect of"); 

   "manager view"
       association => a("sees the catalogue of","management issues","are an aspect of"); 

   "manager view"
       association => a("contains a current summary of","compliance report","is an aspect of"); 

   "manager view"
       association => a("needs an appreciation of","server lifecycle","is an aspect of"); 

   "manager view"
       association => a("needs an appreciation of","","is an aspect of"); 

   #

   "operation view"
       association => a("displays operational state in","host portal","is a resource for"); 

   "operation view"
       association => a("displays communications summary in","lastseen report","is a resource for"); 

   "operation view"
       association => a("recent compliance at","promise report","is a resource for"); 

   "operation view"
       association => a("see promise cost in","performance report","is a resource for"); 

   "operation view"
       association => a("see software state","installed software report","is a resource for"); 

   "operation view"
       association => a("see policy-defined events in","system outputs","are an aspect of"); 

   #

   "security view"
       association => a("contains a current summary of","setuid report","is a resource for"); 

   "security view"
       association => a("contains a current summary of","software patches report","is a resource for"); 

   ##########
   # Aspects
   ##########


 mission_status::

  "system policy"   comment => "Local policy description with comments and dependencies";
  "system reports"  comment => "Reports from around the system";
  "host portal"     comment => "Portal to access mission status, monitored host data";
  "system outputs" comment => "Messages sent by cfengine to the operators as a matter of policy.";

   
  management_issues::

   "business value"                 association => A("$(impr[b])","@(selfstar)","$(impr[f])");
   "organization";
   "maintenance paradigms";
   "team work";
   "compliance"                     association => a("is documented by","manual::Reporting","documents");
   "capacity planning";
   "storage management";
   "identity management";
   "knowledge management"            association => a("$(impl[b])","cf-know","$(impl[f])");
   "management terminology";
   "compliance"                      comment => "Frameworks for standardizing and regulating systems";



   "incident management"             comment => "Repairing policy violations",
                                 association => a("see also","manual::Incident Management vs Maintenance","see also");


   "identity management"             comment => "Managing user accounts",
                                 association => a("$(impl[b])","manual::Changing a password","$(impl[f])");


   "release management"              comment => "The process of preparing for major changes to policy or enterprise activity.";


   "application management"          comment => "Deploying and patching applications, inclding the ability to configure specific applications, like Apache-servers, Microsoft Exchange, etc.";

   "reporting"                       comment => "Extracting information in human readable form";



   "change management" comment => "The ability to trace, log and manipulate change in files. Whenever a change occurs in a file, this probably affects some other parts of the system. The ability to track, log and potentially restore changes are important for many purposes.",

       association => a("$(impl[b])","procedures::change detection scans","$(impl[f])");

   "configuration management" comment => "The ability to configure a Datacenter through configuration settings. This is the core of Cfengine. Cfengine comes with many advanced tools to ease the configuration of Datacenters and have it self-repair according the settings you define. See also Configuration Items (CIs), Change Management.";


   "inventory" comment => "List of items within a datacenter, e.g. servers, applications, services. Expressed in terms of a static database that is being updated every now on then, depending on how often you scan the network. Cfengine holds accurate inventory lists and reports can easily be created on the fly. Cfengine dosen’t hold any static database that requires frequent scan (that takes a lot of resources) to describe the inventory.";





}


