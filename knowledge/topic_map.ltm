/*********************/
/* Class types       */
/*********************/

[Service_Level_Agreements: Contracts_and_Agreements = "Service Level Agreements"]
[DB: Services = "Relational database service (DB)"]
[LDAP: Services = "Directory Service (LDAP)"]
[NFS: Services = "Network File System (storage) (NFS)"]
[DNS: Services = "Domain Name Service (DNS)"]
[WWW: Services = "Web service (WWW)"]
[Cfengine: Services = "Cfengine automation (Cfengine)"]
[promise_knowledge_cf_41: promises = "Generate knowledge associative graphs (promise_knowledge_cf_41)"]

[is_a_promise_of_type = "is a promise of type" 
          = "has current exemplars" / promise_types]


[is_activated_by_class_context = "is activated by class context" 
          = "activates promises" / contexts]

[_usr_local_sbin_cf_know__f__srv_www_htdocs_cfknowledgebase_enterprise_cf__g: promisers = "/usr/local/sbin/cf-know -f /srv/www/htdocs/cfknowledgebase/enterprise.cf -g"]

[makes_promises = "makes promises" 
          = "is a promise made by" / promises]


[makes_promise_of_type = "makes promise of type" 
          = "promises have been made by" / promise_types]


[occurs_in_bundle = "occurs in bundle" 
          = "bundle contains promiser" / bundles]

[web_server: contexts = "web_server"]
[promise_knowledge_cf_34: promises = "Generate config reports (promise_knowledge_cf_34)"]
[_usr_local_sbin_cf_promises__r: promisers = "/usr/local/sbin/cf-promises -r"]
[promise_knowledge_cf_24: promises = "Make sure knowledge files are accessible to webserver (promise_knowledge_cf_24)"]
[_srv_www_htdocs_cfknowledgebase: promisers = "/srv/www/htdocs/cfknowledgebase"]
[promise_knowledge_cf_12: promises = "(Uncommented promise of type <i>vars</i> made by: doc_root..) (promise_knowledge_cf_12)"]
[doc_root: promisers = "doc_root"]
[setup_knowledge: bundles = "setup_knowledge"]
[promise_webserver_cf_135: promises = "(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..) (promise_webserver_cf_135)"]
[promise_webserver_cf_128: promises = "(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..) (promise_webserver_cf_128)"]
[APACHE_MODULES___: promisers = "APACHE_MODULES=.*"]
[promise_webserver_cf_115: promises = "(Uncommented promise of type <i>insert_lines</i> made by: APACHE_CONF_INCLUDE_FILES..) (promise_webserver_cf_115)"]
[APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_: promisers = "APACHE_CONF_INCLUDE_FILES="/home/mark/cfengine-inputs/httpd.conf""]
[promise_webserver_cf_106: promises = "(Uncommented promise of type <i>vars</i> made by: del_modules..) (promise_webserver_cf_106)"]
[del_modules: promisers = "del_modules"]
[promise_webserver_cf_102: promises = "(Uncommented promise of type <i>vars</i> made by: add_modules..) (promise_webserver_cf_102)"]
[add_modules: promisers = "add_modules"]
[fixapache: bundles = "fixapache"]
[promise_webserver_cf_83: promises = "(Uncommented promise of type <i>reports</i> made by: The web server software c..) (promise_webserver_cf_83)"]
[The_web_server_software_could_not_be_installed: promisers = "The web server software could not be installed"]
[_software_ok_on: contexts = "!software_ok.on"]
[promise_webserver_cf_74: promises = "(Uncommented promise of type <i>files</i> made by: /etc/sysconfig/apache2..) (promise_webserver_cf_74)"]

[has_direct_influence_on = "has direct influence on" 
 = "is directly influenced by" / unknown_association_counterpart]
[_etc_sysconfig_apache2: promisers = "/etc/sysconfig/apache2"]
[software_ok: contexts = "software_ok"]
[php5: promisers = "php5"]
[apache2_prefork: promisers = "apache2-prefork"]
[apache2_mod_php5: promisers = "apache2-mod_php5"]
[promise_webserver_cf_62: promises = "(Uncommented promise of type <i>packages</i> made by: apache2..) (promise_webserver_cf_62)"]
[promise_webserver_cf_53: promises = "(Uncommented promise of type <i>commands</i> made by: /etc/init.d/apache2 resta..) (promise_webserver_cf_53)"]
[_etc_init_d_apache2_restart: promisers = "/etc/init.d/apache2 restart"]
[start_apache: contexts = "start_apache"]
[promise_webserver_cf_44: promises = "(Uncommented promise of type <i>processes</i> made by: apache2..) (promise_webserver_cf_44)"]
[off: contexts = "off"]
[promise_webserver_cf_38: promises = "(Uncommented promise of type <i>processes</i> made by: apache2..) (promise_webserver_cf_38)"]
[apache2: promisers = "apache2"]
[web_ok_on: contexts = "web_ok.on"]
[promise_webserver_cf_23: promises = "(Uncommented promise of type <i>vars</i> made by: match_package..) (promise_webserver_cf_23)"]
[match_package: promisers = "match_package"]
[promise_webserver_cf_17: promises = "(Uncommented promise of type <i>vars</i> made by: site_http_conf..) (promise_webserver_cf_17)"]
[site_http_conf: promisers = "site_http_conf"]
[promise_webserver_cf_11: promises = "(Uncommented promise of type <i>vars</i> made by: document_root..) (promise_webserver_cf_11)"]
[document_root: promisers = "document_root"]
[web_server: bundles = "web_server"]
[promise_laptop_cf_31: promises = "(Uncommented promise of type <i>files</i> made by: /home/backup..) (promise_laptop_cf_31)"]
[_home_backup: promisers = "/home/backup"]
[_usb_backup_device_loaded: contexts = "!usb_backup_device_loaded"]
[promise_laptop_cf_22: promises = "(Uncommented promise of type <i>files</i> made by: /media/disk-1/CfengineBac..) (promise_laptop_cf_22)"]
[_media_disk_1_CfengineBackupDevice: promisers = "/media/disk-1/CfengineBackupDevice"]
[usb_backup_device_loaded: contexts = "usb_backup_device_loaded"]
[promise_laptop_cf_6: promises = "(Uncommented promise of type <i>vars</i> made by: mount_point..) (promise_laptop_cf_6)"]
[mount_point: promisers = "mount_point"]
[laptop: bundles = "laptop"]
[promise_library_cf_200: promises = "(Uncommented promise of type <i>reports</i> made by: Added a 5 minute schedule..) (promise_library_cf_200)"]
[Added_a_5_minute_schedule_to_crontabs: promisers = "Added a 5 minute schedule to crontabs"]
[promise_library_cf_194: promises = "(Uncommented promise of type <i>replace_patterns</i> made by: cfexecd..) (promise_library_cf_194)"]
[cfexecd: promisers = "cfexecd"]
[promise_library_cf_190: promises = "(Uncommented promise of type <i>insert_lines</i> made by: 0,5,10,15,20,25,30,35,40,..) (promise_library_cf_190)"]
[0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F: promisers = "0,5,10,15,20,25,30,35,40,45,50,55 * * * * /var/cfengine/bin/cf-execd -F"]
[upgrade_cfexecd: bundles = "upgrade_cfexecd"]
[promise_library_cf_165: promises = "(Uncommented promise of type <i>delete_lines</i> made by: $(regex)..) (promise_library_cf_165)"]
[__regex_: promisers = "$(regex)"]
[DeleteLinesMatching: bundles = "DeleteLinesMatching"]
[promise_library_cf_113: promises = "(Uncommented promise of type <i>field_edits</i> made by: NETCONFIG_DNS_STATIC_SEAR..) (promise_library_cf_113)"]
[NETCONFIG_DNS_STATIC_SEARCHLIST__: promisers = "NETCONFIG_DNS_STATIC_SEARCHLIST.*"]
[promise_library_cf_105: promises = "(Uncommented promise of type <i>vars</i> made by: search..) (promise_library_cf_105)"]
[search: promisers = "search"]
[resolver: bundles = "resolver"]
[promise_site_cf_366: promises = "(Uncommented promise of type <i>roles</i> made by: .*..) (promise_site_cf_366)"]
[__: promisers = ".*"]
[promise_site_cf_362: promises = "(Uncommented promise of type <i>access</i> made by: /home/mark/.cfagent/bin/c..) (promise_site_cf_362)"]
[_home_mark__cfagent_bin_cf_agent: promisers = "/home/mark/.cfagent/bin/cf-agent"]
[promise_site_cf_358: promises = "(Uncommented promise of type <i>access</i> made by: /home/mark/LapTop..) (promise_site_cf_358)"]
[_home_mark_LapTop: promisers = "/home/mark/LapTop"]
[access_rules: bundles = "access_rules"]
[promise_site_cf_345: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous low entropy (3d..) (promise_site_cf_345)"]
[Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_icmp_in__pm___mon_stddev_icmp_in_: promisers = "Anomalous low entropy (3dev) incoming ICMP traffic on $(mon.host) at Tue Jun 30 12:46:08 2009 
    - measured value 0 av $(mon.average_icmp_in) pm $(mon.stddev_icmp_in)"]
[anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high: contexts = "anomaly_hosts.icmp_in_high_anomaly.!entropy_icmp_in_high"]
[promise_site_cf_338: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous (2dev) incoming..) (promise_site_cf_338)"]
[Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_udp_in__pm___mon_stddev_udp_in_: promisers = "Anomalous (2dev) incoming (non-DNS) UDP traffic on $(mon.host) at Tue Jun 30 12:46:08 2009 
    - measured value 0 av $(mon.average_udp_in) pm $(mon.stddev_udp_in)"]
[entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2: contexts = "entropy_dns_in_low.anomaly_hosts.udp_in_high_dev2"]
[promise_site_cf_331: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous (3dev) incoming..) (promise_site_cf_331)"]
[Anomalous__3dev__incoming_DNS_packets_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___average_dns_in__pm___mon_stddev_dns_in_: promisers = "Anomalous (3dev) incoming DNS packets on $(mon.host) at Tue Jun 30 12:46:08 2009 
    - measured value 0 av $(average_dns_in) pm $(mon.stddev_dns_in)"]
[entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly: contexts = "entropy_dns_in_low.anomaly_hosts.dns_in_high_anomaly"]
[promise_site_cf_324: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous number of new T..) (promise_site_cf_324)"]
[Anomalous_number_of_new_TCP_connections_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_: promisers = "Anomalous number of new TCP connections on $(mon.host) at Tue Jun 30 12:46:08 2009 
    - measured value 0 av $(mon.average_tcpsyn_in) pm $(mon.stddev_tcpsyn_in)"]
[entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2: contexts = "entropy_tcpsyn_in_low.anomaly_hosts.tcpsyn_in_high_dev2"]
[promise_site_cf_317: promises = "(Uncommented promise of type <i>reports</i> made by: LOW ENTROPY Incoming www ..) (promise_site_cf_317)"]
[LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_: promisers = "LOW ENTROPY Incoming www anomaly high anomaly dev!! on $(mon.host) at Tue Jun 30 12:46:08 2009
     - measured value $(svalue_www_in) av $(average_www_in) pm $(stddev_www_in)"]
[entropy_www_in_low_anomaly_hosts_www_in_high_anomaly: contexts = "entropy_www_in_low.anomaly_hosts.www_in_high_anomaly"]
[promise_site_cf_310: promises = "(Uncommented promise of type <i>reports</i> made by: HIGH ENTROPY Incoming www..) (promise_site_cf_310)"]
[HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_www_in__pm___mon_stddev_www_in_: promisers = "HIGH ENTROPY Incoming www anomaly high anomaly dev!! on $(mon.host) at Tue Jun 30 12:46:08 2009 
    - measured value 0 av $(mon.average_www_in) pm $(mon.stddev_www_in)"]
[entropy_www_in_high_anomaly_hosts_www_in_high_anomaly: contexts = "entropy_www_in_high&anomaly_hosts.www_in_high_anomaly"]
[promise_site_cf_303: promises = "(Uncommented promise of type <i>reports</i> made by: RootProc anomaly high 2 d..) (promise_site_cf_303)"]
[RootProc_anomaly_high_2_dev_on___mon_host__at_Tue_Jun_30_12_46_08_2009______measured_value_100_av___mon_average_rootprocs__pm___mon_stddev_rootprocs_: promisers = "RootProc anomaly high 2 dev on $(mon.host) at Tue Jun 30 12:46:08 2009 
    measured value 100 av $(mon.average_rootprocs) pm $(mon.stddev_rootprocs)"]
[rootprocs_high_dev2: contexts = "rootprocs_high_dev2"]
[_tmp_shadow: promisers = "/tmp/shadow"]
[promise_site_cf_293: promises = "(Uncommented promise of type <i>files</i> made by: /tmp/passwd..) (promise_site_cf_293)"]
[_tmp_passwd: promisers = "/tmp/passwd"]
[_var_cfengine_inputs_shadow: promisers = "/var/cfengine/inputs/shadow"]
[promise_site_cf_287: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/pass..) (promise_site_cf_287)"]
[files: promise_types = "files"]

[is_employed_in_bundle = "is employed in bundle" 
          = "employs promises of type" / bundles]

[_var_cfengine_inputs_passwd: promisers = "/var/cfengine/inputs/passwd"]
[promise_site_cf_275: promises = "(Uncommented promise of type <i>vars</i> made by: files..) (promise_site_cf_275)"]
[files: promisers = "files"]
[promise_site_cf_274: promises = "(Uncommented promise of type <i>vars</i> made by: sysdir..) (promise_site_cf_274)"]
[sysdir: promisers = "sysdir"]
[anomalies: bundles = "anomalies"]
[free_disk_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /bin/df..) (free_disk_watch)"]
[_bin_df: promisers = "/bin/df"]
[free_memory_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /proc/meminfo..) (free_memory_watch)"]
[_proc_meminfo: promisers = "/proc/meminfo"]
[linux: contexts = "linux"]
[monitor_self_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_ro..) (monitor_self_watch)"]
[_var_cfengine_state_cf_rootprocs: promisers = "/var/cfengine/state/cf_rootprocs"]
[atlas: contexts = "atlas"]
[watch: bundles = "watch"]
[promise_site_cf_180: promises = "(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf\..*..) (promise_site_cf_180)"]
[_etc_resolv_conf____: promisers = "/etc/resolv.conf\..*"]
[promise_site_cf_174: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/outputs..) (promise_site_cf_174)"]
[_var_cfengine_outputs: promisers = "/var/cfengine/outputs"]
[garbage_collection: bundles = "garbage_collection"]
[promise_site_cf_157: promises = "Install patches (promise_site_cf_157)"]
[no_match: promisers = "no match"]
[promise_site_cf_148: promises = "Update the locate database (promise_site_cf_148)"]
[_usr_bin_updatedb___prunepaths__windows: promisers = "/usr/bin/updatedb --prunepaths=/windows"]
[Hr12: contexts = "Hr12"]
[promise_site_cf_141: promises = "(Uncommented promise of type <i>commands</i> made by: /usr/bin/zypper -non-inte..) (promise_site_cf_141)"]
[_usr_bin_zypper__non_interactive_patch: promisers = "/usr/bin/zypper -non-interactive patch"]
[promise_site_cf_139: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..) (promise_site_cf_139)"]
[promise_site_cf_131: promises = "(Uncommented promise of type <i>processes</i> made by: cf-monitord..) (promise_site_cf_131)"]
[promise_site_cf_120: promises = "(Uncommented promise of type <i>processes</i> made by: cfenvd..) (promise_site_cf_120)"]
[cfenvd: promisers = "cfenvd"]
[promise_site_cf_106: promises = "(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf..) (promise_site_cf_106)"]
[_etc_resolv_conf: promisers = "/etc/resolv.conf"]
[promise_site_cf_98: promises = "(Uncommented promise of type <i>reports</i> made by: Laptop wakes up..) (promise_site_cf_98)"]
[Laptop_wakes_up: promisers = "Laptop wakes up"]
[_up_and_running: contexts = "!up_and_running"]
[promise_site_cf_90: promises = "(Uncommented promise of type <i>vars</i> made by: component..) (promise_site_cf_90)"]
[component: promisers = "component"]
[main: bundles = "main"]
[promise_site_cf_77: promises = "(Uncommented promise of type <i>processes</i> made by: cron..) (promise_site_cf_77)"]
[cron: promisers = "cron"]
[exec_fix: contexts = "exec_fix"]
[promise_site_cf_70: promises = "This is inaccessible in new suse after cd opened/closed (promise_site_cf_70)"]
[_dev_sr0: promisers = "/dev/sr0"]
[promise_site_cf_66: promises = "(Uncommented promise of type <i>files</i> made by: /var/spool/cron/tabs/root..) (promise_site_cf_66)"]
[_var_spool_cron_tabs_root: promisers = "/var/spool/cron/tabs/root"]
[promise_site_cf_58: promises = "Check if there are still promises about cfengine 2 that need removing (promise_site_cf_58)"]
[_var_cfengine_inputs___: promisers = "/var/cfengine/inputs/.*"]
[promise_site_cf_48: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cfagent..) (promise_site_cf_48)"]
[_var_cfengine_bin_cfagent: promisers = "/var/cfengine/bin/cfagent"]
[integrate_cfengine2: contexts = "integrate_cfengine2"]
[promise_site_cf_40: promises = "(Uncommented promise of type <i>vars</i> made by: cf2bits..) (promise_site_cf_40)"]
[cf2bits: promisers = "cf2bits"]
[cfengine: bundles = "cfengine"]
[promise_site_cf_17: promises = "(Uncommented promise of type <i>vars</i> made by: crontab..) (promise_site_cf_17)"]
[_SuSE: contexts = "!SuSE"]
[promise_site_cf_13: promises = "(Uncommented promise of type <i>vars</i> made by: crontab..) (promise_site_cf_13)"]
[crontab: promisers = "crontab"]
[SuSE: contexts = "SuSE"]
[g: bundles = "g"]
[promise_update_cf_45: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-exec..) (promise_update_cf_45)"]
[_var_cfengine_bin_cf_execd: promisers = "/var/cfengine/bin/cf-execd"]
[reload_start_exec: contexts = "reload.start_exec"]
[promise_update_cf_41: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..) (promise_update_cf_41)"]
[_var_cfengine_bin_cf_monitord: promisers = "/var/cfengine/bin/cf-monitord"]
[reload_start_monitor: contexts = "reload.start_monitor"]
[promise_update_cf_37: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..) (promise_update_cf_37)"]
[_var_cfengine_bin_cf_serverd: promisers = "/var/cfengine/bin/cf-serverd"]
[reload_start_server: contexts = "reload.start_server"]
[promise_update_cf_31: promises = "(Uncommented promise of type <i>processes</i> made by: cf-execd..) (promise_update_cf_31)"]
[cf_execd: promisers = "cf-execd"]
[promise_update_cf_30: promises = "(Uncommented promise of type <i>processes</i> made by: cf-monitord..) (promise_update_cf_30)"]
[cf_monitord: promisers = "cf-monitord"]
[promise_update_cf_29: promises = "(Uncommented promise of type <i>processes</i> made by: cf-serverd..) (promise_update_cf_29)"]
[cf_serverd: promisers = "cf-serverd"]
[promise_update_cf_21: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/bin..) (promise_update_cf_21)"]
[_var_cfengine_bin: promisers = "/var/cfengine/bin"]
[promise_update_cf_13: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs..) (promise_update_cf_13)"]
[_var_cfengine_inputs: promisers = "/var/cfengine/inputs"]
[promise_update_cf_7: promises = "(Uncommented promise of type <i>vars</i> made by: master_location..) (promise_update_cf_7)"]
[master_location: promisers = "master_location"]
[any: contexts = "any"]
[update: bundles = "update"]
[userexists: functions = "True if user name or numerical id exists on this host (userexists)"]

[returns_data_type = "returns data-type" 
          = "is returned by function" / data_types]

[usemodule: functions = "Execute cfengine module script and set class if successful (usemodule)"]
[strcmp: functions = "True if the two strings match exactly (strcmp)"]
[splitstring: functions = "Convert a string in arg1 into a list of max arg3 strings by splitting on a regular expression in arg2 (splitstring)"]
[splayclass: functions = "True if the first argument's time-slot has arrived, according to a policy in arg2 (splayclass)"]
[selectservers: functions = "Select tcp servers which respond correctly to a query and return their number, set array of names (selectservers)"]
[rrange: functions = "Define a range of real numbers for cfengine internal use (rrange)"]
[returnszero: functions = "True if named shell command has exit status zero (returnszero)"]
[remotescalar: functions = "Read a scalar value from a remote cfengine server (remotescalar)"]
[regldap: functions = "True if arg6 is a regular expression matching a value item in an ldap search (regldap)"]
[reglist: functions = "True if arg2 matches any item in the list with id=arg1 (reglist)"]
[regline: functions = "True if arg2 is a regular expression matching a line in file arg1 (regline)"]
[registryvalue: functions = "Returns a value for an MS-Win registry key,value pair (registryvalue)"]
[regcmp: functions = "True if arg2 is a regular expression matching arg1 (regcmp)"]
[regarray: functions = "True if arg1 matches any item in the associative array with id=arg2 (regarray)"]
[readtcp: functions = "Connect to tcp port, send string and assign result to variable (readtcp)"]
[readstringlist: functions = "Read and assign a list variable from a file of separated strings (readstringlist)"]
[readstringarray: functions = "Read an array of strings from a file and assign the dimension to a variable (readstringarray)"]
[readreallist: functions = "Read and assign a list variable from a file of separated real numbers (readreallist)"]
[readrealarray: functions = "Read an array of real numbers from a file and assign the dimension to a variable (readrealarray)"]
[readintlist: functions = "Read and assign a list variable from a file of separated ints (readintlist)"]
[readintarray: functions = "Read an array of integers from a file and assign the dimension to a variable (readintarray)"]
[readfile: functions = "Read max number of bytes from named file and assign to variable (readfile)"]
[randomint: functions = "Generate a random integer between the given limits (randomint)"]
[peerleaders: functions = "Get a list of peer leaders from the named partitioning (peerleaders)"]
[peerleader: functions = "Get the assigned peer-leader of the partition to which we belong (peerleader)"]
[peers: functions = "Get a list of peers (not including ourself) from the partition to which we belong (peers)"]
[on: functions = "Convert an exact date/time to an integer system representation (on)"]
[now: functions = "Convert the current time into system representation (now)"]
[ldapvalue: functions = "Extract the first matching named value from ldap (ldapvalue)"]
[ldaplist: functions = "Extract all named values from multiple ldap records (ldaplist)"]
[ldaparray: functions = "Extract all values from an ldap record (ldaparray)"]
[lastnode: functions = "Extract the last of a separated string, e.g. filename from a path (lastnode)"]
[isvariable: functions = "True if the named variable is defined (isvariable)"]
[isplain: functions = "True if the named object is a plain/regular file (isplain)"]
[isnewerthan: functions = "True if arg1 is newer (modified later) than arg2 (mtime) (isnewerthan)"]
[islink: functions = "True if the named object is a symbolic link (islink)"]
[islessthan: functions = "True if arg1 is numerically less than arg2, else compare strings like NOT strcmp (islessthan)"]
[isgreaterthan: functions = "True if arg1 is numerically greater than arg2, else compare strings like strcmp (isgreaterthan)"]
[isdir: functions = "True if the named object is a directory (isdir)"]
[irange: functions = "Define a range of integer values for cfengine internal use (irange)"]
[iprange: functions = "True if the current host lies in the range of IP addresses specified (iprange)"]
[hostinnetgroup: functions = "True if the current host is in the named netgroup (hostinnetgroup)"]
[hostrange: functions = "True if the current host lies in the range of enumerated hostnames specified (hostrange)"]
[hashmatch: functions = "Compute the hash of arg1, of type arg2 and test if it matches the value in arg 3 (hashmatch)"]
[hash: functions = "Return the hash of arg1, type arg2 and assign to a variable (hash)"]
[groupexists: functions = "True if group or numerical id exists on this host (groupexists)"]
[getuid: functions = "Return the integer user id of the named user on this host (getuid)"]
[getgid: functions = "Return the integer group id of the named group on this host (getgid)"]
[getindices: functions = "Get a list of keys to the array whose id is the argument and assign to variable (getindices)"]
[filesexist: functions = "True if the named list of files can ALL be accessed (filesexist)"]
[fileexists: functions = "True if the named file can be accessed (fileexists)"]
[execresult: functions = "Execute named command and assign output to variable (execresult)"]
[classmatch: functions = "True if the regular expression matches any currently defined class (classmatch)"]
[classify: functions = "True if the canonicalization of the argument is a currently defined class (classify)"]
[changedbefore: functions = "True if arg1 was changed before arg2 (ctime) (changedbefore)"]
[canonify: functions = "Convert an abitrary string into a legal class name (canonify)"]
[ago: functions = "Convert a time relative to now to an integer system representation (ago)"]
[accumulated: functions = "Convert an accumulated amount of time into a system representation (accumulated)"]
[accessedbefore: functions = "True if arg1 was accessed before arg2 (atime) (accessedbefore)"]
[class: data_types = "A boolean returned by certain functions in classes promises (class)"]
[policy: data_types = "The policy for (dis)allowing redefinition of variables matching free,overridable,constant (policy)"]
[rlist: data_types = "A list of real numbers matching -9.99999E100,9.99999E100 (rlist)"]
[ilist: data_types = "A list of integers matching -99999999999,9999999999 (ilist)"]
[slist: data_types = "A list of scalar strings matching  (slist)"]
[real: data_types = "A scalar real number matching -9.99999E100,9.99999E100 (real)"]
[int: data_types = "A scalar integer matching -99999999999,9999999999 (int)"]
[string: data_types = "A scalar string matching  (string)"]
[data_types: miscellaneous_concepts = "data types"]
[select_region: values = "select_region"]
[comment: values = "comment"]
[depends_on: values = "depends_on"]
[handle: values = "handle"]
[ifvarclass: values = "ifvarclass"]
[classes: values = "classes"]
[action: values = "action"]
[extraction_regex: body_constraints = "Regular expression that should contain a single backreference for extracting a value (extraction_regex)"]

[is_a_body_constraint_of_type = "is a body constraint of type" 
          = "has possible body constraints" / values]

[extraction_regex: values = "Regular expression that should contain a single backreference for extracting a value (extraction_regex)"]

[is_a_possible_sub_body_constraint_for = "is a possible sub-body constraint for" 
          = "may have sub-body constraints" / body_constraints]

[select_line_number: body_constraints = "Read from the n-th line of the output (fixed format) (select_line_number)"]
[select_line_number: values = "Read from the n-th line of the output (fixed format) (select_line_number)"]
[match_value: body_constraints = "Criteria for extracting the measurement from a datastream (match_value)"]

[is_a_possible_body_constraint_for = "is a possible body constraint for" 
          = "can have body constraints" / promise_types]

[units: body_constraints = "The engineering dimensions of this value or a note about its intent used in plots (units)"]
[history_type: body_constraints = "Whether the data can be seen as a time-series or just an isolated value (history_type)"]
[data_type: body_constraints = "The datatype being collected. (data_type)"]
[stream_type: body_constraints = "The datatype being collected. (stream_type)"]
[measurements: promise_types = "measurements"]
[path_root: body_constraints = "Base path of the occurrence when locating file (replaced by web_root) (path_root)"]
[web_root: body_constraints = "Base URL of the occurrence when rendered as a web-URL (replaces path_root) (web_root)"]
[representation: body_constraints = "How to interpret the promiser string e.g. actual data or reference to data (representation)"]
[represents: body_constraints = "List of subtopics that explains the type(s) of information represented by the occurrence (represents)"]

[is_a_list_of_type = "is a list of type" 
          = "is used in" / values]

[occurrences: promise_types = "occurrences"]
[associates: body_constraints = "List of associated topics by this forward relationship (associates)"]
[associates: values = "List of associated topics by this forward relationship (associates)"]
[backward_relationship: body_constraints = "Name of backward/inverse association from associates to promiser topic (backward_relationship)"]
[backward_relationship: values = "Name of backward/inverse association from associates to promiser topic (backward_relationship)"]
[forward_relationship: body_constraints = "Name of forward association between promiser topic and associates (forward_relationship)"]
[association: body_constraints = "Declare associated topics (association)"]
[topics: promise_types = "topics"]
[authorize: body_constraints = "List of public-key user names that are allowed to activate the promised class during remote agent activation (authorize)"]
[roles: promise_types = "roles"]
[resource_type: body_constraints = "The type of object being granted access. The default is access to files. (resource_type)"]
[ifencrypted: body_constraints = "true/false whether the current file access promise is conditional on the connection from the client being encrypted (ifencrypted)"]
[maproot: body_constraints = "List of host names or IP addresses to grant full read-privilege on the server (maproot)"]
[deny: body_constraints = "List of host names or IP addresses to deny access to file objects (deny)"]
[admit: body_constraints = "List of host names or IP addresses to grant access to file objects (admit)"]
[access: promise_types = "access"]
[scan_arrivals: body_constraints = "true/false generate pseudo-periodic disk change arrival distribution (scan_arrivals)"]
[scan_arrivals: values = "true/false generate pseudo-periodic disk change arrival distribution (scan_arrivals)"]
[sensible_count: body_constraints = "Minimum number of files that should be defined on a sensible-looking storage device (sensible_count)"]
[sensible_count: values = "Minimum number of files that should be defined on a sensible-looking storage device (sensible_count)"]
[sensible_size: body_constraints = "Minimum size in bytes that should be used on a sensible-looking storage device (sensible_size)"]
[freespace: body_constraints = "Absolute or percentage minimum disk space that should be available before warning (freespace)"]
[freespace: values = "Absolute or percentage minimum disk space that should be available before warning (freespace)"]
[check_foreign: body_constraints = "true/false verify storage that is mounted from a foreign system on this host (check_foreign)"]
[volume: body_constraints = "Criteria for monitoring/probing mounted volumes (volume)"]
[unmount: body_constraints = "true/false unmount a previously mounted filesystem (unmount)"]
[unmount: values = "true/false unmount a previously mounted filesystem (unmount)"]
[edit_fstab: body_constraints = "true/false add or remove entries to the file system table ("fstab") (edit_fstab)"]
[edit_fstab: values = "true/false add or remove entries to the file system table ("fstab") (edit_fstab)"]
[mount_options: body_constraints = "List of option strings to add to the file system table ("fstab") (mount_options)"]
[mount_options: values = "List of option strings to add to the file system table ("fstab") (mount_options)"]
[mount_server: body_constraints = "Hostname or IP or remote file system server (mount_server)"]
[mount_server: values = "Hostname or IP or remote file system server (mount_server)"]
[mount_source: body_constraints = "Path of remote file system to mount (mount_source)"]
[mount_type: body_constraints = "Protocol type of remote file system (mount_type)"]
[mount: body_constraints = "Criteria for mounting foreign file systems (mount)"]
[storage: promise_types = "storage"]
[restart_class: body_constraints = "A class to be set if the process is not running, so that a command: rule can be referred to restart the process (restart_class)"]
[process_result: body_constraints = "Boolean class expression returning the logical combination of classes set by a process selection test (process_result)"]
[process_result: values = "Boolean class expression returning the logical combination of classes set by a process selection test (process_result)"]
[threads: body_constraints = "Range of integers matching the threads (NLWP) field of a process (threads)"]
[priority: body_constraints = "Range of integers matching the priority field (PRI/NI) of a process (priority)"]
[priority: values = "Range of integers matching the priority field (PRI/NI) of a process (priority)"]
[tty: body_constraints = "Regular expression matching the tty field of a process (tty)"]
[tty: values = "Regular expression matching the tty field of a process (tty)"]
[command: body_constraints = "Regular expression matching the command/cmd field of a process (command)"]
[stime_range: body_constraints = "Range of integers matching the start time of a process (stime_range)"]
[ttime_range: body_constraints = "Range of integers matching the total elapsed time of a process (ttime_range)"]
[ttime_range: values = "Range of integers matching the total elapsed time of a process (ttime_range)"]
[status: body_constraints = "Regular expression matching the status field of a process (status)"]
[status: values = "Regular expression matching the status field of a process (status)"]
[vsize: body_constraints = "Range of integers matching the virtual memory size of a process (vsize)"]
[vsize: values = "Range of integers matching the virtual memory size of a process (vsize)"]
[rsize: body_constraints = "Range of integers matching the resident memory size of a process (rsize)"]
[rsize: values = "Range of integers matching the resident memory size of a process (rsize)"]
[pgid: body_constraints = "Range of integers matching the parent group id of a process (pgid)"]
[pgid: values = "Range of integers matching the parent group id of a process (pgid)"]
[ppid: body_constraints = "Range of integers matching the parent process id of a process (ppid)"]
[ppid: values = "Range of integers matching the parent process id of a process (ppid)"]
[pid: body_constraints = "Range of integers matching the process id of a process (pid)"]
[pid: values = "Range of integers matching the process id of a process (pid)"]
[process_owner: body_constraints = "List of regexes matching the user of a process (process_owner)"]
[process_select: body_constraints = "Criteria for matching processes in the system process table (process_select)"]
[out_of_range_define: body_constraints = "List of classes to define if the matches are out of range (out_of_range_define)"]
[out_of_range_define: values = "List of classes to define if the matches are out of range (out_of_range_define)"]
[in_range_define: body_constraints = "List of classes to define if the matches are in range (in_range_define)"]
[in_range_define: values = "List of classes to define if the matches are in range (in_range_define)"]
[match_range: body_constraints = "Integer range for acceptable number of matches for this process (match_range)"]
[process_count: body_constraints = "Criteria for constraining the number of processes matching other criteria (process_count)"]
[process_stop: body_constraints = "A command used to stop a running process (process_stop)"]
[signals: body_constraints = "A list of menu options representing signals to be sent to a process (signals)"]
[processes: promise_types = "processes"]
[package_select: body_constraints = "A criterion for first acceptable match relative to "package_version" (package_select)"]
[package_architectures: body_constraints = "Select the architecture for package selection (package_architectures)"]
[package_version: body_constraints = "Version reference point for determining promised version (package_version)"]
[package_name_convention: body_constraints = "This is how the package manager expects the file to be referred to, e.g. $(name).$(arch) (package_name_convention)"]
[package_name_convention: values = "This is how the package manager expects the file to be referred to, e.g. $(name).$(arch) (package_name_convention)"]
[package_noverify_returncode: body_constraints = "Integer return code indicating package verification failure (package_noverify_returncode)"]
[package_noverify_returncode: values = "Integer return code indicating package verification failure (package_noverify_returncode)"]
[package_noverify_regex: body_constraints = "Regular expression to match verification failure output (package_noverify_regex)"]
[package_noverify_regex: values = "Regular expression to match verification failure output (package_noverify_regex)"]
[package_verify_command: body_constraints = "Command to verify the correctness of an installed package (package_verify_command)"]
[package_verify_command: values = "Command to verify the correctness of an installed package (package_verify_command)"]
[package_patch_command: body_constraints = "Command to update to the latest patch release of an installed package (package_patch_command)"]
[package_patch_command: values = "Command to update to the latest patch release of an installed package (package_patch_command)"]
[package_update_command: body_constraints = "Command to update to the latest version a currently installed package (package_update_command)"]
[package_update_command: values = "Command to update to the latest version a currently installed package (package_update_command)"]
[package_delete_command: body_constraints = "Command to remove a package from the system (package_delete_command)"]
[package_delete_command: values = "Command to remove a package from the system (package_delete_command)"]
[package_add_command: body_constraints = "Command to install a package to the system (package_add_command)"]
[package_add_command: values = "Command to install a package to the system (package_add_command)"]
[package_installed_regex: body_constraints = "Regular expression which matches packages that are already installed (package_installed_regex)"]
[package_installed_regex: values = "Regular expression which matches packages that are already installed (package_installed_regex)"]
[package_arch_regex: body_constraints = "Regular expression with one backreference to extract package architecture string (package_arch_regex)"]
[package_arch_regex: values = "Regular expression with one backreference to extract package architecture string (package_arch_regex)"]
[package_name_regex: body_constraints = "Regular expression with one backreference to extract package name string (package_name_regex)"]
[package_name_regex: values = "Regular expression with one backreference to extract package name string (package_name_regex)"]
[package_version_regex: body_constraints = "Regular expression with one backreference to extract package version string (package_version_regex)"]
[package_version_regex: values = "Regular expression with one backreference to extract package version string (package_version_regex)"]
[package_patch_installed_regex: body_constraints = "Regular expression which matches packages that are already installed (package_patch_installed_regex)"]
[package_patch_installed_regex: values = "Regular expression which matches packages that are already installed (package_patch_installed_regex)"]
[package_patch_arch_regex: body_constraints = "Regular expression with one backreference to extract update architecture string (package_patch_arch_regex)"]
[package_patch_arch_regex: values = "Regular expression with one backreference to extract update architecture string (package_patch_arch_regex)"]
[package_patch_name_regex: body_constraints = "Regular expression with one backreference to extract update name string (package_patch_name_regex)"]
[package_patch_name_regex: values = "Regular expression with one backreference to extract update name string (package_patch_name_regex)"]
[package_patch_version_regex: body_constraints = "Regular expression with one backreference to extract update version string (package_patch_version_regex)"]
[package_patch_version_regex: values = "Regular expression with one backreference to extract update version string (package_patch_version_regex)"]
[package_patch_list_command: body_constraints = "Command to obtain a list of available patches or updates (package_patch_list_command)"]
[package_patch_list_command: values = "Command to obtain a list of available patches or updates (package_patch_list_command)"]
[package_list_arch_regex: body_constraints = "Regular expression with one backreference to extract package architecture string (package_list_arch_regex)"]
[package_list_arch_regex: values = "Regular expression with one backreference to extract package architecture string (package_list_arch_regex)"]
[package_list_name_regex: body_constraints = "Regular expression with one backreference to extract package name string (package_list_name_regex)"]
[package_list_name_regex: values = "Regular expression with one backreference to extract package name string (package_list_name_regex)"]
[package_list_version_regex: body_constraints = "Regular expression with one backreference to extract package version string (package_list_version_regex)"]
[package_list_version_regex: values = "Regular expression with one backreference to extract package version string (package_list_version_regex)"]
[package_list_command: body_constraints = "Command to obtain a list of installed packages (package_list_command)"]
[package_list_command: values = "Command to obtain a list of installed packages (package_list_command)"]
[package_file_repositories: body_constraints = "A list of machine-local directories to search for packages (package_file_repositories)"]
[package_changes: body_constraints = "Menu option - whether to group packages into a single aggregate command (package_changes)"]
[package_method: body_constraints = "Criteria for installation and verification (package_method)"]
[package_policy: body_constraints = "Criteria for package installation/upgrade on the current system (package_policy)"]
[packages: promise_types = "packages"]
[usebundle: body_constraints = "Specify the name of a bundle to run as a parameterized method (usebundle)"]
[methods: promise_types = "methods"]
[ipv6_address: body_constraints = "IPv6 address for the interface (ipv6_address)"]
[ipv4_netmask: body_constraints = "Netmask for the interface (ipv4_netmask)"]
[ipv4_address: body_constraints = "IPv4 address for the interface (ipv4_address)"]
[tcp_ip: body_constraints = "Interface tcp/ip properties (tcp_ip)"]
[interfaces: promise_types = "interfaces"]
[delete_if_not_contains_from_list: body_constraints = "Delete line if a regex in the list DOES NOT match a line fragment (delete_if_not_contains_from_list)"]
[delete_if_not_contains_from_list: values = "Delete line if a regex in the list DOES NOT match a line fragment (delete_if_not_contains_from_list)"]
[delete_if_contains_from_list: body_constraints = "Delete line if a regex in the list match a line fragment (delete_if_contains_from_list)"]
[delete_if_contains_from_list: values = "Delete line if a regex in the list match a line fragment (delete_if_contains_from_list)"]
[delete_if_not_match_from_list: body_constraints = "Delete line if it DOES NOT fully match a regex in the list (delete_if_not_match_from_list)"]
[delete_if_not_match_from_list: values = "Delete line if it DOES NOT fully match a regex in the list (delete_if_not_match_from_list)"]
[delete_if_match_from_list: body_constraints = "Delete line if it fully matches a regex in the list (delete_if_match_from_list)"]
[delete_if_match_from_list: values = "Delete line if it fully matches a regex in the list (delete_if_match_from_list)"]
[delete_if_not_startwith_from_list: body_constraints = "Delete line if it DOES NOT start with a string in the list (delete_if_not_startwith_from_list)"]
[delete_if_not_startwith_from_list: values = "Delete line if it DOES NOT start with a string in the list (delete_if_not_startwith_from_list)"]
[delete_if_startwith_from_list: body_constraints = "Delete line if it starts with a string in the list (delete_if_startwith_from_list)"]
[delete_select: body_constraints = "Delete only if lines pass filter criteria (delete_select)"]
[not_matching: body_constraints = "true/false negate match criterion (not_matching)"]
[delete_lines: promise_types = "delete_lines"]
[occurrences: body_constraints = "Menu option to replace all occurrences or just first (NB the latter is non-convergent) (occurrences)"]
[occurrences: values = "Menu option to replace all occurrences or just first (NB the latter is non-convergent) (occurrences)"]
[replace_value: body_constraints = "Value used to replace regular expression matches in search (replace_value)"]
[replace_with: body_constraints = "Search-replace pattern (replace_with)"]
[replace_patterns: promise_types = "replace_patterns"]
[allow_blank_fields: body_constraints = "true/false allow blank fields in a line (do not purge) (allow_blank_fields)"]
[allow_blank_fields: values = "true/false allow blank fields in a line (do not purge) (allow_blank_fields)"]
[extend_fields: body_constraints = "true/false add new fields at end of line if necessary to complete edit (extend_fields)"]
[field_operation: body_constraints = "Menu option policy for editing subfields (field_operation)"]
[field_operation: values = "Menu option policy for editing subfields (field_operation)"]
[field_value: body_constraints = "Set field value to a fixed value (field_value)"]
[field_value: values = "Set field value to a fixed value (field_value)"]
[value_separator: body_constraints = "Character separator for subfields inside the selected field (value_separator)"]
[value_separator: values = "Character separator for subfields inside the selected field (value_separator)"]
[select_field: body_constraints = "Integer index of the field required 1..n (select_field)"]
[select_field: values = "Integer index of the field required 1..n (select_field)"]
[field_separator: body_constraints = "The regular expression used to separate fields in a line (field_separator)"]
[edit_field: body_constraints = "Edit line-based file as matrix of fields (edit_field)"]
[field_edits: promise_types = "field_edits"]
[expand_scalars: body_constraints = "Expand any unexpanded variables (expand_scalars)"]
[insert_if_not_contains_from_list: body_constraints = "Insert line if a regex in the list DOES NOT match a line fragment (insert_if_not_contains_from_list)"]
[insert_if_not_contains_from_list: values = "Insert line if a regex in the list DOES NOT match a line fragment (insert_if_not_contains_from_list)"]
[insert_if_contains_from_list: body_constraints = "Insert line if a regex in the list match a line fragment (insert_if_contains_from_list)"]
[insert_if_contains_from_list: values = "Insert line if a regex in the list match a line fragment (insert_if_contains_from_list)"]
[insert_if_not_match_from_list: body_constraints = "Insert line if it DOES NOT fully match a regex in the list (insert_if_not_match_from_list)"]
[insert_if_not_match_from_list: values = "Insert line if it DOES NOT fully match a regex in the list (insert_if_not_match_from_list)"]
[insert_if_match_from_list: body_constraints = "Insert line if it fully matches a regex in the list (insert_if_match_from_list)"]
[insert_if_match_from_list: values = "Insert line if it fully matches a regex in the list (insert_if_match_from_list)"]
[insert_if_not_startwith_from_list: body_constraints = "Insert line if it DOES NOT start with a string in the list (insert_if_not_startwith_from_list)"]
[insert_if_not_startwith_from_list: values = "Insert line if it DOES NOT start with a string in the list (insert_if_not_startwith_from_list)"]
[insert_if_startwith_from_list: body_constraints = "Insert line if it starts with a string in the list (insert_if_startwith_from_list)"]
[insert_select: body_constraints = "Insert only if lines pass filter criteria (insert_select)"]
[insert_type: body_constraints = "Type of object the promiser string refers to (default literal) (insert_type)"]
[first_last: body_constraints = "Menu option, choose first or last occurrence of match in file (first_last)"]
[before_after: body_constraints = "Menu option, point cursor before of after matched line (before_after)"]
[before_after: values = "Menu option, point cursor before of after matched line (before_after)"]
[select_line_matching: body_constraints = "Regular expression for matching file line location (select_line_matching)"]
[location: body_constraints = "Specify where in a file an insertion will be made (location)"]
[insert_lines: promise_types = "insert_lines"]
[specify_inherit_aces: body_constraints = "Native settings for access control entry (specify_inherit_aces)"]
[aces: body_constraints = "Native settings for access control entry (aces)"]
[acl_directory_inherit: body_constraints = "Access control list type for the affected file system (acl_directory_inherit)"]
[acl_type: body_constraints = "Access control list type for the affected file system (acl_type)"]
[acl_method: body_constraints = "Editing method for access control list (acl_method)"]
[acl: body_constraints = "Criteria for access control lists on file (acl)"]
[pathtype: body_constraints = "Menu option for interpreting promiser file object (pathtype)"]
[transformer: body_constraints = "Shell command (with full path) used to transform current file (transformer)"]
[move_obstructions: body_constraints = "true/false whether to move obstructions to file-object creation (move_obstructions)"]
[create: body_constraints = "true/false whether to create non-existing file (create)"]
[touch: body_constraints = "true/false whether to touch time stamps on file (touch)"]
[rmdeadlinks: body_constraints = "true/false remove links that point to nowhere (rmdeadlinks)"]
[rmdeadlinks: values = "true/false remove links that point to nowhere (rmdeadlinks)"]
[traverse_links: body_constraints = "true/false traverse symbolic links to directories (false) (traverse_links)"]
[traverse_links: values = "true/false traverse symbolic links to directories (false) (traverse_links)"]
[xdev: body_constraints = "true/false exclude directories that are on different devices (xdev)"]
[xdev: values = "true/false exclude directories that are on different devices (xdev)"]
[depth: body_constraints = "Maximum depth level for search (depth)"]
[depth: values = "Maximum depth level for search (depth)"]
[include_basedir: body_constraints = "true/false include the start/root dir of the search results (include_basedir)"]
[include_basedir: values = "true/false include the start/root dir of the search results (include_basedir)"]
[exclude_dirs: body_constraints = "List of regexes of directory names NOT to include in depth search (exclude_dirs)"]
[exclude_dirs: values = "List of regexes of directory names NOT to include in depth search (exclude_dirs)"]
[include_dirs: body_constraints = "List of regexes of directory names to include in depth search (include_dirs)"]
[depth_search: body_constraints = "Criteria for file depth searches (depth_search)"]
[empty_file_before_editing: body_constraints = "Baseline memory model of file to zero/empty before commencing promised edits (empty_file_before_editing)"]
[empty_file_before_editing: values = "Baseline memory model of file to zero/empty before commencing promised edits (empty_file_before_editing)"]
[max_file_size: body_constraints = "Do not edit files bigger than this number of bytes (max_file_size)"]
[edit_backup: body_constraints = "Menu option for backup policy on edit changes (edit_backup)"]
[edit_defaults: body_constraints = "Default promise details for file edits (edit_defaults)"]
[edit_xml: body_constraints = "XML editing model for file (edit_xml)"]
[edit_line: body_constraints = "Line editing model for file (edit_line)"]
[repository: body_constraints = "Name of a repository for versioning (repository)"]
[disable_mode: body_constraints = "The permissions to set when a file is disabled (disable_mode)"]
[rotate: body_constraints = "Maximum number of file rotations to keep (rotate)"]
[rotate: values = "Maximum number of file rotations to keep (rotate)"]
[disable: body_constraints = "true/false automatically rename and remove permissions (disable)"]
[disable: values = "true/false automatically rename and remove permissions (disable)"]
[disable_suffix: body_constraints = "The suffix to add to files when disabling (.cfdisabled) (disable_suffix)"]
[disable_suffix: values = "The suffix to add to files when disabling (.cfdisabled) (disable_suffix)"]
[newname: body_constraints = "The desired name for the current file (newname)"]
[rename: body_constraints = "Criteria for renaming files (rename)"]
[rmdirs: body_constraints = "true/false whether to delete empty directories during recursive deletion (rmdirs)"]
[dirlinks: body_constraints = "Menu option policy for dealing with symbolic links to directories during deletion (dirlinks)"]
[delete: body_constraints = "Criteria for deleting files (delete)"]
[update_hashes: body_constraints = "Update hash values immediately after change warning (update_hashes)"]
[report_changes: body_constraints = "Specify criteria for change warnings (report_changes)"]
[hash: body_constraints = "Hash files for change detection (hash)"]
[changes: body_constraints = "Criteria for change management (changes)"]
[bsdflags: body_constraints = "List of menu options for bsd file system flags to set (bsdflags)"]
[bsdflags: values = "List of menu options for bsd file system flags to set (bsdflags)"]
[rxdirs: body_constraints = "true/false add execute flag for directories if read flag is set (rxdirs)"]
[rxdirs: values = "true/false add execute flag for directories if read flag is set (rxdirs)"]
[groups: body_constraints = "List of acceptable groups of group ids, first is change target (groups)"]
[groups: values = "List of acceptable groups of group ids, first is change target (groups)"]
[owners: body_constraints = "List of acceptable owners or user ids, first is change target (owners)"]
[owners: values = "List of acceptable owners or user ids, first is change target (owners)"]
[mode: body_constraints = "File permissions (like posix chmod) (mode)"]
[perms: body_constraints = "Criteria for setting permissions on a file (perms)"]
[when_linking_children: body_constraints = "Policy for overriding existing files when linking directories of children (when_linking_children)"]
[when_linking_children: values = "Policy for overriding existing files when linking directories of children (when_linking_children)"]
[link_children: body_constraints = "true/false whether to link all directory's children to source originals (link_children)"]
[when_no_source: body_constraints = "Behaviour when the source file to link to does not exist (when_no_source)"]
[when_no_source: values = "Behaviour when the source file to link to does not exist (when_no_source)"]
[copy_patterns: body_constraints = "A set of patterns that should be copied ansd synchronized instead of linked (copy_patterns)"]
[copy_patterns: values = "A set of patterns that should be copied ansd synchronized instead of linked (copy_patterns)"]
[link_type: body_constraints = "The type of link used to alias the file (link_type)"]
[link_type: values = "The type of link used to alias the file (link_type)"]
[link_from: body_constraints = "Criteria for linking file from a source (link_from)"]
[findertype: body_constraints = "Menu option for default finder type on MacOSX (findertype)"]
[findertype: values = "Menu option for default finder type on MacOSX (findertype)"]
[check_root: body_constraints = "true/false check permissions on the root directory when depth_search (check_root)"]
[check_root: values = "true/false check permissions on the root directory when depth_search (check_root)"]
[purge: body_constraints = "true/false purge files on client that do not match files on server when depth_search (purge)"]
[purge: values = "true/false purge files on client that do not match files on server when depth_search (purge)"]
[verify: body_constraints = "true/false verify transferred file by hashing after copy (resource penalty) (verify)"]
[verify: values = "true/false verify transferred file by hashing after copy (resource penalty) (verify)"]
[encrypt: body_constraints = "true/false use encrypted data stream to connect to remote host (encrypt)"]
[encrypt: values = "true/false use encrypted data stream to connect to remote host (encrypt)"]
[trustkey: body_constraints = "true/false trust public keys from remote server if previously unknown (trustkey)"]
[copy_size: body_constraints = "Integer range of file sizes that may be copied (copy_size)"]
[copy_size: values = "Integer range of file sizes that may be copied (copy_size)"]
[force_ipv4: body_constraints = "true/false force use of ipv4 on ipv6 enabled network (force_ipv4)"]
[force_ipv4: values = "true/false force use of ipv4 on ipv6 enabled network (force_ipv4)"]
[force_update: body_constraints = "true/false force copy update always (force_update)"]
[force_update: values = "true/false force copy update always (force_update)"]
[type_check: body_constraints = "true/false compare file types before copying and require match (type_check)"]
[type_check: values = "true/false compare file types before copying and require match (type_check)"]
[link_type: body_constraints = "Menu option for type of links to use when copying (link_type)"]
[compare: body_constraints = "Menu option policy for comparing source and image file attributes (compare)"]
[compare: values = "Menu option policy for comparing source and image file attributes (compare)"]
[copylink_patterns: body_constraints = "List of patterns matching files that should be linked instead of copied (copylink_patterns)"]
[copylink_patterns: values = "List of patterns matching files that should be linked instead of copied (copylink_patterns)"]
[linkcopy_patterns: body_constraints = "List of patterns matching symbolic links that should be replaced with copies (linkcopy_patterns)"]
[linkcopy_patterns: values = "List of patterns matching symbolic links that should be replaced with copies (linkcopy_patterns)"]
[preserve: body_constraints = "true/false whether to preserve file permissions on copied file (preserve)"]
[preserve: values = "true/false whether to preserve file permissions on copied file (preserve)"]
[stealth: body_constraints = "true/false whether to preserve time stamps on copied file (stealth)"]
[copy_backup: body_constraints = "Menu option policy for file backup/version control (copy_backup)"]
[portnumber: body_constraints = "Port number to connect to on server host (portnumber)"]
[servers: body_constraints = "List of servers in order of preference from which to copy (servers)"]
[servers: values = "List of servers in order of preference from which to copy (servers)"]
[source: body_constraints = "Reference source file from which to copy (source)"]
[copy_from: body_constraints = "Criteria for copying file from a source (copy_from)"]
[file_result: body_constraints = "Logical expression combining classes defined by file search criteria (file_result)"]
[file_result: values = "Logical expression combining classes defined by file search criteria (file_result)"]
[issymlinkto: body_constraints = "List of regular expressions to match file objects (issymlinkto)"]
[file_types: body_constraints = "List of acceptable file types from menu choices (file_types)"]
[file_types: values = "List of acceptable file types from menu choices (file_types)"]
[exec_program: body_constraints = "Execute this command on each file and match if the exit status is zero (exec_program)"]
[exec_program: values = "Execute this command on each file and match if the exit status is zero (exec_program)"]
[exec_regex: body_constraints = "Matches file if this regular expression matches any full line returned by the command (exec_regex)"]
[atime: body_constraints = "Range of access times (atime) for acceptable files (atime)"]
[mtime: body_constraints = "Range of modification times (mtime) for acceptable files (mtime)"]
[ctime: body_constraints = "Range of change times (ctime) for acceptable files (ctime)"]
[search_bsdflags: body_constraints = "String of flags for bsd file system flags expected set (search_bsdflags)"]
[search_bsdflags: values = "String of flags for bsd file system flags expected set (search_bsdflags)"]
[search_groups: body_constraints = "List of acceptable group names or ids for the file, or regexes to match (search_groups)"]
[search_groups: values = "List of acceptable group names or ids for the file, or regexes to match (search_groups)"]
[search_owners: body_constraints = "List of acceptable user names or ids for the file, or regexes to match (search_owners)"]
[search_size: body_constraints = "Integer range of file sizes (search_size)"]
[search_size: values = "Integer range of file sizes (search_size)"]
[search_mode: body_constraints = "A list of mode masks for acceptable file permissions (search_mode)"]
[search_mode: values = "A list of mode masks for acceptable file permissions (search_mode)"]
[path_name: body_constraints = "List of pathnames to match acceptable target (path_name)"]
[path_name: values = "List of pathnames to match acceptable target (path_name)"]
[leaf_name: body_constraints = "List of regexes that match an acceptable name (leaf_name)"]
[file_select: body_constraints = "Choose which files select in a search (file_select)"]
[files: promise_types = "files"]
[registry_exclude: body_constraints = "A list of regular expressions to ignore in key/value verification (registry_exclude)"]
[database_rows: body_constraints = "An ordered list of row values to be promised by SQL databases (database_rows)"]
[database_columns: body_constraints = "A list of column definitions to be promised by SQL databases (database_columns)"]
[database_operation: body_constraints = "The nature of the promise - to be or not to be (database_operation)"]
[database_type: body_constraints = "The type of database that is to be manipulated (database_type)"]
[db_server_connection_db: body_constraints = "The name of an existing database to connect to in order to create/manage other databases (db_server_connection_db)"]
[db_server_type: body_constraints = "The dialect of the database server (db_server_type)"]
[db_server_type: values = "The dialect of the database server (db_server_type)"]
[db_server_host: body_constraints = "Hostname or address for connection to database, blank means localhost (db_server_host)"]
[db_server_host: values = "Hostname or address for connection to database, blank means localhost (db_server_host)"]
[db_server_password: body_constraints = "Clear text password for database connection (db_server_password)"]
[db_server_password: values = "Clear text password for database connection (db_server_password)"]
[db_server_owner: body_constraints = "User name for database connection (db_server_owner)"]
[database_server: body_constraints = "Credentials for connecting to a local/remote database server (database_server)"]
[databases: promise_types = "databases"]
[module: body_constraints = "true/false whether to expect the cfengine module protocol (module)"]
[no_output: body_constraints = "true/false discard all output from the command (no_output)"]
[no_output: values = "true/false discard all output from the command (no_output)"]
[preview: body_constraints = "true/false preview command when running in dry-run mode (with -n) (preview)"]
[preview: values = "true/false preview command when running in dry-run mode (with -n) (preview)"]
[chroot: body_constraints = "Directory of root sandbox for process (chroot)"]
[chroot: values = "Directory of root sandbox for process (chroot)"]
[chdir: body_constraints = "Directory for setting current/base directory for the process (chdir)"]
[exec_timeout: body_constraints = "Timeout in seconds for command completion (exec_timeout)"]
[exec_timeout: values = "Timeout in seconds for command completion (exec_timeout)"]
[exec_group: body_constraints = "The group name or id under which to run the process (exec_group)"]
[exec_group: values = "The group name or id under which to run the process (exec_group)"]
[exec_owner: body_constraints = "The user name or id under which to run the process (exec_owner)"]
[umask: body_constraints = "The umask value for the child process (umask)"]
[umask: values = "The umask value for the child process (umask)"]
[useshell: body_constraints = "true/false embed the command in a shell environment (true) (useshell)"]
[contain: body_constraints = "Containment options for the execution process (contain)"]
[args: body_constraints = "Alternative string of arguments for the command (concatenated with promiser string) (args)"]
[commands: promise_types = "commands"]
[select_end: body_constraints = "Regular expression matches end of edit region from start (select_end)"]
[select_end: values = "Regular expression matches end of edit region from start (select_end)"]
[select_start: body_constraints = "Regular expression matching start of edit region (select_start)"]
[select_region: body_constraints = "Limit edits to a demarked region of the file (select_region)"]
[comment: body_constraints = "A comment about this promise's real intention that follows through the program (comment)"]
[depends_on: body_constraints = "A list of promise handles that this promise builds on or depends on somehow (for knowledge management) (depends_on)"]
[handle: body_constraints = "A unique id-tag string for referring to this as a promisee elsewhere (handle)"]
[ifvarclass: body_constraints = "Extended classes ANDed with context (ifvarclass)"]
[timer_policy: body_constraints = "Whether a persistent class restarts its counter when rediscovered (timer_policy)"]
[timer_policy: values = "Whether a persistent class restarts its counter when rediscovered (timer_policy)"]
[persist_time: body_constraints = "A number of minutes the specified classes should remain active (persist_time)"]
[persist_time: values = "A number of minutes the specified classes should remain active (persist_time)"]
[promise_kept: body_constraints = "A list of classes to be defined (promise_kept)"]
[promise_kept: values = "A list of classes to be defined (promise_kept)"]
[repair_timeout: body_constraints = "A list of classes to be defined (repair_timeout)"]
[repair_timeout: values = "A list of classes to be defined (repair_timeout)"]
[repair_denied: body_constraints = "A list of classes to be defined (repair_denied)"]
[repair_denied: values = "A list of classes to be defined (repair_denied)"]
[repair_failed: body_constraints = "A list of classes to be defined (repair_failed)"]
[repair_failed: values = "A list of classes to be defined (repair_failed)"]
[promise_repaired: body_constraints = "A list of classes to be defined (promise_repaired)"]
[classes: body_constraints = "Signalling behaviour (classes)"]
[measurement_class: body_constraints = "If set performance will be measured and recorded under this identifier (measurement_class)"]
[report_level: body_constraints = "The reporting level for standard output (report_level)"]
[report_level: values = "The reporting level for standard output (report_level)"]
[background: body_constraints = "true/false switch for parallelizing the promise repair (background)"]
[background: values = "true/false switch for parallelizing the promise repair (background)"]
[audit: body_constraints = "true/false switch for detailed audit records of this promise (audit)"]
[audit: values = "true/false switch for detailed audit records of this promise (audit)"]
[log_failed: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to syslog (log_failed)"]
[log_failed: values = "This should be filename of a file to which log_string will be saved, if undefined it goes to syslog (log_failed)"]
[log_repaired: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to syslog (log_repaired)"]
[log_repaired: values = "This should be filename of a file to which log_string will be saved, if undefined it goes to syslog (log_repaired)"]
[log_kept: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to syslog (log_kept)"]
[log_level: body_constraints = "The reporting level sent to syslog (log_level)"]
[log_level: values = "The reporting level sent to syslog (log_level)"]
[log_string: body_constraints = "A message to be written to the log when a promise verification leads to a repair (log_string)"]
[log_string: values = "A message to be written to the log when a promise verification leads to a repair (log_string)"]
[expireafter: body_constraints = "Number of minutes before a repair action is interrupted and retried (expireafter)"]
[expireafter: values = "Number of minutes before a repair action is interrupted and retried (expireafter)"]
[ifelapsed: body_constraints = "Number of minutes before next allowed assessment of promise (ifelapsed)"]
[action_policy: body_constraints = "Whether to repair or report about non-kept promises (action_policy)"]
[action: body_constraints = "Output behaviour (action)"]
[_: promise_types = "*"]
[report_to_file: body_constraints = "The path and filename to which output should be appended (report_to_file)"]
[friend_pattern: body_constraints = "Regular expression to keep selected hosts from the friends report list (friend_pattern)"]
[file_to_print: body_constraints = "Path name to the file that is to be sent to standard output (file_to_print)"]
[file_to_print: values = "Path name to the file that is to be sent to standard output (file_to_print)"]
[number_of_lines: body_constraints = "Integer maximum number of lines to print from selected file (number_of_lines)"]
[printfile: body_constraints = "Quote part of a file to standard output (printfile)"]
[showstate: body_constraints = "List of services about which status reports should be reported to standard output (showstate)"]
[intermittency: body_constraints = "Real number threshold [0,1] of intermittency about current peers, report above (intermittency)"]
[lastseen: body_constraints = "Integer time threshold in hours since current peers were last seen, report absence (lastseen)"]
[reports: promise_types = "reports"]
[not: body_constraints = "Evaluate the negation of string expression in normal form (not)"]
[expression: body_constraints = "Evaluate string expression of classes in normal form (expression)"]
[dist: body_constraints = "Generate a probabilistic class distribution (strategy in cfengine 2) (dist)"]
[xor: body_constraints = "Combine class sources with XOR (xor)"]
[and: body_constraints = "Combine class sources with AND (and)"]
[or: body_constraints = "Combine class sources with inclusive OR (or)"]
[classes: promise_types = "classes"]
[policy: body_constraints = "The policy for (dis)allowing redefinition of variables (policy)"]
[rlist: body_constraints = "A list of real numbers (rlist)"]
[ilist: body_constraints = "A list of integers (ilist)"]
[slist: body_constraints = "A list of scalar strings (slist)"]
[real: body_constraints = "A scalar real number (real)"]
[int: body_constraints = "A scalar integer (int)"]
[string: body_constraints = "A scalar string (string)"]
[vars: promise_types = "vars"]
[sys: bundles = "cfengine's internal bundle of system specific values (sys)"]
[An_arbitrary_string: values = "Should match the generic pattern , i.e. unspecified characters (An arbitrary string)"]

[are_used_in_constraint_parameters = "are used in constraint parameters" 
          = "takes value" / body_constraints]


[is_a_special_case_of = "is a special case of" 
          = "is the generic type for" / data_types]

[a_syslog_level: values = "Should match the generic pattern LOG_USER,LOG_DAEMON,LOG_LOCAL0,LOG_LOCAL1,LOG_LOCAL2,LOG_LOCAL3,LOG_LOCAL4,LOG_LOCAL5,LOG_LOCAL6,LOG_LOCAL7, i.e. a syslog constant (a syslog level)"]
[a_file_path: values = "Should match the generic pattern [cC]:\.*|/.*, i.e. a system file path suitable for the target system (a file path)"]
[a_user_group_id: values = "Should match the generic pattern [a-zA-Z0-9_$.-]+, i.e. an alphanumeric string with option underscores and hyphens (a user/group id)"]
[a_cfengine_identifier: values = "Should match the generic pattern [a-zA-Z0-9_$.]+, i.e. an alphanumeric string with option underscores (a cfengine identifier)"]
[a_cfengine_class_expression: values = "Should match the generic pattern [a-zA-Z0-9_!&|.()]+, i.e. an alphanumeric string with option underscores and logical operators (a cfengine class expression)"]
[posix_file_mode_or_permission: values = "Should match the generic pattern [0-7augorwxst,+-]+, i.e. something that you would give as an argument to chmod (posix file mode or permission)"]
[a_single_character: values = "Should match the generic pattern ^.$, i.e. one symbol (a single character)"]
[real_number: values = "Should match the generic pattern -9.99999E100,9.99999E100, i.e. a number between the minus and positive maximum values (real number)"]
[integer: values = "Should match the generic pattern -99999999999,9999999999, i.e. a number between the minus and positive maximum values (integer)"]
[a_positive_integer: values = "Should match the generic pattern 0,99999999999, i.e. a number between zero and the maximum value (a positive integer)"]
[a_time_range: values = "Should match the generic pattern 0,2147483648, i.e. a value from zero to a maximum system time -- but you should use time functions to convert this (a time range)"]
[link_type: values = "Should match the generic pattern symlink,hardlink,relative,absolute,none, i.e. a support link type (link type)"]
[boolean: values = "Should match the generic pattern true,false,yes,no,on,off, i.e. a positive or a negative (boolean)"]
[system_signals: values = "Should match the generic pattern hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv, i.e. a unix signal name (system signals)"]
[values: system_policy = "Formal rvalues in constraint assignments and their legal ranges (values)"]
[functions: system_policy = "In-built functions that may be used to set variables or classes (functions)"]
[comments: system_policy = "comments"]

[see_instances_of = "see instances of" 
          = "is one of a number of" / values]

[body_constraints: system_policy = "The attributes that cfengine enables you to promise about the promiser (body constraints)"]
[promise_types: system_policy = "The types of promise that cfengine can keep (promise types)"]
[promises: system_policy = "Complete occurrences of promiser + promisee + promise-body (promises)"]
[promisers: system_policy = "The objects affected by a promise (promisers)"]
[promisees: system_policy = "Recipients of a promise, i.e. promise handles, or persons (promisees)"]
[contexts: system_policy = "Class expressions that say where or when a promise applies (contexts)"]
[bodies: system_policy = "A modular collection of body constraints for re-use (bodies)"]
[bundles: system_policy = "A modular collection of promises of different types (bundles)"]
[variables_report: system_reports = "variables report"]
[software_patches_report: system_reports = "software patches report"]

[is_generated_with = "is generated with" 
          = "reported in" / promise_types]

[setuid_report: system_reports = "setuid report"]
[performance_report: system_reports = "performance report"]

[is_based_on = "is based on" 
          = "reported in" / system_policy]

[monitor_summary_report: system_reports = "monitor summary report"]
[monitor_history_report: system_reports = "monitor history report"]
[monitor_now_report: system_reports = "monitor now report"]
[lastseen_report: system_reports = "lastseen report"]

[is_affected_by = "is affected by" 
          = "reported in" / promise_types]

[installed_software_report: system_reports = "installed software report"]
[hashes_report: system_reports = "hashes report"]
[file_changes_report: system_reports = "file_changes report"]
[compliance_report: system_reports = "compliance report"]
[classes_report: system_reports = "classes report"]
[active_locks_report: system_reports = "active_locks report"]
[all_locks_report: system_reports = "all_locks report"]
[audit_report: system_reports = "audit report"]
[is_a_promise_made_by: references = "is a promise made by"]
[makes_promises: references = "makes promises"]
[promises_have_been_made_by: references = "promises have been made by"]
[makes_promise_of_type: references = "makes promise of type"]
[bundle_contains_promiser: references = "bundle contains promiser"]
[occurs_in_bundle: references = "occurs in bundle"]
[is_a_promise_of_type: references = "is a promise of type"]
[has_current_exemplars: references = "has current exemplars"]
[used_in_promise: references = "used in promise"]
[bundle_reference: references = "bundle reference"]
[linear_topic_map_notation: topic_maps = "linear topic map notation"]
[the_tao: topic_maps = "topics, associations and occurrences (the tao)"]
[lvalue: body_constraint = "lvalue"]
[rvalue: body_constraint = "rvalue"]
[voluntary_cooperation: promise_theory = "voluntary cooperation"]
[roles: promise_theory = "roles"]

[are_identified_in = "are identified in" 
          = "play different" / promise_theory]


[are_recurring_patterns_of = "are recurring patterns of" 
          = "define" / system_policy]

[versions: promise_theory = "versions"]

[label_variations_in = "label variations in" 
          = "vary according to" / promise_types]

[dependencies: promise_theory = "dependencies"]

[result_in = "result in" 
          = "require the use of" / promise_theory]

[workflows: promise_theory = "workflows"]

[are_formed_by_associating = "are formed by associating" 
          = "combine into" / promise_theory]

[stories: promise_theory = "stories"]

[can_talk_about = "can talk about" 
          = "can be the subject of" / promise_theory]

[services: promise_theory = "services"]
[communicated_information: promise_theory = "communicated information"]
[subjects: promise_theory = "Any thing that can be discussed (subjects)"]

[are_represented_as = "are represented as" 
          = "are knowledge-map instances of" / promise_types]

[occurrences: promise_theory = "occurrences"]

[are_classified_into_disjoint = "are classified into disjoint" 
 = "are disjoint classes of" / unknown_association_counterpart]
[occurrence_types: promise_theory = "occurrence-types"]

[are_also_called = "are also called" 
 = "might be called" / unknown_association_counterpart]
[topic_instances: promise_theory = "topic-instances"]

[are_simply_called = "are simply called" 
          = "might be called" / promise_types]


[are_realizations_of = "are realizations of" 
          = "are discussed in" / promise_types]

[type_instances: promise_theory = "type-instances"]

[is_another_term_for = "is another term for" 
          = "may be described as" / promise_types]

[associations: promise_theory = "associations"]

[form_networks_of = "form networks of" 
          = "are inter-related through" / promise_types]


[represent = "represent" 
          = "can be represented as" / promise_theory]

[structural_relationships: promise_theory = "structural relationships"]
[location_relationships: promise_theory = "location relationships"]
[causative_relationships: promise_theory = "causative relationships"]
[conceptual_relationships: promise_theory = "conceptual relationships"]
[actions: promise_theory = "actions"]

[can_be_the_subject_of = "can be the subject of" 
          = "can talk about" / promise_theory]

[behaviours: promise_theory = "behaviours"]
[facts: promise_theory = "facts"]
[topics: promise_theory = "topics"]

[can_be_classified_into_disjoint = "can be classified into disjoint" 
 = "are disjoint classes of" / unknown_association_counterpart]

[can_be_combined_into = "can be combined into" 
          = "can be broken down into" / promise_theory]

[topic_types: promise_theory = "topic-types"]
[body_constraint: promise_theory = "body-constraint"]

[describes_the_extent__or_quantity__of_a = "describes the extent (or quantity) of a" 
 = "is quantified by its" / unknown_association_counterpart]
[body_type: promise_theory = "body-type"]

[describes_the_subject__nature_or_quality__of_a = "describes the subject (nature or quality) of a" 
          = "is qualified by its" / promise_theory]

[promise_body: promise_theory = "promise body"]

[has_attribute = "has attribute" 
          = "is an attribute of" / promise_theory]

[promise_type: promise_theory = "promise-type"]

[has_instances = "has instances" 
 = "is an instance of" / unknown_association_counterpart]

[describes_the_nature__or_quality__of_a = "describes the nature (or quality) of a" 
 = "is qualified by its" / unknown_association_counterpart]
[promisee: promise_theory = "promisee"]

[is_the_recipient_of = "is the recipient of" 
 = "is made to a" / unknown_association_counterpart]
[promiser: promise_theory = "promiser"]

[makes_a = "makes a" 
 = "is made by a" / unknown_association_counterpart]
[announcements: promise_theory = "announcements"]

[are_a_form_of = "are a form of" 
          = "includes" / promise_theory]

[conditional_promises: promise_theory = "conditional promises"]

[are_completed_by = "are completed by" 
 = "complete" / unknown_association_counterpart]
[promises: promise_theory = "promises"]

[can_be_made_about = "can be made about" 
          = "can be the subject of" / promise_types]


[reveal = "reveal" 
          = "are revealed in the form of" / promise_theory]

[promise_proposals: promise_theory = "promise proposals"]

[are_a_basis_for = "are a basis for" 
          = "may be based on" / system_policy]

[bundles: promise_theory = "bundles"]

[are_collections_of = "are collections of" 
          = "combine to form" / system_policy]

[intentions: promise_theory = "intentions"]
[agents: promise_theory = "agents"]
[convergence: convergent_operators = "convergence"]
[idempotence: convergent_operators = "idempotence"]
[overlapping_sets: models_of_organization = "overlapping sets"]
[cascading: models_of_organization = "cascading"]

[__tm_same_f__ = "$(tm.same[f])" 
          = "$(tm.same[f])" / models_of_organization]

[object_paradigm: models_of_organization = "object paradigm"]
[aspect_paradigm: models_of_organization = "aspect paradigm"]
[service_orientation: models_of_organization = "service orientation"]
[hierarchical_structure: models_of_organization = "hierarchical structure"]
[peer_to_peer_network: models_of_organization = "peer to peer network"]
[heterogeneous_system: models_of_organization = "heterogeneous system"]
[homogeneous_system: models_of_organization = "homogeneous system"]
[topic_maps: models_of_knowledge = "topic maps"]
[self_healing: models_of_system_administration = "self-healing"]

[__tm_impr_f__ = "$(tm.impr[f])" 
 = "$(tm.impr[b])" / unknown_association_counterpart]
[autonomics: models_of_system_administration = "autonomics"]
[computer_immunology: models_of_system_administration = "computer immunology"]
[convergent_operators: models_of_system_administration = "convergent operators"]
[promise_theory: models_of_system_administration = "promise theory"]

[is_implemented_in = "is implemented in" 
          = "is the reference implementation of" / bundles]

[models_of_organization: Research = "models of organization"]
[models_of_knowledge: Research = "models of knowledge"]
[models_of_system_administration: Research = "models of system administration"]
[ontology: cfengine_knowledge_base = "ontology"]
[copernicus: cfengine_knowledge_base = "Cfengine's online support knowledge base (copernicus)"]
[system_reports: cfengine_knowledge_base = "Reports from around the system (system reports)"]
[system_policy: cfengine_knowledge_base = "Local policy description with comments and dependencies (system policy)"]
[cfengine_knowledge_base = "Cfengine knowledge console (cfengine knowledge base)"]

/*********************/
/* Association types */
/*********************/

is_a_promise_of_type( promise_knowledge_cf_41 : promises, commands : promise_types)
is_activated_by_class_context( promise_knowledge_cf_41 : promises, web_server : contexts)
makes_promises( _usr_local_sbin_cf_know__f__srv_www_htdocs_cfknowledgebase_enterprise_cf__g : promisers, promise_knowledge_cf_41 : promises)
makes_promise_of_type( _usr_local_sbin_cf_know__f__srv_www_htdocs_cfknowledgebase_enterprise_cf__g : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_local_sbin_cf_know__f__srv_www_htdocs_cfknowledgebase_enterprise_cf__g : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_34 : promises, commands : promise_types)
is_activated_by_class_context( promise_knowledge_cf_34 : promises, any : contexts)
makes_promises( _usr_local_sbin_cf_promises__r : promisers, promise_knowledge_cf_34 : promises)
makes_promise_of_type( _usr_local_sbin_cf_promises__r : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_local_sbin_cf_promises__r : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_24 : promises, files : promise_types)
is_activated_by_class_context( promise_knowledge_cf_24 : promises, any : contexts)
makes_promises( _srv_www_htdocs_cfknowledgebase : promisers, promise_knowledge_cf_24 : promises)
makes_promise_of_type( _srv_www_htdocs_cfknowledgebase : promisers, promise_types__files : promise_types)
occurs_in_bundle( _srv_www_htdocs_cfknowledgebase : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_12 : promises, vars : promise_types)
is_activated_by_class_context( promise_knowledge_cf_12 : promises, any : contexts)
makes_promises( doc_root : promisers, promise_knowledge_cf_12 : promises)
makes_promise_of_type( doc_root : promisers, promise_types__vars : promise_types)
occurs_in_bundle( doc_root : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_webserver_cf_135 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_webserver_cf_135 : promises, any : contexts)
is_a_promise_of_type( promise_webserver_cf_128 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_webserver_cf_128 : promises, any : contexts)
makes_promises( APACHE_MODULES___ : promisers, promise_webserver_cf_135 : promises)
makes_promises( APACHE_MODULES___ : promisers, promise_webserver_cf_128 : promises)
makes_promise_of_type( APACHE_MODULES___ : promisers, promise_types__field_edits : promise_types)
occurs_in_bundle( APACHE_MODULES___ : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_115 : promises, insert_lines : promise_types)
is_activated_by_class_context( promise_webserver_cf_115 : promises, any : contexts)
makes_promises( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, promise_webserver_cf_115 : promises)
makes_promise_of_type( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, promise_types__insert_lines : promise_types)
occurs_in_bundle( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_106 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_106 : promises, any : contexts)
makes_promises( del_modules : promisers, promise_webserver_cf_106 : promises)
makes_promise_of_type( del_modules : promisers, promise_types__vars : promise_types)
occurs_in_bundle( del_modules : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_102 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_102 : promises, any : contexts)
makes_promises( add_modules : promisers, promise_webserver_cf_102 : promises)
makes_promise_of_type( add_modules : promisers, promise_types__vars : promise_types)
occurs_in_bundle( add_modules : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_83 : promises, reports : promise_types)
is_activated_by_class_context( promise_webserver_cf_83 : promises, _software_ok_on : contexts)
makes_promises( The_web_server_software_could_not_be_installed : promisers, promise_webserver_cf_83 : promises)
makes_promise_of_type( The_web_server_software_could_not_be_installed : promisers, promise_types__reports : promise_types)
occurs_in_bundle( The_web_server_software_could_not_be_installed : promisers, bundles__web_server : bundles)
has_direct_influence_on( promise_webserver_cf_74 : promises, web_ok : any)
is_a_promise_of_type( promise_webserver_cf_74 : promises, files : promise_types)
is_activated_by_class_context( promise_webserver_cf_74 : promises, software_ok : contexts)
has_direct_influence_on( _etc_sysconfig_apache2 : promisers, web_ok : any)
makes_promises( _etc_sysconfig_apache2 : promisers, promise_webserver_cf_74 : promises)
makes_promise_of_type( _etc_sysconfig_apache2 : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_sysconfig_apache2 : promisers, bundles__web_server : bundles)
is_activated_by_class_context( software_ok : contexts, web_ok : any)
has_direct_influence_on( php5 : promisers, software_ok : contexts)
makes_promises( php5 : promisers, promise_webserver_cf_62 : promises)
makes_promise_of_type( php5 : promisers, promise_types__packages : promise_types)
occurs_in_bundle( php5 : promisers, bundles__web_server : bundles)
has_direct_influence_on( apache2_prefork : promisers, software_ok : contexts)
makes_promises( apache2_prefork : promisers, promise_webserver_cf_62 : promises)
makes_promise_of_type( apache2_prefork : promisers, promise_types__packages : promise_types)
occurs_in_bundle( apache2_prefork : promisers, bundles__web_server : bundles)
has_direct_influence_on( apache2_mod_php5 : promisers, software_ok : contexts)
makes_promises( apache2_mod_php5 : promisers, promise_webserver_cf_62 : promises)
makes_promise_of_type( apache2_mod_php5 : promisers, promise_types__packages : promise_types)
occurs_in_bundle( apache2_mod_php5 : promisers, bundles__web_server : bundles)
has_direct_influence_on( promise_webserver_cf_62 : promises, software_ok : contexts)
is_a_promise_of_type( promise_webserver_cf_62 : promises, packages : promise_types)
is_activated_by_class_context( promise_webserver_cf_62 : promises, any : contexts)
is_a_promise_of_type( promise_webserver_cf_53 : promises, commands : promise_types)
is_activated_by_class_context( promise_webserver_cf_53 : promises, start_apache : contexts)
makes_promises( _etc_init_d_apache2_restart : promisers, promise_webserver_cf_53 : promises)
makes_promise_of_type( _etc_init_d_apache2_restart : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _etc_init_d_apache2_restart : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_44 : promises, processes : promise_types)
is_activated_by_class_context( promise_webserver_cf_44 : promises, off : contexts)
is_a_promise_of_type( promise_webserver_cf_38 : promises, processes : promise_types)
is_activated_by_class_context( promise_webserver_cf_38 : promises, web_ok_on : contexts)
has_direct_influence_on( apache2 : promisers, software_ok : contexts)
makes_promises( apache2 : promisers, promise_webserver_cf_62 : promises)
makes_promises( apache2 : promisers, promise_webserver_cf_44 : promises)
makes_promises( apache2 : promisers, promise_webserver_cf_38 : promises)
makes_promise_of_type( apache2 : promisers, promise_types__packages : promise_types)
makes_promise_of_type( apache2 : promisers, promise_types__processes : promise_types)
occurs_in_bundle( apache2 : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_23 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_23 : promises, any : contexts)
makes_promises( match_package : promisers, promise_webserver_cf_23 : promises)
makes_promise_of_type( match_package : promisers, promise_types__vars : promise_types)
occurs_in_bundle( match_package : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_17 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_17 : promises, any : contexts)
makes_promises( site_http_conf : promisers, promise_webserver_cf_17 : promises)
makes_promise_of_type( site_http_conf : promisers, promise_types__vars : promise_types)
occurs_in_bundle( site_http_conf : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_11 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_11 : promises, any : contexts)
makes_promises( document_root : promisers, promise_webserver_cf_11 : promises)
makes_promise_of_type( document_root : promisers, promise_types__vars : promise_types)
occurs_in_bundle( document_root : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_laptop_cf_31 : promises, files : promise_types)
is_activated_by_class_context( promise_laptop_cf_31 : promises, _usb_backup_device_loaded : contexts)
makes_promises( _home_backup : promisers, promise_laptop_cf_31 : promises)
makes_promise_of_type( _home_backup : promisers, promise_types__files : promise_types)
occurs_in_bundle( _home_backup : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_laptop_cf_22 : promises, files : promise_types)
is_activated_by_class_context( promise_laptop_cf_22 : promises, usb_backup_device_loaded : contexts)
makes_promises( _media_disk_1_CfengineBackupDevice : promisers, promise_laptop_cf_22 : promises)
makes_promise_of_type( _media_disk_1_CfengineBackupDevice : promisers, promise_types__files : promise_types)
occurs_in_bundle( _media_disk_1_CfengineBackupDevice : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_laptop_cf_6 : promises, vars : promise_types)
is_activated_by_class_context( promise_laptop_cf_6 : promises, any : contexts)
makes_promises( mount_point : promisers, promise_laptop_cf_6 : promises)
makes_promise_of_type( mount_point : promisers, promise_types__vars : promise_types)
occurs_in_bundle( mount_point : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_library_cf_200 : promises, reports : promise_types)
is_activated_by_class_context( promise_library_cf_200 : promises, exec_fix : contexts)
makes_promises( Added_a_5_minute_schedule_to_crontabs : promisers, promise_library_cf_200 : promises)
makes_promise_of_type( Added_a_5_minute_schedule_to_crontabs : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Added_a_5_minute_schedule_to_crontabs : promisers, bundles__upgrade_cfexecd : bundles)
is_a_promise_of_type( promise_library_cf_194 : promises, replace_patterns : promise_types)
is_activated_by_class_context( promise_library_cf_194 : promises, any : contexts)
makes_promises( cfexecd : promisers, promise_library_cf_194 : promises)
makes_promise_of_type( cfexecd : promisers, promise_types__replace_patterns : promise_types)
occurs_in_bundle( cfexecd : promisers, bundles__upgrade_cfexecd : bundles)
is_a_promise_of_type( promise_library_cf_190 : promises, insert_lines : promise_types)
is_activated_by_class_context( promise_library_cf_190 : promises, exec_fix : contexts)
makes_promises( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, promise_library_cf_190 : promises)
makes_promise_of_type( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, promise_types__insert_lines : promise_types)
occurs_in_bundle( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, bundles__upgrade_cfexecd : bundles)
is_a_promise_of_type( promise_library_cf_165 : promises, delete_lines : promise_types)
is_activated_by_class_context( promise_library_cf_165 : promises, any : contexts)
makes_promises( __regex_ : promisers, promise_library_cf_165 : promises)
makes_promise_of_type( __regex_ : promisers, promise_types__delete_lines : promise_types)
occurs_in_bundle( __regex_ : promisers, bundles__DeleteLinesMatching : bundles)
is_a_promise_of_type( promise_library_cf_113 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_library_cf_113 : promises, any : contexts)
makes_promises( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, promise_library_cf_113 : promises)
makes_promise_of_type( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, promise_types__field_edits : promise_types)
occurs_in_bundle( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, bundles__resolver : bundles)
is_a_promise_of_type( promise_library_cf_105 : promises, vars : promise_types)
is_activated_by_class_context( promise_library_cf_105 : promises, any : contexts)
makes_promises( search : promisers, promise_library_cf_105 : promises)
makes_promise_of_type( search : promisers, promise_types__vars : promise_types)
occurs_in_bundle( search : promisers, bundles__resolver : bundles)
is_a_promise_of_type( promise_site_cf_366 : promises, roles : promise_types)
is_activated_by_class_context( promise_site_cf_366 : promises, any : contexts)
makes_promises( __ : promisers, promise_site_cf_366 : promises)
makes_promise_of_type( __ : promisers, promise_types__roles : promise_types)
occurs_in_bundle( __ : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_362 : promises, access : promise_types)
is_activated_by_class_context( promise_site_cf_362 : promises, any : contexts)
makes_promises( _home_mark__cfagent_bin_cf_agent : promisers, promise_site_cf_362 : promises)
makes_promise_of_type( _home_mark__cfagent_bin_cf_agent : promisers, promise_types__access : promise_types)
occurs_in_bundle( _home_mark__cfagent_bin_cf_agent : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_358 : promises, access : promise_types)
is_activated_by_class_context( promise_site_cf_358 : promises, any : contexts)
makes_promises( _home_mark_LapTop : promisers, promise_site_cf_358 : promises)
makes_promise_of_type( _home_mark_LapTop : promisers, promise_types__access : promise_types)
occurs_in_bundle( _home_mark_LapTop : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_345 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_345 : promises, anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high : contexts)
makes_promises( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, promise_site_cf_345 : promises)
makes_promise_of_type( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_338 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_338 : promises, entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2 : contexts)
makes_promises( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, promise_site_cf_338 : promises)
makes_promise_of_type( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_331 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_331 : promises, entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly : contexts)
makes_promises( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, promise_site_cf_331 : promises)
makes_promise_of_type( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_324 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_324 : promises, entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2 : contexts)
makes_promises( Anomalous_number_of_new_TCP_connections_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, promise_site_cf_324 : promises)
makes_promise_of_type( Anomalous_number_of_new_TCP_connections_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous_number_of_new_TCP_connections_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_317 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_317 : promises, entropy_www_in_low_anomaly_hosts_www_in_high_anomaly : contexts)
makes_promises( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, promise_site_cf_317 : promises)
makes_promise_of_type( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_310 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_310 : promises, entropy_www_in_high_anomaly_hosts_www_in_high_anomaly : contexts)
makes_promises( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, promise_site_cf_310 : promises)
makes_promise_of_type( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_303 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_303 : promises, rootprocs_high_dev2 : contexts)
makes_promises( RootProc_anomaly_high_2_dev_on___mon_host__at_Tue_Jun_30_12_46_08_2009______measured_value_100_av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, promise_site_cf_303 : promises)
makes_promise_of_type( RootProc_anomaly_high_2_dev_on___mon_host__at_Tue_Jun_30_12_46_08_2009______measured_value_100_av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( RootProc_anomaly_high_2_dev_on___mon_host__at_Tue_Jun_30_12_46_08_2009______measured_value_100_av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, bundles__anomalies : bundles)
makes_promises( _tmp_shadow : promisers, promise_site_cf_293 : promises)
makes_promise_of_type( _tmp_shadow : promisers, promise_types__files : promise_types)
occurs_in_bundle( _tmp_shadow : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_293 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_293 : promises, any : contexts)
makes_promises( _tmp_passwd : promisers, promise_site_cf_293 : promises)
makes_promise_of_type( _tmp_passwd : promisers, promise_types__files : promise_types)
occurs_in_bundle( _tmp_passwd : promisers, bundles__anomalies : bundles)
makes_promises( _var_cfengine_inputs_shadow : promisers, promise_site_cf_287 : promises)
makes_promise_of_type( _var_cfengine_inputs_shadow : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs_shadow : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_287 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_287 : promises, any : contexts)
is_employed_in_bundle( files : promise_types, setup_knowledge : bundles)
is_employed_in_bundle( files : promise_types, web_server : bundles)
is_employed_in_bundle( files : promise_types, laptop : bundles)
is_employed_in_bundle( files : promise_types, anomalies : bundles)
makes_promises( _var_cfengine_inputs_passwd : promisers, promise_site_cf_287 : promises)
makes_promise_of_type( _var_cfengine_inputs_passwd : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs_passwd : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_275 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_275 : promises, any : contexts)
makes_promises( files : promisers, promise_site_cf_275 : promises)
makes_promise_of_type( files : promisers, promise_types__vars : promise_types)
occurs_in_bundle( files : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_274 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_274 : promises, any : contexts)
makes_promises( sysdir : promisers, promise_site_cf_274 : promises)
makes_promise_of_type( sysdir : promisers, promise_types__vars : promise_types)
occurs_in_bundle( sysdir : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( free_disk_watch : promises, measurements : promise_types)
is_activated_by_class_context( free_disk_watch : promises, linux : contexts)
makes_promises( _bin_df : promisers, free_disk_watch : promises)
makes_promise_of_type( _bin_df : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _bin_df : promisers, bundles__watch : bundles)
is_a_promise_of_type( free_memory_watch : promises, measurements : promise_types)
is_activated_by_class_context( free_memory_watch : promises, linux : contexts)
makes_promises( _proc_meminfo : promisers, free_memory_watch : promises)
makes_promise_of_type( _proc_meminfo : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _proc_meminfo : promisers, bundles__watch : bundles)
is_a_promise_of_type( monitor_self_watch : promises, measurements : promise_types)
is_activated_by_class_context( monitor_self_watch : promises, atlas : contexts)
makes_promises( _var_cfengine_state_cf_rootprocs : promisers, monitor_self_watch : promises)
makes_promise_of_type( _var_cfengine_state_cf_rootprocs : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _var_cfengine_state_cf_rootprocs : promisers, bundles__watch : bundles)
is_a_promise_of_type( promise_site_cf_180 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_180 : promises, any : contexts)
makes_promises( _etc_resolv_conf____ : promisers, promise_site_cf_180 : promises)
makes_promise_of_type( _etc_resolv_conf____ : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_resolv_conf____ : promisers, bundles__garbage_collection : bundles)
is_a_promise_of_type( promise_site_cf_174 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_174 : promises, any : contexts)
makes_promises( _var_cfengine_outputs : promisers, promise_site_cf_174 : promises)
makes_promise_of_type( _var_cfengine_outputs : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_outputs : promisers, bundles__garbage_collection : bundles)
is_a_promise_of_type( promise_site_cf_157 : promises, packages : promise_types)
is_activated_by_class_context( promise_site_cf_157 : promises, any : contexts)
makes_promises( no_match : promisers, promise_site_cf_157 : promises)
makes_promise_of_type( no_match : promisers, promise_types__packages : promise_types)
occurs_in_bundle( no_match : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_148 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_148 : promises, Hr12 : contexts)
makes_promises( _usr_bin_updatedb___prunepaths__windows : promisers, promise_site_cf_148 : promises)
makes_promise_of_type( _usr_bin_updatedb___prunepaths__windows : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_bin_updatedb___prunepaths__windows : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_141 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_141 : promises, any : contexts)
makes_promises( _usr_bin_zypper__non_interactive_patch : promisers, promise_site_cf_141 : promises)
makes_promise_of_type( _usr_bin_zypper__non_interactive_patch : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_bin_zypper__non_interactive_patch : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_139 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_139 : promises, any : contexts)
is_a_promise_of_type( promise_site_cf_131 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_131 : promises, any : contexts)
is_a_promise_of_type( promise_site_cf_120 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_120 : promises, any : contexts)
makes_promises( cfenvd : promisers, promise_site_cf_120 : promises)
makes_promise_of_type( cfenvd : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cfenvd : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_106 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_106 : promises, any : contexts)
makes_promises( _etc_resolv_conf : promisers, promise_site_cf_106 : promises)
makes_promise_of_type( _etc_resolv_conf : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_resolv_conf : promisers, bundles__main : bundles)
has_direct_influence_on( promise_site_cf_98 : promises, up_and_running : any)
is_a_promise_of_type( promise_site_cf_98 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_98 : promises, _up_and_running : contexts)
has_direct_influence_on( Laptop_wakes_up : promisers, up_and_running : any)
makes_promises( Laptop_wakes_up : promisers, promise_site_cf_98 : promises)
makes_promise_of_type( Laptop_wakes_up : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Laptop_wakes_up : promisers, bundles__main : bundles)
is_activated_by_class_context( _up_and_running : contexts, up_and_running : any)
is_a_promise_of_type( promise_site_cf_90 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_90 : promises, any : contexts)
makes_promises( component : promisers, promise_site_cf_90 : promises)
makes_promise_of_type( component : promisers, promise_types__vars : promise_types)
occurs_in_bundle( component : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_77 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_77 : promises, exec_fix : contexts)
makes_promises( cron : promisers, promise_site_cf_77 : promises)
makes_promise_of_type( cron : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cron : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_70 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_70 : promises, any : contexts)
makes_promises( _dev_sr0 : promisers, promise_site_cf_70 : promises)
makes_promise_of_type( _dev_sr0 : promisers, promise_types__files : promise_types)
occurs_in_bundle( _dev_sr0 : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_66 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_66 : promises, any : contexts)
makes_promises( _var_spool_cron_tabs_root : promisers, promise_site_cf_66 : promises)
makes_promise_of_type( _var_spool_cron_tabs_root : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_spool_cron_tabs_root : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_58 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_58 : promises, any : contexts)
makes_promises( _var_cfengine_inputs___ : promisers, promise_site_cf_58 : promises)
makes_promise_of_type( _var_cfengine_inputs___ : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs___ : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_48 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_48 : promises, integrate_cfengine2 : contexts)
makes_promises( _var_cfengine_bin_cfagent : promisers, promise_site_cf_48 : promises)
makes_promise_of_type( _var_cfengine_bin_cfagent : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cfagent : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_40 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_40 : promises, any : contexts)
makes_promises( cf2bits : promisers, promise_site_cf_40 : promises)
makes_promise_of_type( cf2bits : promisers, promise_types__vars : promise_types)
occurs_in_bundle( cf2bits : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_17 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_17 : promises, _SuSE : contexts)
is_a_promise_of_type( promise_site_cf_13 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_13 : promises, SuSE : contexts)
makes_promises( crontab : promisers, promise_site_cf_17 : promises)
makes_promises( crontab : promisers, promise_site_cf_13 : promises)
makes_promise_of_type( crontab : promisers, promise_types__vars : promise_types)
occurs_in_bundle( crontab : promisers, bundles__g : bundles)
is_a_promise_of_type( promise_update_cf_45 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_45 : promises, reload_start_exec : contexts)
makes_promises( _var_cfengine_bin_cf_execd : promisers, promise_update_cf_45 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_execd : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_execd : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_41 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_41 : promises, reload_start_monitor : contexts)
makes_promises( _var_cfengine_bin_cf_monitord : promisers, promise_site_cf_139 : promises)
makes_promises( _var_cfengine_bin_cf_monitord : promisers, promise_update_cf_41 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_monitord : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_monitord : promisers, bundles__main : bundles)
occurs_in_bundle( _var_cfengine_bin_cf_monitord : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_37 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_37 : promises, reload_start_server : contexts)
makes_promises( _var_cfengine_bin_cf_serverd : promisers, promise_site_cf_139 : promises)
makes_promises( _var_cfengine_bin_cf_serverd : promisers, promise_update_cf_37 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_serverd : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_serverd : promisers, bundles__main : bundles)
occurs_in_bundle( _var_cfengine_bin_cf_serverd : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_31 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_31 : promises, any : contexts)
makes_promises( cf_execd : promisers, promise_update_cf_31 : promises)
makes_promise_of_type( cf_execd : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_execd : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_30 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_30 : promises, any : contexts)
makes_promises( cf_monitord : promisers, promise_site_cf_131 : promises)
makes_promises( cf_monitord : promisers, promise_update_cf_30 : promises)
makes_promise_of_type( cf_monitord : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_monitord : promisers, bundles__main : bundles)
occurs_in_bundle( cf_monitord : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_29 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_29 : promises, any : contexts)
makes_promises( cf_serverd : promisers, promise_site_cf_131 : promises)
makes_promises( cf_serverd : promisers, promise_update_cf_29 : promises)
makes_promise_of_type( cf_serverd : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_serverd : promisers, bundles__main : bundles)
occurs_in_bundle( cf_serverd : promisers, bundles__update : bundles)
has_direct_influence_on( promise_update_cf_21 : promises, reload : any)
is_a_promise_of_type( promise_update_cf_21 : promises, files : promise_types)
is_activated_by_class_context( promise_update_cf_21 : promises, any : contexts)
has_direct_influence_on( _var_cfengine_bin : promisers, reload : any)
makes_promises( _var_cfengine_bin : promisers, promise_update_cf_21 : promises)
makes_promise_of_type( _var_cfengine_bin : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_bin : promisers, bundles__update : bundles)
has_direct_influence_on( promise_update_cf_13 : promises, reload : any)
is_a_promise_of_type( promise_update_cf_13 : promises, files : promise_types)
is_activated_by_class_context( promise_update_cf_13 : promises, any : contexts)
has_direct_influence_on( _var_cfengine_inputs : promisers, reload : any)
makes_promises( _var_cfengine_inputs : promisers, promise_update_cf_13 : promises)
makes_promise_of_type( _var_cfengine_inputs : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_7 : promises, vars : promise_types)
is_activated_by_class_context( promise_update_cf_7 : promises, any : contexts)
makes_promises( master_location : promisers, promise_update_cf_7 : promises)
makes_promise_of_type( master_location : promisers, promise_types__vars : promise_types)
occurs_in_bundle( master_location : promisers, bundles__update : bundles)
returns_data_type( userexists : functions, class : data_types)
returns_data_type( usemodule : functions, class : data_types)
returns_data_type( strcmp : functions, class : data_types)
returns_data_type( splitstring : functions, slist : data_types)
returns_data_type( splayclass : functions, class : data_types)
returns_data_type( selectservers : functions, int : data_types)
returns_data_type( rrange : functions, rrange__real_real_ : any)
returns_data_type( returnszero : functions, class : data_types)
returns_data_type( remotescalar : functions, string : data_types)
returns_data_type( regldap : functions, class : data_types)
returns_data_type( reglist : functions, class : data_types)
returns_data_type( regline : functions, class : data_types)
returns_data_type( registryvalue : functions, string : data_types)
returns_data_type( regcmp : functions, class : data_types)
returns_data_type( regarray : functions, class : data_types)
returns_data_type( readtcp : functions, string : data_types)
returns_data_type( readstringlist : functions, slist : data_types)
returns_data_type( readstringarray : functions, int : data_types)
returns_data_type( readreallist : functions, rlist : data_types)
returns_data_type( readrealarray : functions, int : data_types)
returns_data_type( readintlist : functions, ilist : data_types)
returns_data_type( readintarray : functions, int : data_types)
returns_data_type( readfile : functions, string : data_types)
returns_data_type( randomint : functions, int : data_types)
returns_data_type( peerleaders : functions, slist : data_types)
returns_data_type( peerleader : functions, string : data_types)
returns_data_type( peers : functions, slist : data_types)
returns_data_type( on : functions, int : data_types)
returns_data_type( now : functions, int : data_types)
returns_data_type( ldapvalue : functions, string : data_types)
returns_data_type( ldaplist : functions, slist : data_types)
returns_data_type( ldaparray : functions, class : data_types)
returns_data_type( lastnode : functions, string : data_types)
returns_data_type( isvariable : functions, class : data_types)
returns_data_type( isplain : functions, class : data_types)
returns_data_type( isnewerthan : functions, class : data_types)
returns_data_type( islink : functions, class : data_types)
returns_data_type( islessthan : functions, class : data_types)
returns_data_type( isgreaterthan : functions, class : data_types)
returns_data_type( isdir : functions, class : data_types)
returns_data_type( irange : functions, irange__int_int_ : any)
returns_data_type( iprange : functions, class : data_types)
returns_data_type( hostinnetgroup : functions, class : data_types)
returns_data_type( hostrange : functions, class : data_types)
returns_data_type( hashmatch : functions, class : data_types)
returns_data_type( hash : functions, string : data_types)
returns_data_type( groupexists : functions, class : data_types)
returns_data_type( getuid : functions, int : data_types)
returns_data_type( getgid : functions, int : data_types)
returns_data_type( getindices : functions, slist : data_types)
returns_data_type( filesexist : functions, class : data_types)
returns_data_type( fileexists : functions, class : data_types)
returns_data_type( execresult : functions, string : data_types)
returns_data_type( classmatch : functions, class : data_types)
returns_data_type( classify : functions, class : data_types)
returns_data_type( changedbefore : functions, class : data_types)
returns_data_type( canonify : functions, string : data_types)
returns_data_type( ago : functions, int : data_types)
returns_data_type( accumulated : functions, int : data_types)
returns_data_type( accessedbefore : functions, class : data_types)
is_a_body_constraint_of_type( extraction_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( extraction_regex : values, match_value : body_constraints)
is_a_body_constraint_of_type( select_line_number : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( select_line_number : values, match_value : body_constraints)
is_a_possible_body_constraint_for( match_value : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( units : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( units : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( history_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( history_type : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( data_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( data_type : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( stream_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( stream_type : body_constraints, promise_types__measurements : promise_types)
is_employed_in_bundle( measurements : promise_types, watch : bundles)
is_a_body_constraint_of_type( path_root : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( path_root : body_constraints, promise_types__occurrences : promise_types)
is_a_body_constraint_of_type( web_root : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( web_root : body_constraints, promise_types__occurrences : promise_types)
is_a_body_constraint_of_type( representation : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( representation : body_constraints, promise_types__occurrences : promise_types)
is_a_list_of_type( represents : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( represents : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( represents : body_constraints, promise_types__occurrences : promise_types)
is_a_list_of_type( associates : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( associates : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( associates : values, association : body_constraints)
is_a_body_constraint_of_type( backward_relationship : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( backward_relationship : values, association : body_constraints)
is_a_body_constraint_of_type( forward_relationship : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( forward_relationship : body_constraints, association : body_constraints)
is_a_possible_body_constraint_for( association : body_constraints, promise_types__topics : promise_types)
is_a_list_of_type( authorize : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( authorize : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( authorize : body_constraints, promise_types__roles : promise_types)
is_employed_in_bundle( roles : promise_types, access_rules : bundles)
is_a_body_constraint_of_type( resource_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( resource_type : body_constraints, promise_types__access : promise_types)
is_a_body_constraint_of_type( ifencrypted : body_constraints, boolean : values)
is_a_possible_body_constraint_for( ifencrypted : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( maproot : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( maproot : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( maproot : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( deny : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( deny : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( deny : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( admit : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( admit : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( admit : body_constraints, promise_types__access : promise_types)
is_employed_in_bundle( access : promise_types, access_rules : bundles)
is_a_body_constraint_of_type( scan_arrivals : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( scan_arrivals : values, volume : body_constraints)
is_a_body_constraint_of_type( sensible_count : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( sensible_count : values, volume : body_constraints)
is_a_body_constraint_of_type( sensible_size : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( sensible_size : body_constraints, volume : body_constraints)
is_a_body_constraint_of_type( freespace : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( freespace : values, volume : body_constraints)
is_a_body_constraint_of_type( check_foreign : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( check_foreign : body_constraints, volume : body_constraints)
is_a_possible_body_constraint_for( volume : body_constraints, promise_types__storage : promise_types)
is_a_body_constraint_of_type( unmount : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( unmount : values, mount : body_constraints)
is_a_body_constraint_of_type( edit_fstab : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( edit_fstab : values, mount : body_constraints)
is_a_list_of_type( mount_options : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( mount_options : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( mount_options : values, mount : body_constraints)
is_a_body_constraint_of_type( mount_server : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( mount_server : values, mount : body_constraints)
is_a_body_constraint_of_type( mount_source : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( mount_source : body_constraints, mount : body_constraints)
is_a_body_constraint_of_type( mount_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( mount_type : body_constraints, mount : body_constraints)
is_a_possible_body_constraint_for( mount : body_constraints, promise_types__storage : promise_types)
is_a_body_constraint_of_type( restart_class : body_constraints, a_cfengine_identifier : values)
is_a_possible_body_constraint_for( restart_class : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( process_result : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( process_result : values, process_select : body_constraints)
is_a_body_constraint_of_type( threads : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( threads : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( priority : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( priority : values, process_select : body_constraints)
is_a_body_constraint_of_type( tty : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( tty : values, process_select : body_constraints)
is_a_body_constraint_of_type( command : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( command : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( stime_range : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( stime_range : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( ttime_range : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( ttime_range : values, process_select : body_constraints)
is_a_body_constraint_of_type( status : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( status : values, process_select : body_constraints)
is_a_body_constraint_of_type( vsize : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( vsize : values, process_select : body_constraints)
is_a_body_constraint_of_type( rsize : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( rsize : values, process_select : body_constraints)
is_a_body_constraint_of_type( pgid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( pgid : values, process_select : body_constraints)
is_a_body_constraint_of_type( ppid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( ppid : values, process_select : body_constraints)
is_a_body_constraint_of_type( pid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( pid : values, process_select : body_constraints)
is_a_list_of_type( process_owner : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( process_owner : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( process_owner : body_constraints, process_select : body_constraints)
is_a_possible_body_constraint_for( process_select : body_constraints, promise_types__processes : promise_types)
is_a_list_of_type( out_of_range_define : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( out_of_range_define : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( out_of_range_define : values, process_count : body_constraints)
is_a_list_of_type( in_range_define : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( in_range_define : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( in_range_define : values, process_count : body_constraints)
is_a_body_constraint_of_type( match_range : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( match_range : body_constraints, process_count : body_constraints)
is_a_possible_body_constraint_for( process_count : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( process_stop : body_constraints, a_file_path : values)
is_a_possible_body_constraint_for( process_stop : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( signals : body_constraints, system_signals : values)
is_a_possible_body_constraint_for( signals : body_constraints, promise_types__processes : promise_types)
is_employed_in_bundle( processes : promise_types, web_server : contexts)
is_employed_in_bundle( processes : promise_types, main : contexts)
is_employed_in_bundle( processes : promise_types, cfengine : contexts)
is_employed_in_bundle( processes : promise_types, update : contexts)
is_a_body_constraint_of_type( package_select : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( package_select : body_constraints, promise_types__packages : promise_types)
is_a_list_of_type( package_architectures : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( package_architectures : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( package_architectures : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_version : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( package_version : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_name_convention : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_name_convention : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_noverify_returncode : body_constraints, integer : values)
is_a_possible_sub_body_constraint_for( package_noverify_returncode : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_noverify_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_noverify_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_verify_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_verify_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_patch_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_update_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_update_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_delete_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_delete_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_add_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_add_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_installed_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_installed_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_arch_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_arch_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_name_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_name_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_version_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_version_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_installed_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_installed_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_arch_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_arch_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_name_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_name_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_version_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_version_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_list_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_patch_list_command : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_arch_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_arch_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_name_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_name_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_version_regex : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_version_regex : values, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_command : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( package_list_command : values, package_method : body_constraints)
is_a_list_of_type( package_file_repositories : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( package_file_repositories : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_file_repositories : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_changes : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( package_changes : body_constraints, package_method : body_constraints)
is_a_possible_body_constraint_for( package_method : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_policy : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( package_policy : body_constraints, promise_types__packages : promise_types)
is_employed_in_bundle( packages : promise_types, web_server : contexts)
is_employed_in_bundle( packages : promise_types, main : contexts)
is_a_body_constraint_of_type( usebundle : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( usebundle : body_constraints, promise_types__methods : promise_types)
is_a_body_constraint_of_type( ipv6_address : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( ipv6_address : body_constraints, tcp_ip : body_constraints)
is_a_body_constraint_of_type( ipv4_netmask : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( ipv4_netmask : body_constraints, tcp_ip : body_constraints)
is_a_body_constraint_of_type( ipv4_address : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( ipv4_address : body_constraints, tcp_ip : body_constraints)
is_a_possible_body_constraint_for( tcp_ip : body_constraints, promise_types__interfaces : promise_types)
is_a_list_of_type( delete_if_not_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_contains_from_list : values, delete_select : body_constraints)
is_a_list_of_type( delete_if_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_contains_from_list : values, delete_select : body_constraints)
is_a_list_of_type( delete_if_not_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_match_from_list : values, delete_select : body_constraints)
is_a_list_of_type( delete_if_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_match_from_list : values, delete_select : body_constraints)
is_a_list_of_type( delete_if_not_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_startwith_from_list : values, delete_select : body_constraints)
is_a_list_of_type( delete_if_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_startwith_from_list : body_constraints, delete_select : body_constraints)
is_a_possible_body_constraint_for( delete_select : body_constraints, promise_types__delete_lines : promise_types)
is_a_body_constraint_of_type( not_matching : body_constraints, boolean : values)
is_a_possible_body_constraint_for( not_matching : body_constraints, promise_types__delete_lines : promise_types)
is_employed_in_bundle( delete_lines : promise_types, DeleteLinesMatching : bundles)
is_a_body_constraint_of_type( occurrences : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( occurrences : values, replace_with : body_constraints)
is_a_body_constraint_of_type( replace_value : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( replace_value : body_constraints, replace_with : body_constraints)
is_a_possible_body_constraint_for( replace_with : body_constraints, promise_types__replace_patterns : promise_types)
is_employed_in_bundle( replace_patterns : promise_types, upgrade_cfexecd : bundles)
is_a_body_constraint_of_type( allow_blank_fields : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( allow_blank_fields : values, edit_field : body_constraints)
is_a_body_constraint_of_type( extend_fields : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( extend_fields : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( field_operation : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( field_operation : values, edit_field : body_constraints)
is_a_body_constraint_of_type( field_value : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( field_value : values, edit_field : body_constraints)
is_a_body_constraint_of_type( value_separator : body_constraints, a_single_character : values)
is_a_possible_sub_body_constraint_for( value_separator : values, edit_field : body_constraints)
is_a_body_constraint_of_type( select_field : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( select_field : values, edit_field : body_constraints)
is_a_body_constraint_of_type( field_separator : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( field_separator : body_constraints, edit_field : body_constraints)
is_a_possible_body_constraint_for( edit_field : body_constraints, promise_types__field_edits : promise_types)
is_employed_in_bundle( field_edits : promise_types, fixapache : bundles)
is_employed_in_bundle( field_edits : promise_types, resolver : bundles)
is_a_body_constraint_of_type( expand_scalars : body_constraints, boolean : values)
is_a_possible_body_constraint_for( expand_scalars : body_constraints, promise_types__insert_lines : promise_types)
is_a_list_of_type( insert_if_not_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_contains_from_list : values, insert_select : body_constraints)
is_a_list_of_type( insert_if_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_contains_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_contains_from_list : values, insert_select : body_constraints)
is_a_list_of_type( insert_if_not_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_match_from_list : values, insert_select : body_constraints)
is_a_list_of_type( insert_if_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_match_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_match_from_list : values, insert_select : body_constraints)
is_a_list_of_type( insert_if_not_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_startwith_from_list : values, insert_select : body_constraints)
is_a_list_of_type( insert_if_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_startwith_from_list : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_startwith_from_list : body_constraints, insert_select : body_constraints)
is_a_possible_body_constraint_for( insert_select : body_constraints, promise_types__insert_lines : promise_types)
is_a_body_constraint_of_type( insert_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( insert_type : body_constraints, promise_types__insert_lines : promise_types)
is_a_body_constraint_of_type( first_last : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( first_last : body_constraints, location : body_constraints)
is_a_body_constraint_of_type( before_after : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( before_after : values, location : body_constraints)
is_a_body_constraint_of_type( select_line_matching : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_line_matching : body_constraints, match_value : body_constraints)
is_a_possible_sub_body_constraint_for( select_line_matching : body_constraints, location : body_constraints)
is_a_possible_body_constraint_for( location : body_constraints, promise_types__insert_lines : promise_types)
is_employed_in_bundle( insert_lines : promise_types, fixapache : bundles)
is_employed_in_bundle( insert_lines : promise_types, upgrade_cfexecd : bundles)
is_a_list_of_type( specify_inherit_aces : body_constraints, slist : data_types)
is_a_body_constraint_of_type( specify_inherit_aces : body_constraints, slist : data_types)
is_a_possible_sub_body_constraint_for( specify_inherit_aces : body_constraints, acl : body_constraints)
is_a_list_of_type( aces : body_constraints, slist : data_types)
is_a_body_constraint_of_type( aces : body_constraints, slist : data_types)
is_a_possible_sub_body_constraint_for( aces : body_constraints, acl : body_constraints)
is_a_body_constraint_of_type( acl_directory_inherit : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_directory_inherit : body_constraints, acl : body_constraints)
is_a_body_constraint_of_type( acl_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_type : body_constraints, acl : body_constraints)
is_a_body_constraint_of_type( acl_method : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_method : body_constraints, acl : body_constraints)
is_a_possible_body_constraint_for( acl : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( pathtype : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( pathtype : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( transformer : body_constraints, a_file_path : values)
is_a_possible_body_constraint_for( transformer : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( move_obstructions : body_constraints, boolean : values)
is_a_possible_body_constraint_for( move_obstructions : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( create : body_constraints, boolean : values)
is_a_possible_body_constraint_for( create : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( touch : body_constraints, boolean : values)
is_a_possible_body_constraint_for( touch : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( rmdeadlinks : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rmdeadlinks : values, depth_search : body_constraints)
is_a_body_constraint_of_type( traverse_links : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( traverse_links : values, depth_search : body_constraints)
is_a_body_constraint_of_type( xdev : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( xdev : values, depth_search : body_constraints)
is_a_body_constraint_of_type( depth : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( depth : values, depth_search : body_constraints)
is_a_body_constraint_of_type( include_basedir : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( include_basedir : values, depth_search : body_constraints)
is_a_list_of_type( exclude_dirs : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( exclude_dirs : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exclude_dirs : values, depth_search : body_constraints)
is_a_list_of_type( include_dirs : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( include_dirs : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( include_dirs : body_constraints, depth_search : body_constraints)
is_a_possible_body_constraint_for( depth_search : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( empty_file_before_editing : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( empty_file_before_editing : values, edit_defaults : body_constraints)
is_a_body_constraint_of_type( max_file_size : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( max_file_size : body_constraints, edit_defaults : body_constraints)
is_a_body_constraint_of_type( edit_backup : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( edit_backup : body_constraints, edit_defaults : body_constraints)
is_a_possible_body_constraint_for( edit_defaults : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( edit_xml : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( edit_xml : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( edit_line : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( edit_line : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( repository : body_constraints, a_file_path : values)
is_a_possible_body_constraint_for( repository : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( disable_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( disable_mode : body_constraints, rename : body_constraints)
is_a_body_constraint_of_type( rotate : body_constraints, int : data_types)
is_a_possible_sub_body_constraint_for( rotate : values, rename : body_constraints)
is_a_body_constraint_of_type( disable : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( disable : values, rename : body_constraints)
is_a_body_constraint_of_type( disable_suffix : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( disable_suffix : values, rename : body_constraints)
is_a_body_constraint_of_type( newname : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( newname : body_constraints, rename : body_constraints)
is_a_possible_body_constraint_for( rename : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( rmdirs : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rmdirs : body_constraints, delete : body_constraints)
is_a_body_constraint_of_type( dirlinks : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( dirlinks : body_constraints, delete : body_constraints)
is_a_possible_body_constraint_for( delete : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( update_hashes : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( update_hashes : body_constraints, changes : body_constraints)
is_a_body_constraint_of_type( report_changes : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( report_changes : body_constraints, changes : body_constraints)
is_a_body_constraint_of_type( hash : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( hash : body_constraints, changes : body_constraints)
is_a_possible_body_constraint_for( changes : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( bsdflags : body_constraints, _option_list_ : any)
is_a_possible_sub_body_constraint_for( bsdflags : values, perms : body_constraints)
is_a_body_constraint_of_type( rxdirs : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rxdirs : values, perms : body_constraints)
is_a_list_of_type( groups : body_constraints, a_user_group_id : values)
is_a_body_constraint_of_type( groups : body_constraints, a_user_group_id : values)
is_a_possible_sub_body_constraint_for( groups : values, perms : body_constraints)
is_a_list_of_type( owners : body_constraints, a_user_group_id : values)
is_a_body_constraint_of_type( owners : body_constraints, a_user_group_id : values)
is_a_possible_sub_body_constraint_for( owners : values, perms : body_constraints)
is_a_body_constraint_of_type( mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( mode : body_constraints, perms : body_constraints)
is_a_possible_body_constraint_for( perms : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( when_linking_children : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( when_linking_children : values, link_from : body_constraints)
is_a_body_constraint_of_type( link_children : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( link_children : body_constraints, link_from : body_constraints)
is_a_body_constraint_of_type( when_no_source : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( when_no_source : values, link_from : body_constraints)
is_a_list_of_type( copy_patterns : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( copy_patterns : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( copy_patterns : values, link_from : body_constraints)
is_a_body_constraint_of_type( link_type : body_constraints, link_type : values)
is_a_possible_sub_body_constraint_for( link_type : values, link_from : body_constraints)
is_a_possible_body_constraint_for( link_from : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( findertype : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( findertype : values, copy_from : body_constraints)
is_a_body_constraint_of_type( check_root : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( check_root : values, copy_from : body_constraints)
is_a_body_constraint_of_type( purge : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( purge : values, copy_from : body_constraints)
is_a_body_constraint_of_type( verify : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( verify : values, copy_from : body_constraints)
is_a_body_constraint_of_type( encrypt : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( encrypt : values, copy_from : body_constraints)
is_a_body_constraint_of_type( trustkey : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( trustkey : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( copy_size : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( copy_size : values, copy_from : body_constraints)
is_a_body_constraint_of_type( force_ipv4 : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( force_ipv4 : values, copy_from : body_constraints)
is_a_body_constraint_of_type( force_update : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( force_update : values, copy_from : body_constraints)
is_a_body_constraint_of_type( type_check : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( type_check : values, copy_from : body_constraints)
is_a_body_constraint_of_type( link_type : body_constraints, link_type : values)
is_a_possible_sub_body_constraint_for( link_type : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( compare : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( compare : values, copy_from : body_constraints)
is_a_list_of_type( copylink_patterns : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( copylink_patterns : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( copylink_patterns : values, copy_from : body_constraints)
is_a_list_of_type( linkcopy_patterns : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( linkcopy_patterns : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( linkcopy_patterns : values, copy_from : body_constraints)
is_a_body_constraint_of_type( preserve : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( preserve : values, copy_from : body_constraints)
is_a_body_constraint_of_type( stealth : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( stealth : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( copy_backup : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( copy_backup : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( portnumber : body_constraints, int : data_types)
is_a_possible_sub_body_constraint_for( portnumber : body_constraints, copy_from : body_constraints)
is_a_list_of_type( servers : body_constraints, slist : data_types)
is_a_body_constraint_of_type( servers : body_constraints, slist : data_types)
is_a_possible_sub_body_constraint_for( servers : values, copy_from : body_constraints)
is_a_body_constraint_of_type( source : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( source : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( source : body_constraints, link_from : body_constraints)
is_a_possible_sub_body_constraint_for( source : body_constraints, copy_from : body_constraints)
is_a_possible_body_constraint_for( copy_from : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( file_result : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( file_result : values, file_select : body_constraints)
is_a_list_of_type( issymlinkto : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( issymlinkto : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( issymlinkto : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( file_types : body_constraints, _option_list_ : any)
is_a_possible_sub_body_constraint_for( file_types : values, file_select : body_constraints)
is_a_body_constraint_of_type( exec_program : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( exec_program : values, file_select : body_constraints)
is_a_body_constraint_of_type( exec_regex : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( exec_regex : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( atime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( atime : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( mtime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( mtime : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( ctime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( ctime : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( search_bsdflags : body_constraints, string : data_types)
is_a_possible_sub_body_constraint_for( search_bsdflags : values, file_select : body_constraints)
is_a_list_of_type( search_groups : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( search_groups : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( search_groups : values, file_select : body_constraints)
is_a_list_of_type( search_owners : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( search_owners : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( search_owners : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( search_size : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( search_size : values, file_select : body_constraints)
is_a_list_of_type( search_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_body_constraint_of_type( search_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( search_mode : values, file_select : body_constraints)
is_a_list_of_type( path_name : body_constraints, a_file_path : values)
is_a_body_constraint_of_type( path_name : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( path_name : values, file_select : body_constraints)
is_a_list_of_type( leaf_name : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( leaf_name : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( leaf_name : body_constraints, file_select : body_constraints)
is_a_possible_body_constraint_for( file_select : body_constraints, promise_types__files : promise_types)
is_employed_in_bundle( files : promise_types, garbage_collection : bundles)
is_employed_in_bundle( files : promise_types, main : bundles)
is_employed_in_bundle( files : promise_types, cfengine : bundles)
is_employed_in_bundle( files : promise_types, update : bundles)
is_a_list_of_type( registry_exclude : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( registry_exclude : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( registry_exclude : body_constraints, promise_types__databases : promise_types)
is_a_list_of_type( database_rows : body_constraints, slist : data_types)
is_a_body_constraint_of_type( database_rows : body_constraints, slist : data_types)
is_a_possible_body_constraint_for( database_rows : body_constraints, promise_types__databases : promise_types)
is_a_list_of_type( database_columns : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( database_columns : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( database_columns : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( database_operation : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( database_operation : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( database_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( database_type : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( db_server_connection_db : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_connection_db : body_constraints, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( db_server_type : values, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_host : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_host : values, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_password : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_password : values, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_owner : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_owner : body_constraints, database_server : body_constraints)
is_a_possible_body_constraint_for( database_server : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( module : body_constraints, boolean : values)
is_a_possible_body_constraint_for( module : body_constraints, promise_types__commands : promise_types)
is_a_body_constraint_of_type( no_output : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( no_output : values, contain : body_constraints)
is_a_body_constraint_of_type( preview : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( preview : values, contain : body_constraints)
is_a_body_constraint_of_type( chroot : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( chroot : values, contain : body_constraints)
is_a_body_constraint_of_type( chdir : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( chdir : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( exec_timeout : body_constraints, int : data_types)
is_a_possible_sub_body_constraint_for( exec_timeout : values, contain : body_constraints)
is_a_body_constraint_of_type( exec_group : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exec_group : values, contain : body_constraints)
is_a_body_constraint_of_type( exec_owner : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exec_owner : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( umask : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( umask : values, contain : body_constraints)
is_a_body_constraint_of_type( useshell : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( useshell : body_constraints, contain : body_constraints)
is_a_possible_body_constraint_for( contain : body_constraints, promise_types__commands : promise_types)
is_a_body_constraint_of_type( args : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( args : body_constraints, promise_types__commands : promise_types)
is_employed_in_bundle( commands : promise_types, setup_knowledge : bundles)
is_employed_in_bundle( commands : promise_types, web_server : bundles)
is_employed_in_bundle( commands : promise_types, main : bundles)
is_employed_in_bundle( commands : promise_types, cfengine : bundles)
is_employed_in_bundle( commands : promise_types, update : bundles)
is_a_body_constraint_of_type( select_end : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_end : values, select_region : values)
is_a_body_constraint_of_type( select_start : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_start : body_constraints, select_region : values)
is_a_possible_body_constraint_for( select_region : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( comment : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( comment : body_constraints, promise_types__topics : promise_types)
is_a_possible_body_constraint_for( comment : body_constraints, promise_types___ : promise_types)
is_a_list_of_type( depends_on : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( depends_on : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( depends_on : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( handle : body_constraints, a_cfengine_identifier : values)
is_a_possible_body_constraint_for( handle : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( ifvarclass : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( ifvarclass : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( timer_policy : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( timer_policy : values, classes : values)
is_a_body_constraint_of_type( persist_time : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( persist_time : values, classes : values)
is_a_list_of_type( promise_kept : body_constraints, a_cfengine_identifier : values)
is_a_body_constraint_of_type( promise_kept : body_constraints, a_cfengine_identifier : values)
is_a_possible_sub_body_constraint_for( promise_kept : values, classes : values)
is_a_list_of_type( repair_timeout : body_constraints, a_cfengine_identifier : values)
is_a_body_constraint_of_type( repair_timeout : body_constraints, a_cfengine_identifier : values)
is_a_possible_sub_body_constraint_for( repair_timeout : values, classes : values)
is_a_list_of_type( repair_denied : body_constraints, a_cfengine_identifier : values)
is_a_body_constraint_of_type( repair_denied : body_constraints, a_cfengine_identifier : values)
is_a_possible_sub_body_constraint_for( repair_denied : values, classes : values)
is_a_list_of_type( repair_failed : body_constraints, a_cfengine_identifier : values)
is_a_body_constraint_of_type( repair_failed : body_constraints, a_cfengine_identifier : values)
is_a_possible_sub_body_constraint_for( repair_failed : values, classes : values)
is_a_list_of_type( promise_repaired : body_constraints, a_cfengine_identifier : values)
is_a_body_constraint_of_type( promise_repaired : body_constraints, a_cfengine_identifier : values)
is_a_possible_sub_body_constraint_for( promise_repaired : body_constraints, classes : values)
is_a_possible_body_constraint_for( classes : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( measurement_class : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( measurement_class : body_constraints, action : values)
is_a_body_constraint_of_type( report_level : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( report_level : values, action : values)
is_a_body_constraint_of_type( background : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( background : values, action : values)
is_a_body_constraint_of_type( audit : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( audit : values, action : values)
is_a_body_constraint_of_type( log_failed : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( log_failed : values, action : values)
is_a_body_constraint_of_type( log_repaired : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( log_repaired : values, action : values)
is_a_body_constraint_of_type( log_kept : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( log_kept : body_constraints, action : values)
is_a_body_constraint_of_type( log_level : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( log_level : values, action : values)
is_a_body_constraint_of_type( log_string : body_constraints, An_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( log_string : values, action : values)
is_a_body_constraint_of_type( expireafter : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( expireafter : values, action : values)
is_a_body_constraint_of_type( ifelapsed : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( ifelapsed : body_constraints, action : values)
is_a_body_constraint_of_type( action_policy : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( action_policy : body_constraints, action : values)
is_a_possible_body_constraint_for( action : body_constraints, promise_types___ : promise_types)
is_a_body_constraint_of_type( report_to_file : body_constraints, a_file_path : values)
is_a_possible_body_constraint_for( report_to_file : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( friend_pattern : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( friend_pattern : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( file_to_print : body_constraints, a_file_path : values)
is_a_possible_sub_body_constraint_for( file_to_print : values, printfile : body_constraints)
is_a_body_constraint_of_type( number_of_lines : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( number_of_lines : body_constraints, printfile : body_constraints)
is_a_possible_body_constraint_for( printfile : body_constraints, promise_types__reports : promise_types)
is_a_list_of_type( showstate : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( showstate : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( showstate : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( intermittency : body_constraints, real : data_types)
is_a_possible_body_constraint_for( intermittency : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( lastseen : body_constraints, a_positive_integer : values)
is_a_possible_body_constraint_for( lastseen : body_constraints, promise_types__reports : promise_types)
is_employed_in_bundle( reports : promise_types, web_server : contexts)
is_employed_in_bundle( reports : promise_types, upgrade_cfexecd : contexts)
is_employed_in_bundle( reports : promise_types, anomalies : contexts)
is_employed_in_bundle( reports : promise_types, main : contexts)
is_a_body_constraint_of_type( not : body_constraints, class : data_types)
is_a_possible_body_constraint_for( not : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( expression : body_constraints, class : data_types)
is_a_possible_body_constraint_for( expression : body_constraints, promise_types__classes : promise_types)
is_a_list_of_type( dist : body_constraints, real_number : values)
is_a_body_constraint_of_type( dist : body_constraints, real_number : values)
is_a_possible_body_constraint_for( dist : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( xor : body_constraints, clist : any)
is_a_possible_body_constraint_for( xor : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( and : body_constraints, clist : any)
is_a_possible_body_constraint_for( and : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( or : body_constraints, clist : any)
is_a_possible_body_constraint_for( or : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( policy : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( policy : body_constraints, promise_types__vars : promise_types)
is_a_list_of_type( rlist : body_constraints, real_number : values)
is_a_body_constraint_of_type( rlist : body_constraints, real_number : values)
is_a_possible_body_constraint_for( rlist : body_constraints, promise_types__vars : promise_types)
is_a_list_of_type( ilist : body_constraints, integer : values)
is_a_body_constraint_of_type( ilist : body_constraints, integer : values)
is_a_possible_body_constraint_for( ilist : body_constraints, promise_types__vars : promise_types)
is_a_list_of_type( slist : body_constraints, An_arbitrary_string : values)
is_a_body_constraint_of_type( slist : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( slist : body_constraints, promise_types__vars : promise_types)
is_a_body_constraint_of_type( real : body_constraints, real_number : values)
is_a_possible_body_constraint_for( real : body_constraints, promise_types__vars : promise_types)
is_a_body_constraint_of_type( int : body_constraints, integer : values)
is_a_possible_body_constraint_for( int : body_constraints, promise_types__vars : promise_types)
is_a_body_constraint_of_type( string : body_constraints, An_arbitrary_string : values)
is_a_possible_body_constraint_for( string : body_constraints, promise_types__vars : promise_types)
is_employed_in_bundle( vars : promise_types, setup_knowledge : bundles)
is_employed_in_bundle( vars : promise_types, fixapache : bundles)
is_employed_in_bundle( vars : promise_types, web_server : bundles)
is_employed_in_bundle( vars : promise_types, laptop : bundles)
is_employed_in_bundle( vars : promise_types, resolver : bundles)
is_employed_in_bundle( vars : promise_types, anomalies : bundles)
is_employed_in_bundle( vars : promise_types, main : bundles)
is_employed_in_bundle( vars : promise_types, cfengine : bundles)
is_employed_in_bundle( vars : promise_types, g : bundles)
is_employed_in_bundle( vars : promise_types, update : bundles)
are_used_in_constraint_parameters( An_arbitrary_string : values, extraction_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, units : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, path_root : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, web_root : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, represents : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, associates : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, backward_relationship : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, forward_relationship : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, authorize : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, maproot : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, deny : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, admit : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, mount_options : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, mount_server : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, tty : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, command : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, status : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, process_owner : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, out_of_range_define : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, in_range_define : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_architectures : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_version : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_name_convention : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_noverify_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_installed_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_arch_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_name_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_version_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_patch_installed_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_patch_arch_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_patch_name_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_patch_version_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_list_arch_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_list_name_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_list_version_regex : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, package_file_repositories : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_not_contains_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_contains_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_not_match_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_match_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_not_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, delete_if_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, replace_value : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, field_value : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, field_separator : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_not_contains_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_contains_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_not_match_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_match_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_not_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, insert_if_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, select_line_matching : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, exclude_dirs : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, include_dirs : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, disable_suffix : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, newname : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, copy_patterns : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, source : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, copylink_patterns : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, linkcopy_patterns : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, issymlinkto : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, search_groups : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, search_owners : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, leaf_name : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, registry_exclude : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, database_columns : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, db_server_connection_db : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, db_server_host : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, db_server_password : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, db_server_owner : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, exec_group : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, exec_owner : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, args : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, select_end : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, select_start : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, comment : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, depends_on : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, ifvarclass : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, measurement_class : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, log_failed : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, log_repaired : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, log_kept : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, log_string : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, friend_pattern : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, showstate : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, slist : body_constraints)
are_used_in_constraint_parameters( An_arbitrary_string : values, string : body_constraints)
is_a_special_case_of( An_arbitrary_string : values, string : data_types)
is_a_special_case_of( a_syslog_level : values, string : data_types)
are_used_in_constraint_parameters( a_file_path : values, mount_source : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, process_stop : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_verify_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_patch_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_update_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_delete_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_add_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_patch_list_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, package_list_command : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, transformer : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, repository : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, source : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, exec_program : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, exec_regex : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, path_name : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, chroot : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, chdir : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, report_to_file : body_constraints)
are_used_in_constraint_parameters( a_file_path : values, file_to_print : body_constraints)
is_a_special_case_of( a_file_path : values, string : data_types)
are_used_in_constraint_parameters( a_user_group_id : values, groups : body_constraints)
are_used_in_constraint_parameters( a_user_group_id : values, owners : body_constraints)
is_a_special_case_of( a_user_group_id : values, string : data_types)
are_used_in_constraint_parameters( a_cfengine_identifier : values, restart_class : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, handle : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, promise_kept : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, repair_timeout : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, repair_denied : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, repair_failed : body_constraints)
are_used_in_constraint_parameters( a_cfengine_identifier : values, promise_repaired : body_constraints)
is_a_special_case_of( a_cfengine_identifier : values, string : data_types)
is_a_special_case_of( a_cfengine_class_expression : values, class : data_types)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, disable_mode : body_constraints)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, mode : body_constraints)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, search_mode : body_constraints)
are_used_in_constraint_parameters( a_single_character : values, value_separator : body_constraints)
are_used_in_constraint_parameters( real_number : values, dist : body_constraints)
are_used_in_constraint_parameters( real_number : values, rlist : body_constraints)
are_used_in_constraint_parameters( real_number : values, real : body_constraints)
is_a_special_case_of( real_number : values, real : data_types)
are_used_in_constraint_parameters( integer : values, package_noverify_returncode : body_constraints)
are_used_in_constraint_parameters( integer : values, ilist : body_constraints)
are_used_in_constraint_parameters( integer : values, int : body_constraints)
is_a_special_case_of( integer : values, int : data_types)
are_used_in_constraint_parameters( a_positive_integer : values, select_line_number : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, sensible_count : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, sensible_size : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, threads : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, vsize : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, rsize : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, pgid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, ppid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, pid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, match_range : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, select_field : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, depth : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, max_file_size : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, persist_time : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, expireafter : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, ifelapsed : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, number_of_lines : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, lastseen : body_constraints)
is_a_special_case_of( a_positive_integer : values, int : data_types)
is_a_special_case_of( a_time_range : values, int : data_types)
are_used_in_constraint_parameters( link_type : values, link_type : body_constraints)
are_used_in_constraint_parameters( boolean : values, ifencrypted : body_constraints)
are_used_in_constraint_parameters( boolean : values, scan_arrivals : body_constraints)
are_used_in_constraint_parameters( boolean : values, check_foreign : body_constraints)
are_used_in_constraint_parameters( boolean : values, unmount : body_constraints)
are_used_in_constraint_parameters( boolean : values, edit_fstab : body_constraints)
are_used_in_constraint_parameters( boolean : values, not_matching : body_constraints)
are_used_in_constraint_parameters( boolean : values, allow_blank_fields : body_constraints)
are_used_in_constraint_parameters( boolean : values, extend_fields : body_constraints)
are_used_in_constraint_parameters( boolean : values, expand_scalars : body_constraints)
are_used_in_constraint_parameters( boolean : values, move_obstructions : body_constraints)
are_used_in_constraint_parameters( boolean : values, create : body_constraints)
are_used_in_constraint_parameters( boolean : values, touch : body_constraints)
are_used_in_constraint_parameters( boolean : values, rmdeadlinks : body_constraints)
are_used_in_constraint_parameters( boolean : values, traverse_links : body_constraints)
are_used_in_constraint_parameters( boolean : values, xdev : body_constraints)
are_used_in_constraint_parameters( boolean : values, include_basedir : body_constraints)
are_used_in_constraint_parameters( boolean : values, empty_file_before_editing : body_constraints)
are_used_in_constraint_parameters( boolean : values, disable : body_constraints)
are_used_in_constraint_parameters( boolean : values, rmdirs : body_constraints)
are_used_in_constraint_parameters( boolean : values, update_hashes : body_constraints)
are_used_in_constraint_parameters( boolean : values, rxdirs : body_constraints)
are_used_in_constraint_parameters( boolean : values, link_children : body_constraints)
are_used_in_constraint_parameters( boolean : values, check_root : body_constraints)
are_used_in_constraint_parameters( boolean : values, purge : body_constraints)
are_used_in_constraint_parameters( boolean : values, verify : body_constraints)
are_used_in_constraint_parameters( boolean : values, encrypt : body_constraints)
are_used_in_constraint_parameters( boolean : values, trustkey : body_constraints)
are_used_in_constraint_parameters( boolean : values, force_ipv4 : body_constraints)
are_used_in_constraint_parameters( boolean : values, force_update : body_constraints)
are_used_in_constraint_parameters( boolean : values, type_check : body_constraints)
are_used_in_constraint_parameters( boolean : values, preserve : body_constraints)
are_used_in_constraint_parameters( boolean : values, stealth : body_constraints)
are_used_in_constraint_parameters( boolean : values, module : body_constraints)
are_used_in_constraint_parameters( boolean : values, no_output : body_constraints)
are_used_in_constraint_parameters( boolean : values, preview : body_constraints)
are_used_in_constraint_parameters( boolean : values, useshell : body_constraints)
are_used_in_constraint_parameters( boolean : values, background : body_constraints)
are_used_in_constraint_parameters( boolean : values, audit : body_constraints)
is_a_special_case_of( boolean : values, int : data_types)
are_used_in_constraint_parameters( system_signals : values, signals : body_constraints)
see_instances_of( comments : system_policy, comment : values)
is_generated_with( software_patches_report : system_reports, promise_types__packages : promise_types)
is_generated_with( setuid_report : system_reports, promise_types__files : promise_types)
is_based_on( performance_report : system_reports, promises : system_policy)
is_affected_by( lastseen_report : system_reports, promise_types__access : promise_types)
is_affected_by( lastseen_report : system_reports, body_constraints__copy_from : promise_types)
is_generated_with( installed_software_report : system_reports, promise_types__packages : promise_types)
is_generated_with( hashes_report : system_reports, body_constraints__changes : body_constraints)
is_generated_with( hashes_report : system_reports, promise_types__files : body_constraints)
is_generated_with( file_changes_report : system_reports, body_constraints__changes : body_constraints)
is_generated_with( file_changes_report : system_reports, promise_types__files : body_constraints)
is_based_on( compliance_report : system_reports, promises : system_policy)
is_generated_with( classes_report : system_reports, promise_types__classes : promise_types)
are_identified_in( roles : promise_theory, agents : promise_theory)
are_recurring_patterns_of( roles : promise_theory, promises : system_policy)
label_variations_in( versions : promise_theory, occurrences : promise_types)
result_in( dependencies : promise_theory, conditional_promises : promise_theory)
are_formed_by_associating( workflows : promise_theory, actions : promise_theory)
can_talk_about( stories : promise_theory, workflows : promise_theory)
are_formed_by_associating( stories : promise_theory, topics : promise_types)
are_formed_by_associating( services : promise_theory, promises : system_policy)
are_represented_as( subjects : promise_theory, topics : promise_types)
are_classified_into_disjoint( occurrences : promise_theory, occurrence_types : any)
are_also_called( occurrence_types : promise_theory, topic_map_sub_types : any)
are_simply_called( topic_instances : promise_theory, occurrences : promise_types)
are_realizations_of( topic_instances : promise_theory, topics : promise_types)
is_another_term_for( type_instances : promise_theory, topics : promise_types)
form_networks_of( associations : promise_theory, topics : promise_types)
represent( associations : promise_theory, structural_relationships : promise_theory)
represent( associations : promise_theory, causative_relationships : promise_theory)
represent( associations : promise_theory, location_relationships : promise_theory)
represent( associations : promise_theory, conceptual_relationships : promise_theory)
can_be_the_subject_of( actions : promise_theory, intentions : promise_theory)
can_be_the_subject_of( behaviours : promise_theory, intentions : promise_theory)
can_be_the_subject_of( facts : promise_theory, intentions : promise_theory)
can_be_classified_into_disjoint( topics : promise_theory, topic_types : any)
can_be_combined_into( topics : promise_theory, stories : promise_theory)
can_talk_about( topics : promise_theory, promises : system_policy)
describes_the_extent__or_quantity__of_a( body_constraint : promise_theory, promise : any)
describes_the_subject__nature_or_quality__of_a( body_type : promise_theory, body_constraint : promise_theory)
has_attribute( promise_body : promise_theory, body_constraint : promise_theory)
has_attribute( promise_body : promise_theory, body_type : promise_theory)
has_instances( promise_type : promise_theory, __all_actions_ : any)
describes_the_nature__or_quality__of_a( promise_type : promise_theory, promise : any)
is_the_recipient_of( promisee : promise_theory, promise : any)
makes_a( promiser : promise_theory, promise : any)
are_a_form_of( announcements : promise_theory, communicated_information : promise_theory)
are_completed_by( conditional_promises : promise_theory, promise_of_necessary_conditions : any)
are_a_form_of( promises : promise_theory, communicated_information : promise_theory)
can_be_made_about( promises : promise_theory, topics : promise_types)
reveal( promises : promise_theory, intentions : promise_theory)
are_a_basis_for( promise_proposals : promise_theory, promises : system_policy)
are_collections_of( bundles : promise_theory, promises : system_policy)
__tm_same_f__( cascading : models_of_organization, hierarchical_structure : models_of_organization)
__tm_same_f__( object_paradigm : models_of_organization, object_orientation : any)
__tm_same_f__( aspect_paradigm : models_of_organization, aspect_orientation : any)
__tm_same_f__( service_orientation : models_of_organization, peer_to_peer_network : models_of_organization)
__tm_same_f__( hierarchical_structure : models_of_organization, object_orientation : any)
__tm_impr_f__( self_healing : models_of_system_administration, __bv_ : any)
__tm_impr_f__( autonomics : models_of_system_administration, __bv_ : any)
__tm_impr_f__( computer_immunology : models_of_system_administration, __bv_ : any)
is_implemented_in( promise_theory : models_of_system_administration, cfengine : bundles)

/*********************/
/* Occurrences       */
/*********************/


 /* occurrences of DB */

{DB,Explanation, [[Relational database service]]}

 /* occurrences of LDAP */

{LDAP,Explanation, [[Directory Service]]}

 /* occurrences of NFS */

{NFS,Explanation, [[Network File System (storage)]]}

 /* occurrences of DNS */

{DNS,Explanation, [[Domain Name Service]]}

 /* occurrences of WWW */

{WWW,Explanation, [[Web service]]}

 /* occurrences of Cfengine */

{Cfengine,Explanation, [[Cfengine automation]]}

 /* occurrences of promise_knowledge_cf_41 */

{promise_knowledge_cf_41,commands, "promises.cf.html#promise_knowledge_cf_41"}
{promise_knowledge_cf_41,web_server, "promises.cf.html#promise_knowledge_cf_41"}

 /* occurrences of promise_knowledge_cf_41 */

{promise_knowledge_cf_41,comment, [[Generate knowledge associative graphs]]}
{promise_knowledge_cf_41,Explanation, [[Generate knowledge associative graphs]]}

 /* occurrences of web_server */

{web_server,commands, "promises.cf.html#promise_knowledge_cf_41"}
{web_server,_usr_local_sbin_cf_know__f__srv_www_htdocs_cfknowledgebase_enterprise_cf__g, "promises.cf.html#promise_knowledge_cf_41"}
{web_server,promise, "promises.cf.html#promise_knowledge_cf_41"}

 /* occurrences of web_server */

{web_server,bundle_reference, "promises.cf.html#bundle_web_server"}

 /* occurrences of promise_knowledge_cf_34 */

{promise_knowledge_cf_34,commands, "promises.cf.html#promise_knowledge_cf_34"}
{promise_knowledge_cf_34,any, "promises.cf.html#promise_knowledge_cf_34"}

 /* occurrences of promise_knowledge_cf_34 */

{promise_knowledge_cf_34,comment, [[Generate config reports]]}
{promise_knowledge_cf_34,Explanation, [[Generate config reports]]}

 /* occurrences of promise_knowledge_cf_24 */

{promise_knowledge_cf_24,files, "promises.cf.html#promise_knowledge_cf_24"}
{promise_knowledge_cf_24,any, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of promise_knowledge_cf_24 */

{promise_knowledge_cf_24,comment, [[Make sure knowledge files are accessible to webserver]]}
{promise_knowledge_cf_24,Explanation, [[Make sure knowledge files are accessible to webserver]]}

 /* occurrences of promise_knowledge_cf_12 */

{promise_knowledge_cf_12,vars, "promises.cf.html#promise_knowledge_cf_12"}
{promise_knowledge_cf_12,any, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of promise_knowledge_cf_12 */

{promise_knowledge_cf_12,Explanation, [[(Uncommented promise of type <i>vars</i> made by: doc_root..)]]}

 /* occurrences of setup_knowledge */

{setup_knowledge,bundle_reference, "promises.cf.html#bundle_setup_knowledge"}

 /* occurrences of promise_webserver_cf_135 */

{promise_webserver_cf_135,field_edits, "promises.cf.html#promise_webserver_cf_135"}
{promise_webserver_cf_135,any, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of promise_webserver_cf_135 */

{promise_webserver_cf_135,Explanation, [[(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..)]]}

 /* occurrences of promise_webserver_cf_128 */

{promise_webserver_cf_128,field_edits, "promises.cf.html#promise_webserver_cf_128"}
{promise_webserver_cf_128,any, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of promise_webserver_cf_128 */

{promise_webserver_cf_128,Explanation, [[(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..)]]}

 /* occurrences of promise_webserver_cf_115 */

{promise_webserver_cf_115,insert_lines, "promises.cf.html#promise_webserver_cf_115"}
{promise_webserver_cf_115,any, "promises.cf.html#promise_webserver_cf_115"}

 /* occurrences of promise_webserver_cf_115 */

{promise_webserver_cf_115,Explanation, [[(Uncommented promise of type <i>insert_lines</i> made by: APACHE_CONF_INCLUDE_FILES..)]]}

 /* occurrences of promise_webserver_cf_106 */

{promise_webserver_cf_106,vars, "promises.cf.html#promise_webserver_cf_106"}
{promise_webserver_cf_106,any, "promises.cf.html#promise_webserver_cf_106"}

 /* occurrences of promise_webserver_cf_106 */

{promise_webserver_cf_106,Explanation, [[(Uncommented promise of type <i>vars</i> made by: del_modules..)]]}

 /* occurrences of promise_webserver_cf_102 */

{promise_webserver_cf_102,vars, "promises.cf.html#promise_webserver_cf_102"}
{promise_webserver_cf_102,any, "promises.cf.html#promise_webserver_cf_102"}

 /* occurrences of promise_webserver_cf_102 */

{promise_webserver_cf_102,Explanation, [[(Uncommented promise of type <i>vars</i> made by: add_modules..)]]}

 /* occurrences of fixapache */

{fixapache,bundle_reference, "promises.cf.html#bundle_fixapache"}

 /* occurrences of promise_webserver_cf_83 */

{promise_webserver_cf_83,reports, "promises.cf.html#promise_webserver_cf_83"}
{promise_webserver_cf_83,_software_ok_on, "promises.cf.html#promise_webserver_cf_83"}

 /* occurrences of promise_webserver_cf_83 */

{promise_webserver_cf_83,Explanation, [[(Uncommented promise of type <i>reports</i> made by: The web server software c..)]]}

 /* occurrences of _software_ok_on */

{_software_ok_on,reports, "promises.cf.html#promise_webserver_cf_83"}
{_software_ok_on,The_web_server_software_could_not_be_installed, "promises.cf.html#promise_webserver_cf_83"}
{_software_ok_on,promise, "promises.cf.html#promise_webserver_cf_83"}

 /* occurrences of promise_webserver_cf_74 */

{promise_webserver_cf_74,files, "promises.cf.html#promise_webserver_cf_74"}
{promise_webserver_cf_74,software_ok, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of promise_webserver_cf_74 */

{promise_webserver_cf_74,Explanation, [[(Uncommented promise of type <i>files</i> made by: /etc/sysconfig/apache2..)]]}

 /* occurrences of software_ok */

{software_ok,files, "promises.cf.html#promise_webserver_cf_74"}
{software_ok,_etc_sysconfig_apache2, "promises.cf.html#promise_webserver_cf_74"}
{software_ok,promise, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of promise_webserver_cf_62 */

{promise_webserver_cf_62,packages, "promises.cf.html#promise_webserver_cf_62"}
{promise_webserver_cf_62,any, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of promise_webserver_cf_62 */

{promise_webserver_cf_62,Explanation, [[(Uncommented promise of type <i>packages</i> made by: php5..)]]}

 /* occurrences of promise_webserver_cf_62 */

{promise_webserver_cf_62,Explanation, [[(Uncommented promise of type <i>packages</i> made by: apache2-prefork..)]]}

 /* occurrences of promise_webserver_cf_62 */

{promise_webserver_cf_62,Explanation, [[(Uncommented promise of type <i>packages</i> made by: apache2-mod_php5..)]]}

 /* occurrences of promise_webserver_cf_62 */

{promise_webserver_cf_62,Explanation, [[(Uncommented promise of type <i>packages</i> made by: apache2..)]]}

 /* occurrences of promise_webserver_cf_53 */

{promise_webserver_cf_53,commands, "promises.cf.html#promise_webserver_cf_53"}
{promise_webserver_cf_53,start_apache, "promises.cf.html#promise_webserver_cf_53"}

 /* occurrences of promise_webserver_cf_53 */

{promise_webserver_cf_53,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /etc/init.d/apache2 resta..)]]}

 /* occurrences of start_apache */

{start_apache,commands, "promises.cf.html#promise_webserver_cf_53"}
{start_apache,_etc_init_d_apache2_restart, "promises.cf.html#promise_webserver_cf_53"}
{start_apache,promise, "promises.cf.html#promise_webserver_cf_53"}

 /* occurrences of promise_webserver_cf_44 */

{promise_webserver_cf_44,processes, "promises.cf.html#promise_webserver_cf_44"}
{promise_webserver_cf_44,off, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of promise_webserver_cf_44 */

{promise_webserver_cf_44,Explanation, [[(Uncommented promise of type <i>processes</i> made by: apache2..)]]}

 /* occurrences of off */

{off,processes, "promises.cf.html#promise_webserver_cf_44"}
{off,apache2, "promises.cf.html#promise_webserver_cf_44"}
{off,promise, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of promise_webserver_cf_38 */

{promise_webserver_cf_38,processes, "promises.cf.html#promise_webserver_cf_38"}
{promise_webserver_cf_38,web_ok_on, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of promise_webserver_cf_38 */

{promise_webserver_cf_38,Explanation, [[(Uncommented promise of type <i>processes</i> made by: apache2..)]]}

 /* occurrences of web_ok_on */

{web_ok_on,processes, "promises.cf.html#promise_webserver_cf_38"}
{web_ok_on,apache2, "promises.cf.html#promise_webserver_cf_38"}
{web_ok_on,promise, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of promise_webserver_cf_23 */

{promise_webserver_cf_23,vars, "promises.cf.html#promise_webserver_cf_23"}
{promise_webserver_cf_23,any, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of promise_webserver_cf_23 */

{promise_webserver_cf_23,Explanation, [[(Uncommented promise of type <i>vars</i> made by: match_package..)]]}

 /* occurrences of promise_webserver_cf_17 */

{promise_webserver_cf_17,vars, "promises.cf.html#promise_webserver_cf_17"}
{promise_webserver_cf_17,any, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of promise_webserver_cf_17 */

{promise_webserver_cf_17,Explanation, [[(Uncommented promise of type <i>vars</i> made by: site_http_conf..)]]}

 /* occurrences of promise_webserver_cf_11 */

{promise_webserver_cf_11,vars, "promises.cf.html#promise_webserver_cf_11"}
{promise_webserver_cf_11,any, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of promise_webserver_cf_11 */

{promise_webserver_cf_11,Explanation, [[(Uncommented promise of type <i>vars</i> made by: document_root..)]]}

 /* occurrences of promise_laptop_cf_31 */

{promise_laptop_cf_31,files, "promises.cf.html#promise_laptop_cf_31"}
{promise_laptop_cf_31,_usb_backup_device_loaded, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of promise_laptop_cf_31 */

{promise_laptop_cf_31,Explanation, [[(Uncommented promise of type <i>files</i> made by: /home/backup..)]]}

 /* occurrences of _usb_backup_device_loaded */

{_usb_backup_device_loaded,files, "promises.cf.html#promise_laptop_cf_31"}
{_usb_backup_device_loaded,_home_backup, "promises.cf.html#promise_laptop_cf_31"}
{_usb_backup_device_loaded,promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of promise_laptop_cf_22 */

{promise_laptop_cf_22,files, "promises.cf.html#promise_laptop_cf_22"}
{promise_laptop_cf_22,usb_backup_device_loaded, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of promise_laptop_cf_22 */

{promise_laptop_cf_22,Explanation, [[(Uncommented promise of type <i>files</i> made by: /media/disk-1/CfengineBac..)]]}

 /* occurrences of usb_backup_device_loaded */

{usb_backup_device_loaded,files, "promises.cf.html#promise_laptop_cf_22"}
{usb_backup_device_loaded,_media_disk_1_CfengineBackupDevice, "promises.cf.html#promise_laptop_cf_22"}
{usb_backup_device_loaded,promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of promise_laptop_cf_6 */

{promise_laptop_cf_6,vars, "promises.cf.html#promise_laptop_cf_6"}
{promise_laptop_cf_6,any, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of promise_laptop_cf_6 */

{promise_laptop_cf_6,Explanation, [[(Uncommented promise of type <i>vars</i> made by: mount_point..)]]}

 /* occurrences of laptop */

{laptop,bundle_reference, "promises.cf.html#bundle_laptop"}

 /* occurrences of promise_library_cf_200 */

{promise_library_cf_200,reports, "promises.cf.html#promise_library_cf_200"}
{promise_library_cf_200,exec_fix, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of promise_library_cf_200 */

{promise_library_cf_200,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Added a 5 minute schedule..)]]}

 /* occurrences of promise_library_cf_194 */

{promise_library_cf_194,replace_patterns, "promises.cf.html#promise_library_cf_194"}
{promise_library_cf_194,any, "promises.cf.html#promise_library_cf_194"}

 /* occurrences of promise_library_cf_194 */

{promise_library_cf_194,Explanation, [[(Uncommented promise of type <i>replace_patterns</i> made by: cfexecd..)]]}

 /* occurrences of promise_library_cf_190 */

{promise_library_cf_190,insert_lines, "promises.cf.html#promise_library_cf_190"}
{promise_library_cf_190,exec_fix, "promises.cf.html#promise_library_cf_190"}

 /* occurrences of promise_library_cf_190 */

{promise_library_cf_190,Explanation, [[(Uncommented promise of type <i>insert_lines</i> made by: 0,5,10,15,20,25,30,35,40,..)]]}

 /* occurrences of upgrade_cfexecd */

{upgrade_cfexecd,bundle_reference, "promises.cf.html#bundle_upgrade_cfexecd"}

 /* occurrences of promise_library_cf_165 */

{promise_library_cf_165,delete_lines, "promises.cf.html#promise_library_cf_165"}
{promise_library_cf_165,any, "promises.cf.html#promise_library_cf_165"}

 /* occurrences of promise_library_cf_165 */

{promise_library_cf_165,Explanation, [[(Uncommented promise of type <i>delete_lines</i> made by: $(regex)..)]]}

 /* occurrences of DeleteLinesMatching */

{DeleteLinesMatching,bundle_reference, "promises.cf.html#bundle_DeleteLinesMatching"}

 /* occurrences of promise_library_cf_113 */

{promise_library_cf_113,field_edits, "promises.cf.html#promise_library_cf_113"}
{promise_library_cf_113,any, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of promise_library_cf_113 */

{promise_library_cf_113,Explanation, [[(Uncommented promise of type <i>field_edits</i> made by: NETCONFIG_DNS_STATIC_SEAR..)]]}

 /* occurrences of promise_library_cf_105 */

{promise_library_cf_105,vars, "promises.cf.html#promise_library_cf_105"}
{promise_library_cf_105,any, "promises.cf.html#promise_library_cf_105"}

 /* occurrences of promise_library_cf_105 */

{promise_library_cf_105,Explanation, [[(Uncommented promise of type <i>vars</i> made by: search..)]]}

 /* occurrences of resolver */

{resolver,bundle_reference, "promises.cf.html#bundle_resolver"}

 /* occurrences of promise_site_cf_366 */

{promise_site_cf_366,roles, "promises.cf.html#promise_site_cf_366"}
{promise_site_cf_366,any, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of promise_site_cf_366 */

{promise_site_cf_366,Explanation, [[(Uncommented promise of type <i>roles</i> made by: .*..)]]}

 /* occurrences of promise_site_cf_362 */

{promise_site_cf_362,access, "promises.cf.html#promise_site_cf_362"}
{promise_site_cf_362,any, "promises.cf.html#promise_site_cf_362"}

 /* occurrences of promise_site_cf_362 */

{promise_site_cf_362,Explanation, [[(Uncommented promise of type <i>access</i> made by: /home/mark/.cfagent/bin/c..)]]}

 /* occurrences of promise_site_cf_358 */

{promise_site_cf_358,access, "promises.cf.html#promise_site_cf_358"}
{promise_site_cf_358,any, "promises.cf.html#promise_site_cf_358"}

 /* occurrences of promise_site_cf_358 */

{promise_site_cf_358,Explanation, [[(Uncommented promise of type <i>access</i> made by: /home/mark/LapTop..)]]}

 /* occurrences of access_rules */

{access_rules,bundle_reference, "promises.cf.html#bundle_access_rules"}

 /* occurrences of promise_site_cf_345 */

{promise_site_cf_345,reports, "promises.cf.html#promise_site_cf_345"}
{promise_site_cf_345,anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high, "promises.cf.html#promise_site_cf_345"}

 /* occurrences of promise_site_cf_345 */

{promise_site_cf_345,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Anomalous low entropy (3d..)]]}

 /* occurrences of anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high */

{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,reports, "promises.cf.html#promise_site_cf_345"}
{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_icmp_in__pm___mon_stddev_icmp_in_, "promises.cf.html#promise_site_cf_345"}
{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,promise, "promises.cf.html#promise_site_cf_345"}

 /* occurrences of promise_site_cf_338 */

{promise_site_cf_338,reports, "promises.cf.html#promise_site_cf_338"}
{promise_site_cf_338,entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2, "promises.cf.html#promise_site_cf_338"}

 /* occurrences of promise_site_cf_338 */

{promise_site_cf_338,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Anomalous (2dev) incoming..)]]}

 /* occurrences of entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2 */

{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,reports, "promises.cf.html#promise_site_cf_338"}
{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_udp_in__pm___mon_stddev_udp_in_, "promises.cf.html#promise_site_cf_338"}
{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,promise, "promises.cf.html#promise_site_cf_338"}

 /* occurrences of promise_site_cf_331 */

{promise_site_cf_331,reports, "promises.cf.html#promise_site_cf_331"}
{promise_site_cf_331,entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of promise_site_cf_331 */

{promise_site_cf_331,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Anomalous (3dev) incoming..)]]}

 /* occurrences of entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly */

{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_331"}
{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,Anomalous__3dev__incoming_DNS_packets_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___average_dns_in__pm___mon_stddev_dns_in_, "promises.cf.html#promise_site_cf_331"}
{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of promise_site_cf_324 */

{promise_site_cf_324,reports, "promises.cf.html#promise_site_cf_324"}
{promise_site_cf_324,entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2, "promises.cf.html#promise_site_cf_324"}

 /* occurrences of promise_site_cf_324 */

{promise_site_cf_324,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Anomalous number of new T..)]]}

 /* occurrences of entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2 */

{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,reports, "promises.cf.html#promise_site_cf_324"}
{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,Anomalous_number_of_new_TCP_connections_on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_, "promises.cf.html#promise_site_cf_324"}
{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,promise, "promises.cf.html#promise_site_cf_324"}

 /* occurrences of promise_site_cf_317 */

{promise_site_cf_317,reports, "promises.cf.html#promise_site_cf_317"}
{promise_site_cf_317,entropy_www_in_low_anomaly_hosts_www_in_high_anomaly, "promises.cf.html#promise_site_cf_317"}

 /* occurrences of promise_site_cf_317 */

{promise_site_cf_317,Explanation, [[(Uncommented promise of type <i>reports</i> made by: LOW ENTROPY Incoming www ..)]]}

 /* occurrences of entropy_www_in_low_anomaly_hosts_www_in_high_anomaly */

{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_317"}
{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_, "promises.cf.html#promise_site_cf_317"}
{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_317"}

 /* occurrences of promise_site_cf_310 */

{promise_site_cf_310,reports, "promises.cf.html#promise_site_cf_310"}
{promise_site_cf_310,entropy_www_in_high_anomaly_hosts_www_in_high_anomaly, "promises.cf.html#promise_site_cf_310"}

 /* occurrences of promise_site_cf_310 */

{promise_site_cf_310,Explanation, [[(Uncommented promise of type <i>reports</i> made by: HIGH ENTROPY Incoming www..)]]}

 /* occurrences of entropy_www_in_high_anomaly_hosts_www_in_high_anomaly */

{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_310"}
{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at_Tue_Jun_30_12_46_08_2009________measured_value_0_av___mon_average_www_in__pm___mon_stddev_www_in_, "promises.cf.html#promise_site_cf_310"}
{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_310"}

 /* occurrences of promise_site_cf_303 */

{promise_site_cf_303,reports, "promises.cf.html#promise_site_cf_303"}
{promise_site_cf_303,rootprocs_high_dev2, "promises.cf.html#promise_site_cf_303"}

 /* occurrences of promise_site_cf_303 */

{promise_site_cf_303,Explanation, [[(Uncommented promise of type <i>reports</i> made by: RootProc anomaly high 2 d..)]]}

 /* occurrences of rootprocs_high_dev2 */

{rootprocs_high_dev2,reports, "promises.cf.html#promise_site_cf_303"}
{rootprocs_high_dev2,RootProc_anomaly_high_2_dev_on___mon_host__at_Tue_Jun_30_12_46_08_2009______measured_value_100_av___mon_average_rootprocs__pm___mon_stddev_rootprocs_, "promises.cf.html#promise_site_cf_303"}
{rootprocs_high_dev2,promise, "promises.cf.html#promise_site_cf_303"}

 /* occurrences of promise_site_cf_293 */

{promise_site_cf_293,files, "promises.cf.html#promise_site_cf_293"}
{promise_site_cf_293,any, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of promise_site_cf_293 */

{promise_site_cf_293,Explanation, [[(Uncommented promise of type <i>files</i> made by: /tmp/shadow..)]]}

 /* occurrences of promise_site_cf_293 */

{promise_site_cf_293,Explanation, [[(Uncommented promise of type <i>files</i> made by: /tmp/passwd..)]]}

 /* occurrences of promise_site_cf_287 */

{promise_site_cf_287,files, "promises.cf.html#promise_site_cf_287"}
{promise_site_cf_287,any, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of promise_site_cf_287 */

{promise_site_cf_287,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/shad..)]]}

 /* occurrences of promise_site_cf_287 */

{promise_site_cf_287,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/pass..)]]}

 /* occurrences of promise_site_cf_275 */

{promise_site_cf_275,vars, "promises.cf.html#promise_site_cf_275"}
{promise_site_cf_275,any, "promises.cf.html#promise_site_cf_275"}

 /* occurrences of promise_site_cf_275 */

{promise_site_cf_275,Explanation, [[(Uncommented promise of type <i>vars</i> made by: files..)]]}

 /* occurrences of promise_site_cf_274 */

{promise_site_cf_274,vars, "promises.cf.html#promise_site_cf_274"}
{promise_site_cf_274,any, "promises.cf.html#promise_site_cf_274"}

 /* occurrences of promise_site_cf_274 */

{promise_site_cf_274,Explanation, [[(Uncommented promise of type <i>vars</i> made by: sysdir..)]]}

 /* occurrences of anomalies */

{anomalies,bundle_reference, "promises.cf.html#bundle_anomalies"}

 /* occurrences of free_disk_watch */

{free_disk_watch,measurements, "promises.cf.html#free_disk_watch"}
{free_disk_watch,linux, "promises.cf.html#free_disk_watch"}

 /* occurrences of free_disk_watch */

{free_disk_watch,Explanation, [[(Uncommented promise of type <i>measurements</i> made by: /bin/df..)]]}

 /* occurrences of free_memory_watch */

{free_memory_watch,measurements, "promises.cf.html#free_memory_watch"}
{free_memory_watch,linux, "promises.cf.html#free_memory_watch"}

 /* occurrences of free_memory_watch */

{free_memory_watch,Explanation, [[(Uncommented promise of type <i>measurements</i> made by: /proc/meminfo..)]]}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#free_disk_watch"}
{linux,_bin_df, "promises.cf.html#free_disk_watch"}
{linux,promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#free_memory_watch"}
{linux,_proc_meminfo, "promises.cf.html#free_memory_watch"}
{linux,promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of monitor_self_watch */

{monitor_self_watch,measurements, "promises.cf.html#monitor_self_watch"}
{monitor_self_watch,atlas, "promises.cf.html#monitor_self_watch"}

 /* occurrences of monitor_self_watch */

{monitor_self_watch,Explanation, [[(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_ro..)]]}

 /* occurrences of atlas */

{atlas,measurements, "promises.cf.html#monitor_self_watch"}
{atlas,_var_cfengine_state_cf_rootprocs, "promises.cf.html#monitor_self_watch"}
{atlas,promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of watch */

{watch,bundle_reference, "promises.cf.html#bundle_watch"}

 /* occurrences of promise_site_cf_180 */

{promise_site_cf_180,files, "promises.cf.html#promise_site_cf_180"}
{promise_site_cf_180,any, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of promise_site_cf_180 */

{promise_site_cf_180,Explanation, [[(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf\..*..)]]}

 /* occurrences of promise_site_cf_174 */

{promise_site_cf_174,files, "promises.cf.html#promise_site_cf_174"}
{promise_site_cf_174,any, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of promise_site_cf_174 */

{promise_site_cf_174,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/outputs..)]]}

 /* occurrences of garbage_collection */

{garbage_collection,bundle_reference, "promises.cf.html#bundle_garbage_collection"}

 /* occurrences of promise_site_cf_157 */

{promise_site_cf_157,packages, "promises.cf.html#promise_site_cf_157"}
{promise_site_cf_157,any, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of promise_site_cf_157 */

{promise_site_cf_157,comment, [[Install patches]]}
{promise_site_cf_157,Explanation, [[Install patches]]}

 /* occurrences of promise_site_cf_148 */

{promise_site_cf_148,commands, "promises.cf.html#promise_site_cf_148"}
{promise_site_cf_148,Hr12, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of promise_site_cf_148 */

{promise_site_cf_148,comment, [[Update the locate database]]}
{promise_site_cf_148,Explanation, [[Update the locate database]]}

 /* occurrences of Hr12 */

{Hr12,commands, "promises.cf.html#promise_site_cf_148"}
{Hr12,_usr_bin_updatedb___prunepaths__windows, "promises.cf.html#promise_site_cf_148"}
{Hr12,promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of promise_site_cf_141 */

{promise_site_cf_141,commands, "promises.cf.html#promise_site_cf_141"}
{promise_site_cf_141,any, "promises.cf.html#promise_site_cf_141"}

 /* occurrences of promise_site_cf_141 */

{promise_site_cf_141,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /usr/bin/zypper -non-inte..)]]}

 /* occurrences of promise_site_cf_139 */

{promise_site_cf_139,commands, "promises.cf.html#promise_site_cf_139"}
{promise_site_cf_139,any, "promises.cf.html#promise_site_cf_139"}

 /* occurrences of promise_site_cf_139 */

{promise_site_cf_139,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..)]]}

 /* occurrences of promise_site_cf_139 */

{promise_site_cf_139,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..)]]}

 /* occurrences of promise_site_cf_131 */

{promise_site_cf_131,processes, "promises.cf.html#promise_site_cf_131"}
{promise_site_cf_131,any, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of promise_site_cf_131 */

{promise_site_cf_131,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cf-serverd..)]]}

 /* occurrences of promise_site_cf_131 */

{promise_site_cf_131,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cf-monitord..)]]}

 /* occurrences of promise_site_cf_120 */

{promise_site_cf_120,processes, "promises.cf.html#promise_site_cf_120"}
{promise_site_cf_120,any, "promises.cf.html#promise_site_cf_120"}

 /* occurrences of promise_site_cf_120 */

{promise_site_cf_120,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cfenvd..)]]}

 /* occurrences of promise_site_cf_106 */

{promise_site_cf_106,files, "promises.cf.html#promise_site_cf_106"}
{promise_site_cf_106,any, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of promise_site_cf_106 */

{promise_site_cf_106,Explanation, [[(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf..)]]}

 /* occurrences of promise_site_cf_98 */

{promise_site_cf_98,reports, "promises.cf.html#promise_site_cf_98"}
{promise_site_cf_98,_up_and_running, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of promise_site_cf_98 */

{promise_site_cf_98,Explanation, [[(Uncommented promise of type <i>reports</i> made by: Laptop wakes up..)]]}

 /* occurrences of _up_and_running */

{_up_and_running,reports, "promises.cf.html#promise_site_cf_98"}
{_up_and_running,Laptop_wakes_up, "promises.cf.html#promise_site_cf_98"}
{_up_and_running,promise, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of promise_site_cf_90 */

{promise_site_cf_90,vars, "promises.cf.html#promise_site_cf_90"}
{promise_site_cf_90,any, "promises.cf.html#promise_site_cf_90"}

 /* occurrences of promise_site_cf_90 */

{promise_site_cf_90,Explanation, [[(Uncommented promise of type <i>vars</i> made by: component..)]]}

 /* occurrences of main */

{main,bundle_reference, "promises.cf.html#bundle_main"}

 /* occurrences of promise_site_cf_77 */

{promise_site_cf_77,processes, "promises.cf.html#promise_site_cf_77"}
{promise_site_cf_77,exec_fix, "promises.cf.html#promise_site_cf_77"}

 /* occurrences of promise_site_cf_77 */

{promise_site_cf_77,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cron..)]]}

 /* occurrences of exec_fix */

{exec_fix,reports, "promises.cf.html#promise_library_cf_200"}
{exec_fix,Added_a_5_minute_schedule_to_crontabs, "promises.cf.html#promise_library_cf_200"}
{exec_fix,promise, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of exec_fix */

{exec_fix,insert_lines, "promises.cf.html#promise_library_cf_190"}
{exec_fix,0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F, "promises.cf.html#promise_library_cf_190"}
{exec_fix,promise, "promises.cf.html#promise_library_cf_190"}

 /* occurrences of exec_fix */

{exec_fix,processes, "promises.cf.html#promise_site_cf_77"}
{exec_fix,cron, "promises.cf.html#promise_site_cf_77"}
{exec_fix,promise, "promises.cf.html#promise_site_cf_77"}

 /* occurrences of promise_site_cf_70 */

{promise_site_cf_70,files, "promises.cf.html#promise_site_cf_70"}
{promise_site_cf_70,any, "promises.cf.html#promise_site_cf_70"}

 /* occurrences of promise_site_cf_70 */

{promise_site_cf_70,comment, [[This is inaccessible in new suse after cd opened/closed]]}
{promise_site_cf_70,Explanation, [[This is inaccessible in new suse after cd opened/closed]]}

 /* occurrences of promise_site_cf_66 */

{promise_site_cf_66,files, "promises.cf.html#promise_site_cf_66"}
{promise_site_cf_66,any, "promises.cf.html#promise_site_cf_66"}

 /* occurrences of promise_site_cf_66 */

{promise_site_cf_66,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/spool/cron/tabs/root..)]]}

 /* occurrences of promise_site_cf_58 */

{promise_site_cf_58,files, "promises.cf.html#promise_site_cf_58"}
{promise_site_cf_58,any, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of promise_site_cf_58 */

{promise_site_cf_58,comment, [[Check if there are still promises about cfengine 2 that need removing]]}
{promise_site_cf_58,Explanation, [[Check if there are still promises about cfengine 2 that need removing]]}

 /* occurrences of promise_site_cf_48 */

{promise_site_cf_48,commands, "promises.cf.html#promise_site_cf_48"}
{promise_site_cf_48,integrate_cfengine2, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of promise_site_cf_48 */

{promise_site_cf_48,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cfagent..)]]}

 /* occurrences of integrate_cfengine2 */

{integrate_cfengine2,commands, "promises.cf.html#promise_site_cf_48"}
{integrate_cfengine2,_var_cfengine_bin_cfagent, "promises.cf.html#promise_site_cf_48"}
{integrate_cfengine2,promise, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of promise_site_cf_40 */

{promise_site_cf_40,vars, "promises.cf.html#promise_site_cf_40"}
{promise_site_cf_40,any, "promises.cf.html#promise_site_cf_40"}

 /* occurrences of promise_site_cf_40 */

{promise_site_cf_40,Explanation, [[(Uncommented promise of type <i>vars</i> made by: cf2bits..)]]}

 /* occurrences of cfengine */

{cfengine,bundle_reference, "promises.cf.html#bundle_cfengine"}

 /* occurrences of promise_site_cf_17 */

{promise_site_cf_17,vars, "promises.cf.html#promise_site_cf_17"}
{promise_site_cf_17,_SuSE, "promises.cf.html#promise_site_cf_17"}

 /* occurrences of promise_site_cf_17 */

{promise_site_cf_17,Explanation, [[(Uncommented promise of type <i>vars</i> made by: crontab..)]]}

 /* occurrences of _SuSE */

{_SuSE,vars, "promises.cf.html#promise_site_cf_17"}
{_SuSE,crontab, "promises.cf.html#promise_site_cf_17"}
{_SuSE,promise, "promises.cf.html#promise_site_cf_17"}

 /* occurrences of promise_site_cf_13 */

{promise_site_cf_13,vars, "promises.cf.html#promise_site_cf_13"}
{promise_site_cf_13,SuSE, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of promise_site_cf_13 */

{promise_site_cf_13,Explanation, [[(Uncommented promise of type <i>vars</i> made by: crontab..)]]}

 /* occurrences of SuSE */

{SuSE,vars, "promises.cf.html#promise_site_cf_13"}
{SuSE,crontab, "promises.cf.html#promise_site_cf_13"}
{SuSE,promise, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of g */

{g,bundle_reference, "promises.cf.html#bundle_g"}

 /* occurrences of promise_update_cf_45 */

{promise_update_cf_45,commands, "promises.cf.html#promise_update_cf_45"}
{promise_update_cf_45,reload_start_exec, "promises.cf.html#promise_update_cf_45"}

 /* occurrences of promise_update_cf_45 */

{promise_update_cf_45,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-exec..)]]}

 /* occurrences of reload_start_exec */

{reload_start_exec,commands, "promises.cf.html#promise_update_cf_45"}
{reload_start_exec,_var_cfengine_bin_cf_execd, "promises.cf.html#promise_update_cf_45"}
{reload_start_exec,promise, "promises.cf.html#promise_update_cf_45"}

 /* occurrences of promise_update_cf_41 */

{promise_update_cf_41,commands, "promises.cf.html#promise_update_cf_41"}
{promise_update_cf_41,reload_start_monitor, "promises.cf.html#promise_update_cf_41"}

 /* occurrences of promise_update_cf_41 */

{promise_update_cf_41,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..)]]}

 /* occurrences of reload_start_monitor */

{reload_start_monitor,commands, "promises.cf.html#promise_update_cf_41"}
{reload_start_monitor,_var_cfengine_bin_cf_monitord, "promises.cf.html#promise_update_cf_41"}
{reload_start_monitor,promise, "promises.cf.html#promise_update_cf_41"}

 /* occurrences of promise_update_cf_37 */

{promise_update_cf_37,commands, "promises.cf.html#promise_update_cf_37"}
{promise_update_cf_37,reload_start_server, "promises.cf.html#promise_update_cf_37"}

 /* occurrences of promise_update_cf_37 */

{promise_update_cf_37,Explanation, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..)]]}

 /* occurrences of reload_start_server */

{reload_start_server,commands, "promises.cf.html#promise_update_cf_37"}
{reload_start_server,_var_cfengine_bin_cf_serverd, "promises.cf.html#promise_update_cf_37"}
{reload_start_server,promise, "promises.cf.html#promise_update_cf_37"}

 /* occurrences of promise_update_cf_31 */

{promise_update_cf_31,processes, "promises.cf.html#promise_update_cf_31"}
{promise_update_cf_31,any, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of promise_update_cf_31 */

{promise_update_cf_31,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cf-execd..)]]}

 /* occurrences of promise_update_cf_30 */

{promise_update_cf_30,processes, "promises.cf.html#promise_update_cf_30"}
{promise_update_cf_30,any, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of promise_update_cf_30 */

{promise_update_cf_30,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cf-monitord..)]]}

 /* occurrences of promise_update_cf_29 */

{promise_update_cf_29,processes, "promises.cf.html#promise_update_cf_29"}
{promise_update_cf_29,any, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of promise_update_cf_29 */

{promise_update_cf_29,Explanation, [[(Uncommented promise of type <i>processes</i> made by: cf-serverd..)]]}

 /* occurrences of promise_update_cf_21 */

{promise_update_cf_21,files, "promises.cf.html#promise_update_cf_21"}
{promise_update_cf_21,any, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of promise_update_cf_21 */

{promise_update_cf_21,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/bin..)]]}

 /* occurrences of promise_update_cf_13 */

{promise_update_cf_13,files, "promises.cf.html#promise_update_cf_13"}
{promise_update_cf_13,any, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of promise_update_cf_13 */

{promise_update_cf_13,Explanation, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs..)]]}

 /* occurrences of promise_update_cf_7 */

{promise_update_cf_7,vars, "promises.cf.html#promise_update_cf_7"}
{promise_update_cf_7,any, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of promise_update_cf_7 */

{promise_update_cf_7,Explanation, [[(Uncommented promise of type <i>vars</i> made by: master_location..)]]}

 /* occurrences of any */

{any,commands, "promises.cf.html#promise_knowledge_cf_34"}
{any,_usr_local_sbin_cf_promises__r, "promises.cf.html#promise_knowledge_cf_34"}
{any,promise, "promises.cf.html#promise_knowledge_cf_34"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_knowledge_cf_24"}
{any,_srv_www_htdocs_cfknowledgebase, "promises.cf.html#promise_knowledge_cf_24"}
{any,promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_knowledge_cf_12"}
{any,doc_root, "promises.cf.html#promise_knowledge_cf_12"}
{any,promise, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_webserver_cf_135"}
{any,APACHE_MODULES___, "promises.cf.html#promise_webserver_cf_135"}
{any,promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_webserver_cf_128"}
{any,APACHE_MODULES___, "promises.cf.html#promise_webserver_cf_128"}
{any,promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of any */

{any,insert_lines, "promises.cf.html#promise_webserver_cf_115"}
{any,APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_, "promises.cf.html#promise_webserver_cf_115"}
{any,promise, "promises.cf.html#promise_webserver_cf_115"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_106"}
{any,del_modules, "promises.cf.html#promise_webserver_cf_106"}
{any,promise, "promises.cf.html#promise_webserver_cf_106"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_102"}
{any,add_modules, "promises.cf.html#promise_webserver_cf_102"}
{any,promise, "promises.cf.html#promise_webserver_cf_102"}

 /* occurrences of any */

{any,php5, "promises.cf.html#promise_webserver_cf_62"}
{any,apache2_prefork, "promises.cf.html#promise_webserver_cf_62"}
{any,apache2_mod_php5, "promises.cf.html#promise_webserver_cf_62"}
{any,packages, "promises.cf.html#promise_webserver_cf_62"}
{any,apache2, "promises.cf.html#promise_webserver_cf_62"}
{any,promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_23"}
{any,match_package, "promises.cf.html#promise_webserver_cf_23"}
{any,promise, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_17"}
{any,site_http_conf, "promises.cf.html#promise_webserver_cf_17"}
{any,promise, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_11"}
{any,document_root, "promises.cf.html#promise_webserver_cf_11"}
{any,promise, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_laptop_cf_6"}
{any,mount_point, "promises.cf.html#promise_laptop_cf_6"}
{any,promise, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of any */

{any,replace_patterns, "promises.cf.html#promise_library_cf_194"}
{any,cfexecd, "promises.cf.html#promise_library_cf_194"}
{any,promise, "promises.cf.html#promise_library_cf_194"}

 /* occurrences of any */

{any,delete_lines, "promises.cf.html#promise_library_cf_165"}
{any,__regex_, "promises.cf.html#promise_library_cf_165"}
{any,promise, "promises.cf.html#promise_library_cf_165"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_library_cf_113"}
{any,NETCONFIG_DNS_STATIC_SEARCHLIST__, "promises.cf.html#promise_library_cf_113"}
{any,promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_library_cf_105"}
{any,search, "promises.cf.html#promise_library_cf_105"}
{any,promise, "promises.cf.html#promise_library_cf_105"}

 /* occurrences of any */

{any,roles, "promises.cf.html#promise_site_cf_366"}
{any,__, "promises.cf.html#promise_site_cf_366"}
{any,promise, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of any */

{any,access, "promises.cf.html#promise_site_cf_362"}
{any,_home_mark__cfagent_bin_cf_agent, "promises.cf.html#promise_site_cf_362"}
{any,promise, "promises.cf.html#promise_site_cf_362"}

 /* occurrences of any */

{any,access, "promises.cf.html#promise_site_cf_358"}
{any,_home_mark_LapTop, "promises.cf.html#promise_site_cf_358"}
{any,promise, "promises.cf.html#promise_site_cf_358"}

 /* occurrences of any */

{any,_tmp_shadow, "promises.cf.html#promise_site_cf_293"}
{any,files, "promises.cf.html#promise_site_cf_293"}
{any,_tmp_passwd, "promises.cf.html#promise_site_cf_293"}
{any,promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of any */

{any,_var_cfengine_inputs_shadow, "promises.cf.html#promise_site_cf_287"}
{any,files, "promises.cf.html#promise_site_cf_287"}
{any,_var_cfengine_inputs_passwd, "promises.cf.html#promise_site_cf_287"}
{any,promise, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_275"}
{any,files, "promises.cf.html#promise_site_cf_275"}
{any,promise, "promises.cf.html#promise_site_cf_275"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_274"}
{any,sysdir, "promises.cf.html#promise_site_cf_274"}
{any,promise, "promises.cf.html#promise_site_cf_274"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_180"}
{any,_etc_resolv_conf____, "promises.cf.html#promise_site_cf_180"}
{any,promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_174"}
{any,_var_cfengine_outputs, "promises.cf.html#promise_site_cf_174"}
{any,promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of any */

{any,packages, "promises.cf.html#promise_site_cf_157"}
{any,no_match, "promises.cf.html#promise_site_cf_157"}
{any,promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of any */

{any,commands, "promises.cf.html#promise_site_cf_141"}
{any,_usr_bin_zypper__non_interactive_patch, "promises.cf.html#promise_site_cf_141"}
{any,promise, "promises.cf.html#promise_site_cf_141"}

 /* occurrences of any */

{any,_var_cfengine_bin_cf_serverd, "promises.cf.html#promise_site_cf_139"}
{any,commands, "promises.cf.html#promise_site_cf_139"}
{any,_var_cfengine_bin_cf_monitord, "promises.cf.html#promise_site_cf_139"}
{any,promise, "promises.cf.html#promise_site_cf_139"}

 /* occurrences of any */

{any,cf_serverd, "promises.cf.html#promise_site_cf_131"}
{any,processes, "promises.cf.html#promise_site_cf_131"}
{any,cf_monitord, "promises.cf.html#promise_site_cf_131"}
{any,promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_site_cf_120"}
{any,cfenvd, "promises.cf.html#promise_site_cf_120"}
{any,promise, "promises.cf.html#promise_site_cf_120"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_106"}
{any,_etc_resolv_conf, "promises.cf.html#promise_site_cf_106"}
{any,promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_90"}
{any,component, "promises.cf.html#promise_site_cf_90"}
{any,promise, "promises.cf.html#promise_site_cf_90"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_70"}
{any,_dev_sr0, "promises.cf.html#promise_site_cf_70"}
{any,promise, "promises.cf.html#promise_site_cf_70"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_66"}
{any,_var_spool_cron_tabs_root, "promises.cf.html#promise_site_cf_66"}
{any,promise, "promises.cf.html#promise_site_cf_66"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_58"}
{any,_var_cfengine_inputs___, "promises.cf.html#promise_site_cf_58"}
{any,promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_40"}
{any,cf2bits, "promises.cf.html#promise_site_cf_40"}
{any,promise, "promises.cf.html#promise_site_cf_40"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_31"}
{any,cf_execd, "promises.cf.html#promise_update_cf_31"}
{any,promise, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_30"}
{any,cf_monitord, "promises.cf.html#promise_update_cf_30"}
{any,promise, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_29"}
{any,cf_serverd, "promises.cf.html#promise_update_cf_29"}
{any,promise, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_update_cf_21"}
{any,_var_cfengine_bin, "promises.cf.html#promise_update_cf_21"}
{any,promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_update_cf_13"}
{any,_var_cfengine_inputs, "promises.cf.html#promise_update_cf_13"}
{any,promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_update_cf_7"}
{any,master_location, "promises.cf.html#promise_update_cf_7"}
{any,promise, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of update */

{update,bundle_reference, "promises.cf.html#bundle_update"}

 /* occurrences of userexists */

{userexists,Explanation, [[True if user name or numerical id exists on this host]]}

 /* occurrences of usemodule */

{usemodule,Explanation, [[Execute cfengine module script and set class if successful]]}

 /* occurrences of strcmp */

{strcmp,Explanation, [[True if the two strings match exactly]]}

 /* occurrences of splitstring */

{splitstring,Explanation, [[Convert a string in arg1 into a list of max arg3 strings by splitting on a regular expression in arg2]]}

 /* occurrences of splayclass */

{splayclass,Explanation, [[True if the first argument's time-slot has arrived, according to a policy in arg2]]}

 /* occurrences of selectservers */

{selectservers,Explanation, [[Select tcp servers which respond correctly to a query and return their number, set array of names]]}

 /* occurrences of rrange */

{rrange,Explanation, [[Define a range of real numbers for cfengine internal use]]}

 /* occurrences of returnszero */

{returnszero,Explanation, [[True if named shell command has exit status zero]]}

 /* occurrences of remotescalar */

{remotescalar,Explanation, [[Read a scalar value from a remote cfengine server]]}

 /* occurrences of regldap */

{regldap,Explanation, [[True if arg6 is a regular expression matching a value item in an ldap search]]}

 /* occurrences of reglist */

{reglist,Explanation, [[True if arg2 matches any item in the list with id=arg1]]}

 /* occurrences of regline */

{regline,Explanation, [[True if arg2 is a regular expression matching a line in file arg1]]}

 /* occurrences of registryvalue */

{registryvalue,Explanation, [[Returns a value for an MS-Win registry key,value pair]]}

 /* occurrences of regcmp */

{regcmp,Explanation, [[True if arg2 is a regular expression matching arg1]]}

 /* occurrences of regarray */

{regarray,Explanation, [[True if arg1 matches any item in the associative array with id=arg2]]}

 /* occurrences of readtcp */

{readtcp,Explanation, [[Connect to tcp port, send string and assign result to variable]]}

 /* occurrences of readstringlist */

{readstringlist,Explanation, [[Read and assign a list variable from a file of separated strings]]}

 /* occurrences of readstringarray */

{readstringarray,Explanation, [[Read an array of strings from a file and assign the dimension to a variable]]}

 /* occurrences of readreallist */

{readreallist,Explanation, [[Read and assign a list variable from a file of separated real numbers]]}

 /* occurrences of readrealarray */

{readrealarray,Explanation, [[Read an array of real numbers from a file and assign the dimension to a variable]]}

 /* occurrences of readintlist */

{readintlist,Explanation, [[Read and assign a list variable from a file of separated ints]]}

 /* occurrences of readintarray */

{readintarray,Explanation, [[Read an array of integers from a file and assign the dimension to a variable]]}

 /* occurrences of readfile */

{readfile,Explanation, [[Read max number of bytes from named file and assign to variable]]}

 /* occurrences of randomint */

{randomint,Explanation, [[Generate a random integer between the given limits]]}

 /* occurrences of peerleaders */

{peerleaders,Explanation, [[Get a list of peer leaders from the named partitioning]]}

 /* occurrences of peerleader */

{peerleader,Explanation, [[Get the assigned peer-leader of the partition to which we belong]]}

 /* occurrences of peers */

{peers,Explanation, [[Get a list of peers (not including ourself) from the partition to which we belong]]}

 /* occurrences of on */

{on,Explanation, [[Convert an exact date/time to an integer system representation]]}

 /* occurrences of now */

{now,Explanation, [[Convert the current time into system representation]]}

 /* occurrences of ldapvalue */

{ldapvalue,Explanation, [[Extract the first matching named value from ldap]]}

 /* occurrences of ldaplist */

{ldaplist,Explanation, [[Extract all named values from multiple ldap records]]}

 /* occurrences of ldaparray */

{ldaparray,Explanation, [[Extract all values from an ldap record]]}

 /* occurrences of lastnode */

{lastnode,Explanation, [[Extract the last of a separated string, e.g. filename from a path]]}

 /* occurrences of isvariable */

{isvariable,Explanation, [[True if the named variable is defined]]}

 /* occurrences of isplain */

{isplain,Explanation, [[True if the named object is a plain/regular file]]}

 /* occurrences of isnewerthan */

{isnewerthan,Explanation, [[True if arg1 is newer (modified later) than arg2 (mtime)]]}

 /* occurrences of islink */

{islink,Explanation, [[True if the named object is a symbolic link]]}

 /* occurrences of islessthan */

{islessthan,Explanation, [[True if arg1 is numerically less than arg2, else compare strings like NOT strcmp]]}

 /* occurrences of isgreaterthan */

{isgreaterthan,Explanation, [[True if arg1 is numerically greater than arg2, else compare strings like strcmp]]}

 /* occurrences of isdir */

{isdir,Explanation, [[True if the named object is a directory]]}

 /* occurrences of irange */

{irange,Explanation, [[Define a range of integer values for cfengine internal use]]}

 /* occurrences of iprange */

{iprange,Explanation, [[True if the current host lies in the range of IP addresses specified]]}

 /* occurrences of hostinnetgroup */

{hostinnetgroup,Explanation, [[True if the current host is in the named netgroup]]}

 /* occurrences of hostrange */

{hostrange,Explanation, [[True if the current host lies in the range of enumerated hostnames specified]]}

 /* occurrences of hashmatch */

{hashmatch,Explanation, [[Compute the hash of arg1, of type arg2 and test if it matches the value in arg 3]]}

 /* occurrences of hash */

{hash,Explanation, [[Return the hash of arg1, type arg2 and assign to a variable]]}

 /* occurrences of groupexists */

{groupexists,Explanation, [[True if group or numerical id exists on this host]]}

 /* occurrences of getuid */

{getuid,Explanation, [[Return the integer user id of the named user on this host]]}

 /* occurrences of getgid */

{getgid,Explanation, [[Return the integer group id of the named group on this host]]}

 /* occurrences of getindices */

{getindices,Explanation, [[Get a list of keys to the array whose id is the argument and assign to variable]]}

 /* occurrences of filesexist */

{filesexist,Explanation, [[True if the named list of files can ALL be accessed]]}

 /* occurrences of fileexists */

{fileexists,Explanation, [[True if the named file can be accessed]]}

 /* occurrences of execresult */

{execresult,Explanation, [[Execute named command and assign output to variable]]}

 /* occurrences of classmatch */

{classmatch,Explanation, [[True if the regular expression matches any currently defined class]]}

 /* occurrences of classify */

{classify,Explanation, [[True if the canonicalization of the argument is a currently defined class]]}

 /* occurrences of changedbefore */

{changedbefore,Explanation, [[True if arg1 was changed before arg2 (ctime)]]}

 /* occurrences of canonify */

{canonify,Explanation, [[Convert an abitrary string into a legal class name]]}

 /* occurrences of ago */

{ago,Explanation, [[Convert a time relative to now to an integer system representation]]}

 /* occurrences of accumulated */

{accumulated,Explanation, [[Convert an accumulated amount of time into a system representation]]}

 /* occurrences of accessedbefore */

{accessedbefore,Explanation, [[True if arg1 was accessed before arg2 (atime)]]}

 /* occurrences of class */

{class,Explanation, [[A boolean returned by certain functions in classes promises]]}

 /* occurrences of policy */

{policy,Explanation, [[The policy for (dis)allowing redefinition of variables matching free,overridable,constant]]}

 /* occurrences of rlist */

{rlist,Explanation, [[A list of real numbers matching -9.99999E100,9.99999E100]]}

 /* occurrences of ilist */

{ilist,Explanation, [[A list of integers matching -99999999999,9999999999]]}

 /* occurrences of slist */

{slist,promise_webserver_cf_106, "promises.cf.html#promise_webserver_cf_106"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_106"}

 /* occurrences of slist */

{slist,promise_webserver_cf_102, "promises.cf.html#promise_webserver_cf_102"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_102"}

 /* occurrences of slist */

{slist,promise_webserver_cf_23, "promises.cf.html#promise_webserver_cf_23"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of slist */

{slist,promise_library_cf_105, "promises.cf.html#promise_library_cf_105"}
{slist,used_in_promise, "promises.cf.html#promise_library_cf_105"}

 /* occurrences of slist */

{slist,promise_site_cf_275, "promises.cf.html#promise_site_cf_275"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_275"}

 /* occurrences of slist */

{slist,promise_site_cf_90, "promises.cf.html#promise_site_cf_90"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_90"}

 /* occurrences of slist */

{slist,promise_site_cf_40, "promises.cf.html#promise_site_cf_40"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_40"}

 /* occurrences of slist */

{slist,Explanation, [[A list of scalar strings matching ]]}

 /* occurrences of real */

{real,Explanation, [[A scalar real number matching -9.99999E100,9.99999E100]]}

 /* occurrences of int */

{int,Explanation, [[A scalar integer matching -99999999999,9999999999]]}

 /* occurrences of string */

{string,promise_knowledge_cf_12, "promises.cf.html#promise_knowledge_cf_12"}
{string,used_in_promise, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of string */

{string,promise_webserver_cf_17, "promises.cf.html#promise_webserver_cf_17"}
{string,used_in_promise, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of string */

{string,promise_webserver_cf_11, "promises.cf.html#promise_webserver_cf_11"}
{string,used_in_promise, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of string */

{string,promise_laptop_cf_6, "promises.cf.html#promise_laptop_cf_6"}
{string,used_in_promise, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of string */

{string,promise_site_cf_274, "promises.cf.html#promise_site_cf_274"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_274"}

 /* occurrences of string */

{string,promise_site_cf_17, "promises.cf.html#promise_site_cf_17"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_17"}

 /* occurrences of string */

{string,promise_site_cf_13, "promises.cf.html#promise_site_cf_13"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of string */

{string,promise_update_cf_7, "promises.cf.html#promise_update_cf_7"}
{string,used_in_promise, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of string */

{string,Explanation, [[A scalar string matching ]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_41, [[Generate knowledge associative graphs]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_41, "promises.cf.html#promise_knowledge_cf_41"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_41"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_34, [[Generate config reports]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_34, "promises.cf.html#promise_knowledge_cf_34"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_34"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_24, [[Make sure knowledge files are accessible to webserver]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of comment */

{comment,promise_site_cf_157, [[Install patches]]}

 /* occurrences of comment */

{comment,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of comment */

{comment,promise_site_cf_148, [[Update the locate database]]}

 /* occurrences of comment */

{comment,promise_site_cf_148, "promises.cf.html#promise_site_cf_148"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of comment */

{comment,promise_site_cf_70, [[This is inaccessible in new suse after cd opened/closed]]}

 /* occurrences of comment */

{comment,promise_site_cf_70, "promises.cf.html#promise_site_cf_70"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_70"}

 /* occurrences of comment */

{comment,promise_site_cf_58, [[Check if there are still promises about cfengine 2 that need removing]]}

 /* occurrences of comment */

{comment,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of handle */

{handle,free_disk_watch, "promises.cf.html#free_disk_watch"}
{handle,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of handle */

{handle,free_memory_watch, "promises.cf.html#free_memory_watch"}
{handle,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of handle */

{handle,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{handle,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of ifvarclass */

{ifvarclass,promise_site_cf_293, "promises.cf.html#promise_site_cf_293"}
{ifvarclass,used_in_promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of ifvarclass */

{ifvarclass,promise_site_cf_139, "promises.cf.html#promise_site_cf_139"}
{ifvarclass,used_in_promise, "promises.cf.html#promise_site_cf_139"}

 /* occurrences of classes */

{classes,promise_webserver_cf_74, "promises.cf.html#promise_webserver_cf_74"}
{classes,used_in_promise, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of classes */

{classes,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{classes,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of classes */

{classes,promise_site_cf_98, "promises.cf.html#promise_site_cf_98"}
{classes,used_in_promise, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of classes */

{classes,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{classes,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of classes */

{classes,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{classes,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of action */

{action,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{action,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of action */

{action,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{action,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of action */

{action,promise_library_cf_165, "promises.cf.html#promise_library_cf_165"}
{action,used_in_promise, "promises.cf.html#promise_library_cf_165"}

 /* occurrences of action */

{action,free_disk_watch, "promises.cf.html#free_disk_watch"}
{action,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of action */

{action,promise_site_cf_148, "promises.cf.html#promise_site_cf_148"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of action */

{action,promise_site_cf_141, "promises.cf.html#promise_site_cf_141"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_141"}

 /* occurrences of action */

{action,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of action */

{action,promise_site_cf_48, "promises.cf.html#promise_site_cf_48"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of action */

{action,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{action,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of action */

{action,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{action,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of extraction_regex */

{extraction_regex,free_disk_watch, "promises.cf.html#free_disk_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,free_memory_watch, "promises.cf.html#free_memory_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,Explanation, [[Regular expression that should contain a single backreference for extracting a value]]}

 /* occurrences of extraction_regex */

{extraction_regex,Explanation, [[Regular expression that should contain a single backreference for extracting a value]]}

 /* occurrences of select_line_number */

{select_line_number,Explanation, [[Read from the n-th line of the output (fixed format)]]}

 /* occurrences of select_line_number */

{select_line_number,Explanation, [[Read from the n-th line of the output (fixed format)]]}

 /* occurrences of match_value */

{match_value,free_disk_watch, "promises.cf.html#free_disk_watch"}
{match_value,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of match_value */

{match_value,free_memory_watch, "promises.cf.html#free_memory_watch"}
{match_value,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of match_value */

{match_value,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{match_value,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of match_value */

{match_value,Explanation, [[Criteria for extracting the measurement from a datastream]]}

 /* occurrences of units */

{units,free_disk_watch, "promises.cf.html#free_disk_watch"}
{units,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of units */

{units,free_memory_watch, "promises.cf.html#free_memory_watch"}
{units,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of units */

{units,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{units,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of units */

{units,Explanation, [[The engineering dimensions of this value or a note about its intent used in plots]]}

 /* occurrences of history_type */

{history_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{history_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of history_type */

{history_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{history_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of history_type */

{history_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{history_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of history_type */

{history_type,Explanation, [[Whether the data can be seen as a time-series or just an isolated value]]}

 /* occurrences of data_type */

{data_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{data_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of data_type */

{data_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{data_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of data_type */

{data_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{data_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of data_type */

{data_type,Explanation, [[The datatype being collected.]]}

 /* occurrences of stream_type */

{stream_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{stream_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of stream_type */

{stream_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{stream_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of stream_type */

{stream_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{stream_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of stream_type */

{stream_type,Explanation, [[The datatype being collected.]]}

 /* occurrences of path_root */

{path_root,Explanation, [[Base path of the occurrence when locating file (replaced by web_root)]]}

 /* occurrences of web_root */

{web_root,Explanation, [[Base URL of the occurrence when rendered as a web-URL (replaces path_root)]]}

 /* occurrences of representation */

{representation,Explanation, [[How to interpret the promiser string e.g. actual data or reference to data]]}

 /* occurrences of represents */

{represents,Explanation, [[List of subtopics that explains the type(s) of information represented by the occurrence]]}

 /* occurrences of occurrences */

{occurrences,promise_library_cf_194, "promises.cf.html#promise_library_cf_194"}
{occurrences,used_in_promise, "promises.cf.html#promise_library_cf_194"}

 /* occurrences of associates */

{associates,Explanation, [[List of associated topics by this forward relationship]]}

 /* occurrences of associates */

{associates,Explanation, [[List of associated topics by this forward relationship]]}

 /* occurrences of backward_relationship */

{backward_relationship,Explanation, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of backward_relationship */

{backward_relationship,Explanation, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of forward_relationship */

{forward_relationship,Explanation, [[Name of forward association between promiser topic and associates]]}

 /* occurrences of association */

{association,Explanation, [[Declare associated topics]]}

 /* occurrences of authorize */

{authorize,promise_site_cf_366, "promises.cf.html#promise_site_cf_366"}
{authorize,used_in_promise, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of authorize */

{authorize,Explanation, [[List of public-key user names that are allowed to activate the promised class during remote agent activation]]}

 /* occurrences of resource_type */

{resource_type,Explanation, [[The type of object being granted access. The default is access to files.]]}

 /* occurrences of ifencrypted */

{ifencrypted,Explanation, [[true/false whether the current file access promise is conditional on the connection from the client being encrypted]]}

 /* occurrences of maproot */

{maproot,Explanation, [[List of host names or IP addresses to grant full read-privilege on the server]]}

 /* occurrences of deny */

{deny,Explanation, [[List of host names or IP addresses to deny access to file objects]]}

 /* occurrences of admit */

{admit,promise_site_cf_362, "promises.cf.html#promise_site_cf_362"}
{admit,used_in_promise, "promises.cf.html#promise_site_cf_362"}

 /* occurrences of admit */

{admit,promise_site_cf_358, "promises.cf.html#promise_site_cf_358"}
{admit,used_in_promise, "promises.cf.html#promise_site_cf_358"}

 /* occurrences of admit */

{admit,Explanation, [[List of host names or IP addresses to grant access to file objects]]}

 /* occurrences of scan_arrivals */

{scan_arrivals,Explanation, [[true/false generate pseudo-periodic disk change arrival distribution]]}

 /* occurrences of scan_arrivals */

{scan_arrivals,Explanation, [[true/false generate pseudo-periodic disk change arrival distribution]]}

 /* occurrences of sensible_count */

{sensible_count,Explanation, [[Minimum number of files that should be defined on a sensible-looking storage device]]}

 /* occurrences of sensible_count */

{sensible_count,Explanation, [[Minimum number of files that should be defined on a sensible-looking storage device]]}

 /* occurrences of sensible_size */

{sensible_size,Explanation, [[Minimum size in bytes that should be used on a sensible-looking storage device]]}

 /* occurrences of freespace */

{freespace,Explanation, [[Absolute or percentage minimum disk space that should be available before warning]]}

 /* occurrences of freespace */

{freespace,Explanation, [[Absolute or percentage minimum disk space that should be available before warning]]}

 /* occurrences of check_foreign */

{check_foreign,Explanation, [[true/false verify storage that is mounted from a foreign system on this host]]}

 /* occurrences of volume */

{volume,Explanation, [[Criteria for monitoring/probing mounted volumes]]}

 /* occurrences of unmount */

{unmount,Explanation, [[true/false unmount a previously mounted filesystem]]}

 /* occurrences of unmount */

{unmount,Explanation, [[true/false unmount a previously mounted filesystem]]}

 /* occurrences of edit_fstab */

{edit_fstab,Explanation, [[true/false add or remove entries to the file system table ("fstab")]]}

 /* occurrences of edit_fstab */

{edit_fstab,Explanation, [[true/false add or remove entries to the file system table ("fstab")]]}

 /* occurrences of mount_options */

{mount_options,Explanation, [[List of option strings to add to the file system table ("fstab")]]}

 /* occurrences of mount_options */

{mount_options,Explanation, [[List of option strings to add to the file system table ("fstab")]]}

 /* occurrences of mount_server */

{mount_server,Explanation, [[Hostname or IP or remote file system server]]}

 /* occurrences of mount_server */

{mount_server,Explanation, [[Hostname or IP or remote file system server]]}

 /* occurrences of mount_source */

{mount_source,Explanation, [[Path of remote file system to mount]]}

 /* occurrences of mount_type */

{mount_type,Explanation, [[Protocol type of remote file system]]}

 /* occurrences of mount */

{mount,Explanation, [[Criteria for mounting foreign file systems]]}

 /* occurrences of restart_class */

{restart_class,promise_webserver_cf_38, "promises.cf.html#promise_webserver_cf_38"}
{restart_class,used_in_promise, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of restart_class */

{restart_class,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{restart_class,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_31, "promises.cf.html#promise_update_cf_31"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_30, "promises.cf.html#promise_update_cf_30"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_29, "promises.cf.html#promise_update_cf_29"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of restart_class */

{restart_class,Explanation, [[A class to be set if the process is not running, so that a command: rule can be referred to restart the process]]}

 /* occurrences of process_result */

{process_result,Explanation, [[Boolean class expression returning the logical combination of classes set by a process selection test]]}

 /* occurrences of process_result */

{process_result,Explanation, [[Boolean class expression returning the logical combination of classes set by a process selection test]]}

 /* occurrences of threads */

{threads,Explanation, [[Range of integers matching the threads (NLWP) field of a process]]}

 /* occurrences of priority */

{priority,Explanation, [[Range of integers matching the priority field (PRI/NI) of a process]]}

 /* occurrences of priority */

{priority,Explanation, [[Range of integers matching the priority field (PRI/NI) of a process]]}

 /* occurrences of tty */

{tty,Explanation, [[Regular expression matching the tty field of a process]]}

 /* occurrences of tty */

{tty,Explanation, [[Regular expression matching the tty field of a process]]}

 /* occurrences of command */

{command,Explanation, [[Regular expression matching the command/cmd field of a process]]}

 /* occurrences of stime_range */

{stime_range,Explanation, [[Range of integers matching the start time of a process]]}

 /* occurrences of ttime_range */

{ttime_range,Explanation, [[Range of integers matching the total elapsed time of a process]]}

 /* occurrences of ttime_range */

{ttime_range,Explanation, [[Range of integers matching the total elapsed time of a process]]}

 /* occurrences of status */

{status,Explanation, [[Regular expression matching the status field of a process]]}

 /* occurrences of status */

{status,Explanation, [[Regular expression matching the status field of a process]]}

 /* occurrences of vsize */

{vsize,Explanation, [[Range of integers matching the virtual memory size of a process]]}

 /* occurrences of vsize */

{vsize,Explanation, [[Range of integers matching the virtual memory size of a process]]}

 /* occurrences of rsize */

{rsize,Explanation, [[Range of integers matching the resident memory size of a process]]}

 /* occurrences of rsize */

{rsize,Explanation, [[Range of integers matching the resident memory size of a process]]}

 /* occurrences of pgid */

{pgid,Explanation, [[Range of integers matching the parent group id of a process]]}

 /* occurrences of pgid */

{pgid,Explanation, [[Range of integers matching the parent group id of a process]]}

 /* occurrences of ppid */

{ppid,Explanation, [[Range of integers matching the parent process id of a process]]}

 /* occurrences of ppid */

{ppid,Explanation, [[Range of integers matching the parent process id of a process]]}

 /* occurrences of pid */

{pid,Explanation, [[Range of integers matching the process id of a process]]}

 /* occurrences of pid */

{pid,Explanation, [[Range of integers matching the process id of a process]]}

 /* occurrences of process_owner */

{process_owner,Explanation, [[List of regexes matching the user of a process]]}

 /* occurrences of process_select */

{process_select,Explanation, [[Criteria for matching processes in the system process table]]}

 /* occurrences of out_of_range_define */

{out_of_range_define,Explanation, [[List of classes to define if the matches are out of range]]}

 /* occurrences of out_of_range_define */

{out_of_range_define,Explanation, [[List of classes to define if the matches are out of range]]}

 /* occurrences of in_range_define */

{in_range_define,Explanation, [[List of classes to define if the matches are in range]]}

 /* occurrences of in_range_define */

{in_range_define,Explanation, [[List of classes to define if the matches are in range]]}

 /* occurrences of match_range */

{match_range,Explanation, [[Integer range for acceptable number of matches for this process]]}

 /* occurrences of process_count */

{process_count,Explanation, [[Criteria for constraining the number of processes matching other criteria]]}

 /* occurrences of process_stop */

{process_stop,promise_webserver_cf_44, "promises.cf.html#promise_webserver_cf_44"}
{process_stop,used_in_promise, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of process_stop */

{process_stop,Explanation, [[A command used to stop a running process]]}

 /* occurrences of signals */

{signals,promise_site_cf_120, "promises.cf.html#promise_site_cf_120"}
{signals,used_in_promise, "promises.cf.html#promise_site_cf_120"}

 /* occurrences of signals */

{signals,promise_site_cf_77, "promises.cf.html#promise_site_cf_77"}
{signals,used_in_promise, "promises.cf.html#promise_site_cf_77"}

 /* occurrences of signals */

{signals,Explanation, [[A list of menu options representing signals to be sent to a process]]}

 /* occurrences of package_select */

{package_select,Explanation, [[A criterion for first acceptable match relative to "package_version"]]}

 /* occurrences of package_architectures */

{package_architectures,Explanation, [[Select the architecture for package selection]]}

 /* occurrences of package_version */

{package_version,Explanation, [[Version reference point for determining promised version]]}

 /* occurrences of package_name_convention */

{package_name_convention,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_name_convention,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_name_convention */

{package_name_convention,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_name_convention,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_name_convention */

{package_name_convention,Explanation, [[This is how the package manager expects the file to be referred to, e.g. $(name).$(arch)]]}

 /* occurrences of package_name_convention */

{package_name_convention,Explanation, [[This is how the package manager expects the file to be referred to, e.g. $(name).$(arch)]]}

 /* occurrences of package_noverify_returncode */

{package_noverify_returncode,Explanation, [[Integer return code indicating package verification failure]]}

 /* occurrences of package_noverify_returncode */

{package_noverify_returncode,Explanation, [[Integer return code indicating package verification failure]]}

 /* occurrences of package_noverify_regex */

{package_noverify_regex,Explanation, [[Regular expression to match verification failure output]]}

 /* occurrences of package_noverify_regex */

{package_noverify_regex,Explanation, [[Regular expression to match verification failure output]]}

 /* occurrences of package_verify_command */

{package_verify_command,Explanation, [[Command to verify the correctness of an installed package]]}

 /* occurrences of package_verify_command */

{package_verify_command,Explanation, [[Command to verify the correctness of an installed package]]}

 /* occurrences of package_patch_command */

{package_patch_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_patch_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_patch_command */

{package_patch_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_patch_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_patch_command */

{package_patch_command,Explanation, [[Command to update to the latest patch release of an installed package]]}

 /* occurrences of package_patch_command */

{package_patch_command,Explanation, [[Command to update to the latest patch release of an installed package]]}

 /* occurrences of package_update_command */

{package_update_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_update_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_update_command */

{package_update_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_update_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_update_command */

{package_update_command,Explanation, [[Command to update to the latest version a currently installed package]]}

 /* occurrences of package_update_command */

{package_update_command,Explanation, [[Command to update to the latest version a currently installed package]]}

 /* occurrences of package_delete_command */

{package_delete_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_delete_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_delete_command */

{package_delete_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_delete_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_delete_command */

{package_delete_command,Explanation, [[Command to remove a package from the system]]}

 /* occurrences of package_delete_command */

{package_delete_command,Explanation, [[Command to remove a package from the system]]}

 /* occurrences of package_add_command */

{package_add_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_add_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_add_command */

{package_add_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_add_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_add_command */

{package_add_command,Explanation, [[Command to install a package to the system]]}

 /* occurrences of package_add_command */

{package_add_command,Explanation, [[Command to install a package to the system]]}

 /* occurrences of package_installed_regex */

{package_installed_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_installed_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_installed_regex */

{package_installed_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_installed_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_installed_regex */

{package_installed_regex,Explanation, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_installed_regex */

{package_installed_regex,Explanation, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_arch_regex */

{package_arch_regex,Explanation, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_arch_regex */

{package_arch_regex,Explanation, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_name_regex */

{package_name_regex,Explanation, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_name_regex */

{package_name_regex,Explanation, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_version_regex */

{package_version_regex,Explanation, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_version_regex */

{package_version_regex,Explanation, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_patch_installed_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_patch_installed_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,Explanation, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,Explanation, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_patch_arch_regex */

{package_patch_arch_regex,Explanation, [[Regular expression with one backreference to extract update architecture string]]}

 /* occurrences of package_patch_arch_regex */

{package_patch_arch_regex,Explanation, [[Regular expression with one backreference to extract update architecture string]]}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_patch_name_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_patch_name_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,Explanation, [[Regular expression with one backreference to extract update name string]]}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,Explanation, [[Regular expression with one backreference to extract update name string]]}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_patch_version_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_patch_version_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,Explanation, [[Regular expression with one backreference to extract update version string]]}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,Explanation, [[Regular expression with one backreference to extract update version string]]}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_patch_list_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_patch_list_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,Explanation, [[Command to obtain a list of available patches or updates]]}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,Explanation, [[Command to obtain a list of available patches or updates]]}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_list_arch_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_list_arch_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,Explanation, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,Explanation, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_list_name_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_list_name_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,Explanation, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,Explanation, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_list_version_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_list_version_regex,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,Explanation, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,Explanation, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_list_command */

{package_list_command,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_list_command,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_list_command */

{package_list_command,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_list_command,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_list_command */

{package_list_command,Explanation, [[Command to obtain a list of installed packages]]}

 /* occurrences of package_list_command */

{package_list_command,Explanation, [[Command to obtain a list of installed packages]]}

 /* occurrences of package_file_repositories */

{package_file_repositories,Explanation, [[A list of machine-local directories to search for packages]]}

 /* occurrences of package_changes */

{package_changes,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_changes,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_changes */

{package_changes,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_changes,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_changes */

{package_changes,Explanation, [[Menu option - whether to group packages into a single aggregate command]]}

 /* occurrences of package_method */

{package_method,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_method,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_method */

{package_method,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_method,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_method */

{package_method,Explanation, [[Criteria for installation and verification]]}

 /* occurrences of package_policy */

{package_policy,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{package_policy,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of package_policy */

{package_policy,promise_site_cf_157, "promises.cf.html#promise_site_cf_157"}
{package_policy,used_in_promise, "promises.cf.html#promise_site_cf_157"}

 /* occurrences of package_policy */

{package_policy,Explanation, [[Criteria for package installation/upgrade on the current system]]}

 /* occurrences of usebundle */

{usebundle,Explanation, [[Specify the name of a bundle to run as a parameterized method]]}

 /* occurrences of ipv6_address */

{ipv6_address,Explanation, [[IPv6 address for the interface]]}

 /* occurrences of ipv4_netmask */

{ipv4_netmask,Explanation, [[Netmask for the interface]]}

 /* occurrences of ipv4_address */

{ipv4_address,Explanation, [[IPv4 address for the interface]]}

 /* occurrences of tcp_ip */

{tcp_ip,Explanation, [[Interface tcp/ip properties]]}

 /* occurrences of delete_if_not_contains_from_list */

{delete_if_not_contains_from_list,Explanation, [[Delete line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of delete_if_not_contains_from_list */

{delete_if_not_contains_from_list,Explanation, [[Delete line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of delete_if_contains_from_list */

{delete_if_contains_from_list,Explanation, [[Delete line if a regex in the list match a line fragment]]}

 /* occurrences of delete_if_contains_from_list */

{delete_if_contains_from_list,Explanation, [[Delete line if a regex in the list match a line fragment]]}

 /* occurrences of delete_if_not_match_from_list */

{delete_if_not_match_from_list,Explanation, [[Delete line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of delete_if_not_match_from_list */

{delete_if_not_match_from_list,Explanation, [[Delete line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of delete_if_match_from_list */

{delete_if_match_from_list,Explanation, [[Delete line if it fully matches a regex in the list]]}

 /* occurrences of delete_if_match_from_list */

{delete_if_match_from_list,Explanation, [[Delete line if it fully matches a regex in the list]]}

 /* occurrences of delete_if_not_startwith_from_list */

{delete_if_not_startwith_from_list,Explanation, [[Delete line if it DOES NOT start with a string in the list]]}

 /* occurrences of delete_if_not_startwith_from_list */

{delete_if_not_startwith_from_list,Explanation, [[Delete line if it DOES NOT start with a string in the list]]}

 /* occurrences of delete_if_startwith_from_list */

{delete_if_startwith_from_list,Explanation, [[Delete line if it starts with a string in the list]]}

 /* occurrences of delete_select */

{delete_select,Explanation, [[Delete only if lines pass filter criteria]]}

 /* occurrences of not_matching */

{not_matching,Explanation, [[true/false negate match criterion]]}

 /* occurrences of occurrences */

{occurrences,Explanation, [[Menu option to replace all occurrences or just first (NB the latter is non-convergent)]]}

 /* occurrences of occurrences */

{occurrences,Explanation, [[Menu option to replace all occurrences or just first (NB the latter is non-convergent)]]}

 /* occurrences of replace_value */

{replace_value,promise_library_cf_194, "promises.cf.html#promise_library_cf_194"}
{replace_value,used_in_promise, "promises.cf.html#promise_library_cf_194"}

 /* occurrences of replace_value */

{replace_value,Explanation, [[Value used to replace regular expression matches in search]]}

 /* occurrences of replace_with */

{replace_with,promise_library_cf_194, "promises.cf.html#promise_library_cf_194"}
{replace_with,used_in_promise, "promises.cf.html#promise_library_cf_194"}

 /* occurrences of replace_with */

{replace_with,Explanation, [[Search-replace pattern]]}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,Explanation, [[true/false allow blank fields in a line (do not purge)]]}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,Explanation, [[true/false allow blank fields in a line (do not purge)]]}

 /* occurrences of extend_fields */

{extend_fields,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{extend_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of extend_fields */

{extend_fields,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{extend_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of extend_fields */

{extend_fields,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{extend_fields,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of extend_fields */

{extend_fields,Explanation, [[true/false add new fields at end of line if necessary to complete edit]]}

 /* occurrences of field_operation */

{field_operation,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{field_operation,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of field_operation */

{field_operation,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{field_operation,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of field_operation */

{field_operation,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{field_operation,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of field_operation */

{field_operation,Explanation, [[Menu option policy for editing subfields]]}

 /* occurrences of field_operation */

{field_operation,Explanation, [[Menu option policy for editing subfields]]}

 /* occurrences of field_value */

{field_value,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{field_value,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of field_value */

{field_value,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{field_value,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of field_value */

{field_value,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{field_value,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of field_value */

{field_value,Explanation, [[Set field value to a fixed value]]}

 /* occurrences of field_value */

{field_value,Explanation, [[Set field value to a fixed value]]}

 /* occurrences of value_separator */

{value_separator,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{value_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of value_separator */

{value_separator,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{value_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of value_separator */

{value_separator,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{value_separator,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of value_separator */

{value_separator,Explanation, [[Character separator for subfields inside the selected field]]}

 /* occurrences of value_separator */

{value_separator,Explanation, [[Character separator for subfields inside the selected field]]}

 /* occurrences of select_field */

{select_field,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{select_field,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of select_field */

{select_field,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{select_field,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of select_field */

{select_field,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{select_field,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of select_field */

{select_field,Explanation, [[Integer index of the field required 1..n]]}

 /* occurrences of select_field */

{select_field,Explanation, [[Integer index of the field required 1..n]]}

 /* occurrences of field_separator */

{field_separator,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{field_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of field_separator */

{field_separator,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{field_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of field_separator */

{field_separator,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{field_separator,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of field_separator */

{field_separator,Explanation, [[The regular expression used to separate fields in a line]]}

 /* occurrences of edit_field */

{edit_field,promise_webserver_cf_135, "promises.cf.html#promise_webserver_cf_135"}
{edit_field,used_in_promise, "promises.cf.html#promise_webserver_cf_135"}

 /* occurrences of edit_field */

{edit_field,promise_webserver_cf_128, "promises.cf.html#promise_webserver_cf_128"}
{edit_field,used_in_promise, "promises.cf.html#promise_webserver_cf_128"}

 /* occurrences of edit_field */

{edit_field,promise_library_cf_113, "promises.cf.html#promise_library_cf_113"}
{edit_field,used_in_promise, "promises.cf.html#promise_library_cf_113"}

 /* occurrences of edit_field */

{edit_field,Explanation, [[Edit line-based file as matrix of fields]]}

 /* occurrences of expand_scalars */

{expand_scalars,Explanation, [[Expand any unexpanded variables]]}

 /* occurrences of insert_if_not_contains_from_list */

{insert_if_not_contains_from_list,Explanation, [[Insert line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of insert_if_not_contains_from_list */

{insert_if_not_contains_from_list,Explanation, [[Insert line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of insert_if_contains_from_list */

{insert_if_contains_from_list,Explanation, [[Insert line if a regex in the list match a line fragment]]}

 /* occurrences of insert_if_contains_from_list */

{insert_if_contains_from_list,Explanation, [[Insert line if a regex in the list match a line fragment]]}

 /* occurrences of insert_if_not_match_from_list */

{insert_if_not_match_from_list,Explanation, [[Insert line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of insert_if_not_match_from_list */

{insert_if_not_match_from_list,Explanation, [[Insert line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of insert_if_match_from_list */

{insert_if_match_from_list,Explanation, [[Insert line if it fully matches a regex in the list]]}

 /* occurrences of insert_if_match_from_list */

{insert_if_match_from_list,Explanation, [[Insert line if it fully matches a regex in the list]]}

 /* occurrences of insert_if_not_startwith_from_list */

{insert_if_not_startwith_from_list,Explanation, [[Insert line if it DOES NOT start with a string in the list]]}

 /* occurrences of insert_if_not_startwith_from_list */

{insert_if_not_startwith_from_list,Explanation, [[Insert line if it DOES NOT start with a string in the list]]}

 /* occurrences of insert_if_startwith_from_list */

{insert_if_startwith_from_list,Explanation, [[Insert line if it starts with a string in the list]]}

 /* occurrences of insert_select */

{insert_select,Explanation, [[Insert only if lines pass filter criteria]]}

 /* occurrences of insert_type */

{insert_type,Explanation, [[Type of object the promiser string refers to (default literal)]]}

 /* occurrences of first_last */

{first_last,Explanation, [[Menu option, choose first or last occurrence of match in file]]}

 /* occurrences of before_after */

{before_after,Explanation, [[Menu option, point cursor before of after matched line]]}

 /* occurrences of before_after */

{before_after,Explanation, [[Menu option, point cursor before of after matched line]]}

 /* occurrences of select_line_matching */

{select_line_matching,free_disk_watch, "promises.cf.html#free_disk_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,free_memory_watch, "promises.cf.html#free_memory_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,Explanation, [[Regular expression for matching line location]]}

 /* occurrences of select_line_matching */

{select_line_matching,Explanation, [[Regular expression for matching file line location]]}

 /* occurrences of location */

{location,Explanation, [[Specify where in a file an insertion will be made]]}

 /* occurrences of specify_inherit_aces */

{specify_inherit_aces,Explanation, [[Native settings for access control entry]]}

 /* occurrences of aces */

{aces,Explanation, [[Native settings for access control entry]]}

 /* occurrences of acl_directory_inherit */

{acl_directory_inherit,Explanation, [[Access control list type for the affected file system]]}

 /* occurrences of acl_type */

{acl_type,Explanation, [[Access control list type for the affected file system]]}

 /* occurrences of acl_method */

{acl_method,Explanation, [[Editing method for access control list]]}

 /* occurrences of acl */

{acl,Explanation, [[Criteria for access control lists on file]]}

 /* occurrences of pathtype */

{pathtype,Explanation, [[Menu option for interpreting promiser file object]]}

 /* occurrences of transformer */

{transformer,Explanation, [[Shell command (with full path) used to transform current file]]}

 /* occurrences of move_obstructions */

{move_obstructions,Explanation, [[true/false whether to move obstructions to file-object creation]]}

 /* occurrences of create */

{create,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{create,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of create */

{create,Explanation, [[true/false whether to create non-existing file]]}

 /* occurrences of touch */

{touch,Explanation, [[true/false whether to touch time stamps on file]]}

 /* occurrences of rmdeadlinks */

{rmdeadlinks,Explanation, [[true/false remove links that point to nowhere]]}

 /* occurrences of rmdeadlinks */

{rmdeadlinks,Explanation, [[true/false remove links that point to nowhere]]}

 /* occurrences of traverse_links */

{traverse_links,Explanation, [[true/false traverse symbolic links to directories (false)]]}

 /* occurrences of traverse_links */

{traverse_links,Explanation, [[true/false traverse symbolic links to directories (false)]]}

 /* occurrences of xdev */

{xdev,Explanation, [[true/false exclude directories that are on different devices]]}

 /* occurrences of xdev */

{xdev,Explanation, [[true/false exclude directories that are on different devices]]}

 /* occurrences of depth */

{depth,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{depth,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of depth */

{depth,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{depth,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of depth */

{depth,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{depth,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of depth */

{depth,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{depth,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of depth */

{depth,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{depth,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of depth */

{depth,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{depth,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of depth */

{depth,Explanation, [[Maximum depth level for search]]}

 /* occurrences of depth */

{depth,Explanation, [[Maximum depth level for search]]}

 /* occurrences of include_basedir */

{include_basedir,Explanation, [[true/false include the start/root dir of the search results]]}

 /* occurrences of include_basedir */

{include_basedir,Explanation, [[true/false include the start/root dir of the search results]]}

 /* occurrences of exclude_dirs */

{exclude_dirs,Explanation, [[List of regexes of directory names NOT to include in depth search]]}

 /* occurrences of exclude_dirs */

{exclude_dirs,Explanation, [[List of regexes of directory names NOT to include in depth search]]}

 /* occurrences of include_dirs */

{include_dirs,Explanation, [[List of regexes of directory names to include in depth search]]}

 /* occurrences of depth_search */

{depth_search,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{depth_search,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of depth_search */

{depth_search,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{depth_search,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of depth_search */

{depth_search,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{depth_search,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of depth_search */

{depth_search,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{depth_search,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of depth_search */

{depth_search,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{depth_search,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of depth_search */

{depth_search,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{depth_search,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of depth_search */

{depth_search,Explanation, [[Criteria for file depth searches]]}

 /* occurrences of empty_file_before_editing */

{empty_file_before_editing,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{empty_file_before_editing,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of empty_file_before_editing */

{empty_file_before_editing,Explanation, [[Baseline memory model of file to zero/empty before commencing promised edits]]}

 /* occurrences of empty_file_before_editing */

{empty_file_before_editing,Explanation, [[Baseline memory model of file to zero/empty before commencing promised edits]]}

 /* occurrences of max_file_size */

{max_file_size,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{max_file_size,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of max_file_size */

{max_file_size,Explanation, [[Do not edit files bigger than this number of bytes]]}

 /* occurrences of edit_backup */

{edit_backup,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{edit_backup,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of edit_backup */

{edit_backup,Explanation, [[Menu option for backup policy on edit changes]]}

 /* occurrences of edit_defaults */

{edit_defaults,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{edit_defaults,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of edit_defaults */

{edit_defaults,Explanation, [[Default promise details for file edits]]}

 /* occurrences of edit_xml */

{edit_xml,Explanation, [[XML editing model for file]]}

 /* occurrences of edit_line */

{edit_line,promise_webserver_cf_74, "promises.cf.html#promise_webserver_cf_74"}
{edit_line,used_in_promise, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of edit_line */

{edit_line,promise_site_cf_106, "promises.cf.html#promise_site_cf_106"}
{edit_line,used_in_promise, "promises.cf.html#promise_site_cf_106"}

 /* occurrences of edit_line */

{edit_line,promise_site_cf_66, "promises.cf.html#promise_site_cf_66"}
{edit_line,used_in_promise, "promises.cf.html#promise_site_cf_66"}

 /* occurrences of edit_line */

{edit_line,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{edit_line,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of edit_line */

{edit_line,Explanation, [[Line editing model for file]]}

 /* occurrences of repository */

{repository,Explanation, [[Name of a repository for versioning]]}

 /* occurrences of disable_mode */

{disable_mode,Explanation, [[The permissions to set when a file is disabled]]}

 /* occurrences of rotate */

{rotate,Explanation, [[Maximum number of file rotations to keep]]}

 /* occurrences of rotate */

{rotate,Explanation, [[Maximum number of file rotations to keep]]}

 /* occurrences of disable */

{disable,Explanation, [[true/false automatically rename and remove permissions]]}

 /* occurrences of disable */

{disable,Explanation, [[true/false automatically rename and remove permissions]]}

 /* occurrences of disable_suffix */

{disable_suffix,Explanation, [[The suffix to add to files when disabling (.cfdisabled)]]}

 /* occurrences of disable_suffix */

{disable_suffix,Explanation, [[The suffix to add to files when disabling (.cfdisabled)]]}

 /* occurrences of newname */

{newname,Explanation, [[The desired name for the current file]]}

 /* occurrences of rename */

{rename,Explanation, [[Criteria for renaming files]]}

 /* occurrences of rmdirs */

{rmdirs,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{rmdirs,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of rmdirs */

{rmdirs,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{rmdirs,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of rmdirs */

{rmdirs,Explanation, [[true/false whether to delete empty directories during recursive deletion]]}

 /* occurrences of dirlinks */

{dirlinks,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{dirlinks,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of dirlinks */

{dirlinks,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{dirlinks,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of dirlinks */

{dirlinks,Explanation, [[Menu option policy for dealing with symbolic links to directories during deletion]]}

 /* occurrences of delete */

{delete,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{delete,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of delete */

{delete,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{delete,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of delete */

{delete,Explanation, [[Criteria for deleting files]]}

 /* occurrences of update_hashes */

{update_hashes,Explanation, [[Update hash values immediately after change warning]]}

 /* occurrences of report_changes */

{report_changes,Explanation, [[Specify criteria for change warnings]]}

 /* occurrences of hash */

{hash,Explanation, [[Hash files for change detection]]}

 /* occurrences of changes */

{changes,Explanation, [[Criteria for change management]]}

 /* occurrences of bsdflags */

{bsdflags,Explanation, [[List of menu options for bsd file system flags to set]]}

 /* occurrences of bsdflags */

{bsdflags,Explanation, [[List of menu options for bsd file system flags to set]]}

 /* occurrences of rxdirs */

{rxdirs,Explanation, [[true/false add execute flag for directories if read flag is set]]}

 /* occurrences of rxdirs */

{rxdirs,Explanation, [[true/false add execute flag for directories if read flag is set]]}

 /* occurrences of groups */

{groups,Explanation, [[List of acceptable groups of group ids, first is change target]]}

 /* occurrences of groups */

{groups,Explanation, [[List of acceptable groups of group ids, first is change target]]}

 /* occurrences of owners */

{owners,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{owners,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of owners */

{owners,promise_site_cf_70, "promises.cf.html#promise_site_cf_70"}
{owners,used_in_promise, "promises.cf.html#promise_site_cf_70"}

 /* occurrences of owners */

{owners,Explanation, [[List of acceptable owners or user ids, first is change target]]}

 /* occurrences of owners */

{owners,Explanation, [[List of acceptable owners or user ids, first is change target]]}

 /* occurrences of mode */

{mode,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{mode,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of mode */

{mode,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{mode,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of mode */

{mode,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{mode,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of mode */

{mode,Explanation, [[File permissions (like posix chmod)]]}

 /* occurrences of perms */

{perms,promise_knowledge_cf_24, "promises.cf.html#promise_knowledge_cf_24"}
{perms,used_in_promise, "promises.cf.html#promise_knowledge_cf_24"}

 /* occurrences of perms */

{perms,promise_site_cf_70, "promises.cf.html#promise_site_cf_70"}
{perms,used_in_promise, "promises.cf.html#promise_site_cf_70"}

 /* occurrences of perms */

{perms,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{perms,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of perms */

{perms,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{perms,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of perms */

{perms,Explanation, [[Criteria for setting permissions on a file]]}

 /* occurrences of when_linking_children */

{when_linking_children,Explanation, [[Policy for overriding existing files when linking directories of children]]}

 /* occurrences of when_linking_children */

{when_linking_children,Explanation, [[Policy for overriding existing files when linking directories of children]]}

 /* occurrences of link_children */

{link_children,Explanation, [[true/false whether to link all directory's children to source originals]]}

 /* occurrences of when_no_source */

{when_no_source,Explanation, [[Behaviour when the source file to link to does not exist]]}

 /* occurrences of when_no_source */

{when_no_source,Explanation, [[Behaviour when the source file to link to does not exist]]}

 /* occurrences of copy_patterns */

{copy_patterns,Explanation, [[A set of patterns that should be copied ansd synchronized instead of linked]]}

 /* occurrences of copy_patterns */

{copy_patterns,Explanation, [[A set of patterns that should be copied ansd synchronized instead of linked]]}

 /* occurrences of link_type */

{link_type,Explanation, [[The type of link used to alias the file]]}

 /* occurrences of link_type */

{link_type,Explanation, [[The type of link used to alias the file]]}

 /* occurrences of link_from */

{link_from,Explanation, [[Criteria for linking file from a source]]}

 /* occurrences of findertype */

{findertype,Explanation, [[Menu option for default finder type on MacOSX]]}

 /* occurrences of findertype */

{findertype,Explanation, [[Menu option for default finder type on MacOSX]]}

 /* occurrences of check_root */

{check_root,Explanation, [[true/false check permissions on the root directory when depth_search]]}

 /* occurrences of check_root */

{check_root,Explanation, [[true/false check permissions on the root directory when depth_search]]}

 /* occurrences of purge */

{purge,Explanation, [[true/false purge files on client that do not match files on server when depth_search]]}

 /* occurrences of purge */

{purge,Explanation, [[true/false purge files on client that do not match files on server when depth_search]]}

 /* occurrences of verify */

{verify,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{verify,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of verify */

{verify,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{verify,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of verify */

{verify,Explanation, [[true/false verify transferred file by hashing after copy (resource penalty)]]}

 /* occurrences of verify */

{verify,Explanation, [[true/false verify transferred file by hashing after copy (resource penalty)]]}

 /* occurrences of encrypt */

{encrypt,Explanation, [[true/false use encrypted data stream to connect to remote host]]}

 /* occurrences of encrypt */

{encrypt,Explanation, [[true/false use encrypted data stream to connect to remote host]]}

 /* occurrences of trustkey */

{trustkey,Explanation, [[true/false trust public keys from remote server if previously unknown]]}

 /* occurrences of copy_size */

{copy_size,Explanation, [[Integer range of file sizes that may be copied]]}

 /* occurrences of copy_size */

{copy_size,Explanation, [[Integer range of file sizes that may be copied]]}

 /* occurrences of force_ipv4 */

{force_ipv4,Explanation, [[true/false force use of ipv4 on ipv6 enabled network]]}

 /* occurrences of force_ipv4 */

{force_ipv4,Explanation, [[true/false force use of ipv4 on ipv6 enabled network]]}

 /* occurrences of force_update */

{force_update,Explanation, [[true/false force copy update always]]}

 /* occurrences of force_update */

{force_update,Explanation, [[true/false force copy update always]]}

 /* occurrences of type_check */

{type_check,Explanation, [[true/false compare file types before copying and require match]]}

 /* occurrences of type_check */

{type_check,Explanation, [[true/false compare file types before copying and require match]]}

 /* occurrences of link_type */

{link_type,Explanation, [[Menu option for type of links to use when copying]]}

 /* occurrences of compare */

{compare,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{compare,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of compare */

{compare,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{compare,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of compare */

{compare,Explanation, [[Menu option policy for comparing source and image file attributes]]}

 /* occurrences of compare */

{compare,Explanation, [[Menu option policy for comparing source and image file attributes]]}

 /* occurrences of copylink_patterns */

{copylink_patterns,Explanation, [[List of patterns matching files that should be linked instead of copied]]}

 /* occurrences of copylink_patterns */

{copylink_patterns,Explanation, [[List of patterns matching files that should be linked instead of copied]]}

 /* occurrences of linkcopy_patterns */

{linkcopy_patterns,Explanation, [[List of patterns matching symbolic links that should be replaced with copies]]}

 /* occurrences of linkcopy_patterns */

{linkcopy_patterns,Explanation, [[List of patterns matching symbolic links that should be replaced with copies]]}

 /* occurrences of preserve */

{preserve,promise_site_cf_293, "promises.cf.html#promise_site_cf_293"}
{preserve,used_in_promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of preserve */

{preserve,promise_site_cf_287, "promises.cf.html#promise_site_cf_287"}
{preserve,used_in_promise, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of preserve */

{preserve,Explanation, [[true/false whether to preserve file permissions on copied file]]}

 /* occurrences of preserve */

{preserve,Explanation, [[true/false whether to preserve file permissions on copied file]]}

 /* occurrences of stealth */

{stealth,Explanation, [[true/false whether to preserve time stamps on copied file]]}

 /* occurrences of copy_backup */

{copy_backup,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{copy_backup,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of copy_backup */

{copy_backup,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{copy_backup,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of copy_backup */

{copy_backup,promise_site_cf_293, "promises.cf.html#promise_site_cf_293"}
{copy_backup,used_in_promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of copy_backup */

{copy_backup,promise_site_cf_287, "promises.cf.html#promise_site_cf_287"}
{copy_backup,used_in_promise, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of copy_backup */

{copy_backup,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{copy_backup,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of copy_backup */

{copy_backup,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{copy_backup,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of copy_backup */

{copy_backup,Explanation, [[Menu option policy for file backup/version control]]}

 /* occurrences of portnumber */

{portnumber,Explanation, [[Port number to connect to on server host]]}

 /* occurrences of servers */

{servers,Explanation, [[List of servers in order of preference from which to copy]]}

 /* occurrences of servers */

{servers,Explanation, [[List of servers in order of preference from which to copy]]}

 /* occurrences of source */

{source,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{source,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of source */

{source,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{source,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of source */

{source,promise_site_cf_293, "promises.cf.html#promise_site_cf_293"}
{source,used_in_promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of source */

{source,promise_site_cf_287, "promises.cf.html#promise_site_cf_287"}
{source,used_in_promise, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of source */

{source,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{source,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of source */

{source,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{source,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of source */

{source,Explanation, [[The source file to which the link should point]]}

 /* occurrences of source */

{source,Explanation, [[Reference source file from which to copy]]}

 /* occurrences of copy_from */

{copy_from,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{copy_from,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of copy_from */

{copy_from,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{copy_from,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of copy_from */

{copy_from,promise_site_cf_293, "promises.cf.html#promise_site_cf_293"}
{copy_from,used_in_promise, "promises.cf.html#promise_site_cf_293"}

 /* occurrences of copy_from */

{copy_from,promise_site_cf_287, "promises.cf.html#promise_site_cf_287"}
{copy_from,used_in_promise, "promises.cf.html#promise_site_cf_287"}

 /* occurrences of copy_from */

{copy_from,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{copy_from,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of copy_from */

{copy_from,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{copy_from,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of copy_from */

{copy_from,Explanation, [[Criteria for copying file from a source]]}

 /* occurrences of file_result */

{file_result,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{file_result,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of file_result */

{file_result,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{file_result,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of file_result */

{file_result,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of file_result */

{file_result,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of file_result */

{file_result,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of file_result */

{file_result,Explanation, [[Logical expression combining classes defined by file search criteria]]}

 /* occurrences of file_result */

{file_result,Explanation, [[Logical expression combining classes defined by file search criteria]]}

 /* occurrences of issymlinkto */

{issymlinkto,Explanation, [[List of regular expressions to match file objects]]}

 /* occurrences of file_types */

{file_types,Explanation, [[List of acceptable file types from menu choices]]}

 /* occurrences of file_types */

{file_types,Explanation, [[List of acceptable file types from menu choices]]}

 /* occurrences of exec_program */

{exec_program,Explanation, [[Execute this command on each file and match if the exit status is zero]]}

 /* occurrences of exec_program */

{exec_program,Explanation, [[Execute this command on each file and match if the exit status is zero]]}

 /* occurrences of exec_regex */

{exec_regex,Explanation, [[Matches file if this regular expression matches any full line returned by the command]]}

 /* occurrences of atime */

{atime,Explanation, [[Range of access times (atime) for acceptable files]]}

 /* occurrences of mtime */

{mtime,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{mtime,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of mtime */

{mtime,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{mtime,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of mtime */

{mtime,Explanation, [[Range of modification times (mtime) for acceptable files]]}

 /* occurrences of ctime */

{ctime,Explanation, [[Range of change times (ctime) for acceptable files]]}

 /* occurrences of search_bsdflags */

{search_bsdflags,Explanation, [[String of flags for bsd file system flags expected set]]}

 /* occurrences of search_bsdflags */

{search_bsdflags,Explanation, [[String of flags for bsd file system flags expected set]]}

 /* occurrences of search_groups */

{search_groups,Explanation, [[List of acceptable group names or ids for the file, or regexes to match]]}

 /* occurrences of search_groups */

{search_groups,Explanation, [[List of acceptable group names or ids for the file, or regexes to match]]}

 /* occurrences of search_owners */

{search_owners,Explanation, [[List of acceptable user names or ids for the file, or regexes to match]]}

 /* occurrences of search_size */

{search_size,Explanation, [[Integer range of file sizes]]}

 /* occurrences of search_size */

{search_size,Explanation, [[Integer range of file sizes]]}

 /* occurrences of search_mode */

{search_mode,Explanation, [[A list of mode masks for acceptable file permissions]]}

 /* occurrences of search_mode */

{search_mode,Explanation, [[A list of mode masks for acceptable file permissions]]}

 /* occurrences of path_name */

{path_name,Explanation, [[List of pathnames to match acceptable target]]}

 /* occurrences of path_name */

{path_name,Explanation, [[List of pathnames to match acceptable target]]}

 /* occurrences of leaf_name */

{leaf_name,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{leaf_name,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of leaf_name */

{leaf_name,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{leaf_name,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of leaf_name */

{leaf_name,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{leaf_name,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of leaf_name */

{leaf_name,Explanation, [[List of regexes that match an acceptable name]]}

 /* occurrences of file_select */

{file_select,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{file_select,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of file_select */

{file_select,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{file_select,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of file_select */

{file_select,promise_site_cf_180, "promises.cf.html#promise_site_cf_180"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_180"}

 /* occurrences of file_select */

{file_select,promise_site_cf_174, "promises.cf.html#promise_site_cf_174"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_174"}

 /* occurrences of file_select */

{file_select,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of file_select */

{file_select,Explanation, [[Choose which files select in a search]]}

 /* occurrences of registry_exclude */

{registry_exclude,Explanation, [[A list of regular expressions to ignore in key/value verification]]}

 /* occurrences of database_rows */

{database_rows,Explanation, [[An ordered list of row values to be promised by SQL databases]]}

 /* occurrences of database_columns */

{database_columns,Explanation, [[A list of column definitions to be promised by SQL databases]]}

 /* occurrences of database_operation */

{database_operation,Explanation, [[The nature of the promise - to be or not to be]]}

 /* occurrences of database_type */

{database_type,Explanation, [[The type of database that is to be manipulated]]}

 /* occurrences of db_server_connection_db */

{db_server_connection_db,Explanation, [[The name of an existing database to connect to in order to create/manage other databases]]}

 /* occurrences of db_server_type */

{db_server_type,Explanation, [[The dialect of the database server]]}

 /* occurrences of db_server_type */

{db_server_type,Explanation, [[The dialect of the database server]]}

 /* occurrences of db_server_host */

{db_server_host,Explanation, [[Hostname or address for connection to database, blank means localhost]]}

 /* occurrences of db_server_host */

{db_server_host,Explanation, [[Hostname or address for connection to database, blank means localhost]]}

 /* occurrences of db_server_password */

{db_server_password,Explanation, [[Clear text password for database connection]]}

 /* occurrences of db_server_password */

{db_server_password,Explanation, [[Clear text password for database connection]]}

 /* occurrences of db_server_owner */

{db_server_owner,Explanation, [[User name for database connection]]}

 /* occurrences of database_server */

{database_server,Explanation, [[Credentials for connecting to a local/remote database server]]}

 /* occurrences of module */

{module,Explanation, [[true/false whether to expect the cfengine module protocol]]}

 /* occurrences of no_output */

{no_output,Explanation, [[true/false discard all output from the command]]}

 /* occurrences of no_output */

{no_output,Explanation, [[true/false discard all output from the command]]}

 /* occurrences of preview */

{preview,Explanation, [[true/false preview command when running in dry-run mode (with -n)]]}

 /* occurrences of preview */

{preview,Explanation, [[true/false preview command when running in dry-run mode (with -n)]]}

 /* occurrences of chroot */

{chroot,Explanation, [[Directory of root sandbox for process]]}

 /* occurrences of chroot */

{chroot,Explanation, [[Directory of root sandbox for process]]}

 /* occurrences of chdir */

{chdir,promise_knowledge_cf_34, "promises.cf.html#promise_knowledge_cf_34"}
{chdir,used_in_promise, "promises.cf.html#promise_knowledge_cf_34"}

 /* occurrences of chdir */

{chdir,Explanation, [[Directory for setting current/base directory for the process]]}

 /* occurrences of exec_timeout */

{exec_timeout,Explanation, [[Timeout in seconds for command completion]]}

 /* occurrences of exec_timeout */

{exec_timeout,Explanation, [[Timeout in seconds for command completion]]}

 /* occurrences of exec_group */

{exec_group,Explanation, [[The group name or id under which to run the process]]}

 /* occurrences of exec_group */

{exec_group,Explanation, [[The group name or id under which to run the process]]}

 /* occurrences of exec_owner */

{exec_owner,Explanation, [[The user name or id under which to run the process]]}

 /* occurrences of umask */

{umask,Explanation, [[The umask value for the child process]]}

 /* occurrences of umask */

{umask,Explanation, [[The umask value for the child process]]}

 /* occurrences of useshell */

{useshell,Explanation, [[true/false embed the command in a shell environment (true)]]}

 /* occurrences of contain */

{contain,promise_knowledge_cf_34, "promises.cf.html#promise_knowledge_cf_34"}
{contain,used_in_promise, "promises.cf.html#promise_knowledge_cf_34"}

 /* occurrences of contain */

{contain,Explanation, [[Containment options for the execution process]]}

 /* occurrences of args */

{args,Explanation, [[Alternative string of arguments for the command (concatenated with promiser string)]]}

 /* occurrences of select_end */

{select_end,Explanation, [[Regular expression matches end of edit region from start]]}

 /* occurrences of select_end */

{select_end,Explanation, [[Regular expression matches end of edit region from start]]}

 /* occurrences of select_start */

{select_start,Explanation, [[Regular expression matching start of edit region]]}

 /* occurrences of select_region */

{select_region,Explanation, [[Limit edits to a demarked region of the file]]}

 /* occurrences of comment */

{comment,Explanation, [[Retained comment about this promise's real intention]]}

 /* occurrences of comment */

{comment,Explanation, [[A comment about this promise's real intention that follows through the program]]}

 /* occurrences of depends_on */

{depends_on,Explanation, [[A list of promise handles that this promise builds on or depends on somehow (for knowledge management)]]}

 /* occurrences of handle */

{handle,Explanation, [[A unique id-tag string for referring to this as a promisee elsewhere]]}

 /* occurrences of ifvarclass */

{ifvarclass,Explanation, [[Extended classes ANDed with context]]}

 /* occurrences of timer_policy */

{timer_policy,promise_site_cf_98, "promises.cf.html#promise_site_cf_98"}
{timer_policy,used_in_promise, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of timer_policy */

{timer_policy,Explanation, [[Whether a persistent class restarts its counter when rediscovered]]}

 /* occurrences of timer_policy */

{timer_policy,Explanation, [[Whether a persistent class restarts its counter when rediscovered]]}

 /* occurrences of persist_time */

{persist_time,promise_site_cf_98, "promises.cf.html#promise_site_cf_98"}
{persist_time,used_in_promise, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of persist_time */

{persist_time,Explanation, [[A number of minutes the specified classes should remain active]]}

 /* occurrences of persist_time */

{persist_time,Explanation, [[A number of minutes the specified classes should remain active]]}

 /* occurrences of promise_kept */

{promise_kept,promise_webserver_cf_74, "promises.cf.html#promise_webserver_cf_74"}
{promise_kept,used_in_promise, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of promise_kept */

{promise_kept,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{promise_kept,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of promise_kept */

{promise_kept,Explanation, [[A list of classes to be defined]]}

 /* occurrences of promise_kept */

{promise_kept,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_timeout */

{repair_timeout,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_timeout */

{repair_timeout,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_denied */

{repair_denied,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_denied */

{repair_denied,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_failed */

{repair_failed,Explanation, [[A list of classes to be defined]]}

 /* occurrences of repair_failed */

{repair_failed,Explanation, [[A list of classes to be defined]]}

 /* occurrences of promise_repaired */

{promise_repaired,promise_webserver_cf_74, "promises.cf.html#promise_webserver_cf_74"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_webserver_cf_74"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_webserver_cf_62, "promises.cf.html#promise_webserver_cf_62"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_webserver_cf_62"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_site_cf_98, "promises.cf.html#promise_site_cf_98"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_site_cf_98"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of promise_repaired */

{promise_repaired,Explanation, [[A list of classes to be defined]]}

 /* occurrences of classes */

{classes,Explanation, [[Signalling behaviour]]}

 /* occurrences of measurement_class */

{measurement_class,Explanation, [[If set performance will be measured and recorded under this identifier]]}

 /* occurrences of report_level */

{report_level,Explanation, [[The reporting level for standard output]]}

 /* occurrences of report_level */

{report_level,Explanation, [[The reporting level for standard output]]}

 /* occurrences of background */

{background,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{background,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of background */

{background,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{background,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of background */

{background,promise_site_cf_148, "promises.cf.html#promise_site_cf_148"}
{background,used_in_promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of background */

{background,promise_site_cf_48, "promises.cf.html#promise_site_cf_48"}
{background,used_in_promise, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of background */

{background,Explanation, [[true/false switch for parallelizing the promise repair]]}

 /* occurrences of background */

{background,Explanation, [[true/false switch for parallelizing the promise repair]]}

 /* occurrences of audit */

{audit,Explanation, [[true/false switch for detailed audit records of this promise]]}

 /* occurrences of audit */

{audit,Explanation, [[true/false switch for detailed audit records of this promise]]}

 /* occurrences of log_failed */

{log_failed,Explanation, [[This should be filename of a file to which log_string will be saved, if undefined it goes to syslog]]}

 /* occurrences of log_failed */

{log_failed,Explanation, [[This should be filename of a file to which log_string will be saved, if undefined it goes to syslog]]}

 /* occurrences of log_repaired */

{log_repaired,Explanation, [[This should be filename of a file to which log_string will be saved, if undefined it goes to syslog]]}

 /* occurrences of log_repaired */

{log_repaired,Explanation, [[This should be filename of a file to which log_string will be saved, if undefined it goes to syslog]]}

 /* occurrences of log_kept */

{log_kept,Explanation, [[This should be filename of a file to which log_string will be saved, if undefined it goes to syslog]]}

 /* occurrences of log_level */

{log_level,Explanation, [[The reporting level sent to syslog]]}

 /* occurrences of log_level */

{log_level,Explanation, [[The reporting level sent to syslog]]}

 /* occurrences of log_string */

{log_string,Explanation, [[A message to be written to the log when a promise verification leads to a repair]]}

 /* occurrences of log_string */

{log_string,Explanation, [[A message to be written to the log when a promise verification leads to a repair]]}

 /* occurrences of expireafter */

{expireafter,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{expireafter,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of expireafter */

{expireafter,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{expireafter,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of expireafter */

{expireafter,free_disk_watch, "promises.cf.html#free_disk_watch"}
{expireafter,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of expireafter */

{expireafter,promise_site_cf_148, "promises.cf.html#promise_site_cf_148"}
{expireafter,used_in_promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of expireafter */

{expireafter,promise_site_cf_141, "promises.cf.html#promise_site_cf_141"}
{expireafter,used_in_promise, "promises.cf.html#promise_site_cf_141"}

 /* occurrences of expireafter */

{expireafter,promise_site_cf_48, "promises.cf.html#promise_site_cf_48"}
{expireafter,used_in_promise, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of expireafter */

{expireafter,Explanation, [[Number of minutes before a repair action is interrupted and retried]]}

 /* occurrences of expireafter */

{expireafter,Explanation, [[Number of minutes before a repair action is interrupted and retried]]}

 /* occurrences of ifelapsed */

{ifelapsed,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_library_cf_165, "promises.cf.html#promise_library_cf_165"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_library_cf_165"}

 /* occurrences of ifelapsed */

{ifelapsed,free_disk_watch, "promises.cf.html#free_disk_watch"}
{ifelapsed,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_148, "promises.cf.html#promise_site_cf_148"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_148"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_141, "promises.cf.html#promise_site_cf_141"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_141"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_48, "promises.cf.html#promise_site_cf_48"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_48"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of ifelapsed */

{ifelapsed,Explanation, [[Number of minutes before next allowed assessment of promise]]}

 /* occurrences of action_policy */

{action_policy,promise_library_cf_165, "promises.cf.html#promise_library_cf_165"}
{action_policy,used_in_promise, "promises.cf.html#promise_library_cf_165"}

 /* occurrences of action_policy */

{action_policy,promise_site_cf_58, "promises.cf.html#promise_site_cf_58"}
{action_policy,used_in_promise, "promises.cf.html#promise_site_cf_58"}

 /* occurrences of action_policy */

{action_policy,Explanation, [[Whether to repair or report about non-kept promises]]}

 /* occurrences of action */

{action,Explanation, [[Output behaviour]]}

 /* occurrences of report_to_file */

{report_to_file,Explanation, [[The path and filename to which output should be appended]]}

 /* occurrences of friend_pattern */

{friend_pattern,Explanation, [[Regular expression to keep selected hosts from the friends report list]]}

 /* occurrences of file_to_print */

{file_to_print,Explanation, [[Path name to the file that is to be sent to standard output]]}

 /* occurrences of file_to_print */

{file_to_print,Explanation, [[Path name to the file that is to be sent to standard output]]}

 /* occurrences of number_of_lines */

{number_of_lines,Explanation, [[Integer maximum number of lines to print from selected file]]}

 /* occurrences of printfile */

{printfile,Explanation, [[Quote part of a file to standard output]]}

 /* occurrences of showstate */

{showstate,promise_site_cf_345, "promises.cf.html#promise_site_cf_345"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_345"}

 /* occurrences of showstate */

{showstate,promise_site_cf_338, "promises.cf.html#promise_site_cf_338"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_338"}

 /* occurrences of showstate */

{showstate,promise_site_cf_331, "promises.cf.html#promise_site_cf_331"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of showstate */

{showstate,promise_site_cf_324, "promises.cf.html#promise_site_cf_324"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_324"}

 /* occurrences of showstate */

{showstate,promise_site_cf_317, "promises.cf.html#promise_site_cf_317"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_317"}

 /* occurrences of showstate */

{showstate,promise_site_cf_310, "promises.cf.html#promise_site_cf_310"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_310"}

 /* occurrences of showstate */

{showstate,promise_site_cf_303, "promises.cf.html#promise_site_cf_303"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_303"}

 /* occurrences of showstate */

{showstate,Explanation, [[List of services about which status reports should be reported to standard output]]}

 /* occurrences of intermittency */

{intermittency,Explanation, [[Real number threshold [0,1] of intermittency about current peers, report above]]}

 /* occurrences of lastseen */

{lastseen,Explanation, [[Integer time threshold in hours since current peers were last seen, report absence]]}

 /* occurrences of not */

{not,Explanation, [[Evaluate the negation of string expression in normal form]]}

 /* occurrences of expression */

{expression,Explanation, [[Evaluate string expression of classes in normal form]]}

 /* occurrences of dist */

{dist,Explanation, [[Generate a probabilistic class distribution (strategy in cfengine 2)]]}

 /* occurrences of xor */

{xor,Explanation, [[Combine class sources with XOR]]}

 /* occurrences of and */

{and,Explanation, [[Combine class sources with AND]]}

 /* occurrences of or */

{or,Explanation, [[Combine class sources with inclusive OR]]}

 /* occurrences of policy */

{policy,Explanation, [[The policy for (dis)allowing redefinition of variables]]}

 /* occurrences of rlist */

{rlist,Explanation, [[A list of real numbers]]}

 /* occurrences of ilist */

{ilist,Explanation, [[A list of integers]]}

 /* occurrences of slist */

{slist,Explanation, [[A list of scalar strings]]}

 /* occurrences of real */

{real,Explanation, [[A scalar real number]]}

 /* occurrences of int */

{int,Explanation, [[A scalar integer]]}

 /* occurrences of string */

{string,Explanation, [[A scalar string]]}

 /* occurrences of sys */

{sys,Explanation, [[cfengine's internal bundle of system specific values]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Represent type slist and should match .*]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Represent type string and should match .*]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Represent type slist and should match ]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Represent type string and should match ]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Should match the generic pattern .*, i.e. unspecified characters]]}

 /* occurrences of An_arbitrary_string */

{An_arbitrary_string,Explanation, [[Should match the generic pattern , i.e. unspecified characters]]}

 /* occurrences of a_syslog_level */

{a_syslog_level,Explanation, [[Should match the generic pattern LOG_USER,LOG_DAEMON,LOG_LOCAL0,LOG_LOCAL1,LOG_LOCAL2,LOG_LOCAL3,LOG_LOCAL4,LOG_LOCAL5,LOG_LOCAL6,LOG_LOCAL7, i.e. a syslog constant]]}

 /* occurrences of a_file_path */

{a_file_path,Explanation, [[Represent type slist and should match [cC]:\.*|/.*]]}

 /* occurrences of a_file_path */

{a_file_path,Explanation, [[Represent type string and should match [cC]:\.*|/.*]]}

 /* occurrences of a_file_path */

{a_file_path,Explanation, [[Should match the generic pattern [cC]:\.*|/.*, i.e. a system file path suitable for the target system]]}

 /* occurrences of a_user_group_id */

{a_user_group_id,Explanation, [[Represent type slist and should match [a-zA-Z0-9_$.-]+]]}

 /* occurrences of a_user_group_id */

{a_user_group_id,Explanation, [[Should match the generic pattern [a-zA-Z0-9_$.-]+, i.e. an alphanumeric string with option underscores and hyphens]]}

 /* occurrences of a_cfengine_identifier */

{a_cfengine_identifier,Explanation, [[Represent type string and should match [a-zA-Z0-9_$.]+]]}

 /* occurrences of a_cfengine_identifier */

{a_cfengine_identifier,Explanation, [[Represent type slist and should match [a-zA-Z0-9_$.]+]]}

 /* occurrences of a_cfengine_identifier */

{a_cfengine_identifier,Explanation, [[Should match the generic pattern [a-zA-Z0-9_$.]+, i.e. an alphanumeric string with option underscores]]}

 /* occurrences of a_cfengine_class_expression */

{a_cfengine_class_expression,Explanation, [[Should match the generic pattern [a-zA-Z0-9_!&|.()]+, i.e. an alphanumeric string with option underscores and logical operators]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,Explanation, [[Represent type string and should match [0-7augorwxst,+-]+]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,Explanation, [[Represent type slist and should match [0-7augorwxst,+-]+]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,Explanation, [[Should match the generic pattern [0-7augorwxst,+-]+, i.e. something that you would give as an argument to chmod]]}

 /* occurrences of a_single_character */

{a_single_character,Explanation, [[Represent type string and should match ^.$]]}

 /* occurrences of a_single_character */

{a_single_character,Explanation, [[Should match the generic pattern ^.$, i.e. one symbol]]}

 /* occurrences of real_number */

{real_number,Explanation, [[Represent type rlist and should match -9.99999E100,9.99999E100]]}

 /* occurrences of real_number */

{real_number,Explanation, [[Represent type real and should match -9.99999E100,9.99999E100]]}

 /* occurrences of real_number */

{real_number,Explanation, [[Should match the generic pattern -9.99999E100,9.99999E100, i.e. a number between the minus and positive maximum values]]}

 /* occurrences of integer */

{integer,Explanation, [[Represent type ilist and should match -99999999999,9999999999]]}

 /* occurrences of integer */

{integer,Explanation, [[Represent type int and should match -99999999999,9999999999]]}

 /* occurrences of integer */

{integer,Explanation, [[Should match the generic pattern -99999999999,9999999999, i.e. a number between the minus and positive maximum values]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,Explanation, [[Represent type irange [int,int] and should match 0,99999999999]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,Explanation, [[Represent type int and should match 0,99999999999]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,Explanation, [[Should match the generic pattern 0,99999999999, i.e. a number between zero and the maximum value]]}

 /* occurrences of a_time_range */

{a_time_range,Explanation, [[Should match the generic pattern 0,2147483648, i.e. a value from zero to a maximum system time -- but you should use time functions to convert this]]}

 /* occurrences of link_type */

{link_type,Explanation, [[Represent type (menu option) and should match symlink,hardlink,relative,absolute,none]]}

 /* occurrences of link_type */

{link_type,Explanation, [[Should match the generic pattern symlink,hardlink,relative,absolute,none, i.e. a support link type]]}

 /* occurrences of boolean */

{boolean,Explanation, [[Represent type (menu option) and should match true,false,yes,no,on,off]]}

 /* occurrences of boolean */

{boolean,Explanation, [[Should match the generic pattern true,false,yes,no,on,off, i.e. a positive or a negative]]}

 /* occurrences of system_signals */

{system_signals,Explanation, [[Represent type (option list) and should match hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv]]}

 /* occurrences of system_signals */

{system_signals,Explanation, [[Should match the generic pattern hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv, i.e. a unix signal name]]}

 /* occurrences of values */

{values,Explanation, [[Formal rvalues in constraint assignments and their legal ranges]]}

 /* occurrences of functions */

{functions,Explanation, [[In-built functions that may be used to set variables or classes]]}

 /* occurrences of body_constraints */

{body_constraints,Explanation, [[The attributes that cfengine enables you to promise about the promiser]]}

 /* occurrences of promise_types */

{promise_types,Explanation, [[The types of promise that cfengine can keep]]}

 /* occurrences of promises */

{promises,Explanation, [[Complete occurrences of promiser + promisee + promise-body]]}

 /* occurrences of promisers */

{promisers,Explanation, [[The objects affected by a promise]]}

 /* occurrences of promisees */

{promisees,Explanation, [[Recipients of a promise, i.e. promise handles, or persons]]}

 /* occurrences of contexts */

{contexts,Explanation, [[Class expressions that say where or when a promise applies]]}

 /* occurrences of bodies */

{bodies,Explanation, [[A modular collection of body constraints for re-use]]}

 /* occurrences of bundles */

{bundles,Explanation, [[A modular collection of promises of different types]]}

 /* occurrences of variables_report */

{variables_report,description, [[Shows the values of variables used on each host. Some discovered, some defined.]]}

 /* occurrences of software_patches_report */

{software_patches_report,description, [[For systems with a separate patch model, this shows OS software patches. There are two reports (for current status and patches that are available but not already applied)]]}

 /* occurrences of setuid_report */

{setuid_report,description, [[List the discovered setuid/setgid root programs on the system (Unix only)]]}

 /* occurrences of performance_report */

{performance_report,description, [[Describes the real time it has taken on average to complete or keep promises]]}

 /* occurrences of lastseen_report */

{lastseen_report,description, [[When was the last time the current host contacted or was contacted by another? (+) indicates contacted, (-) indictaes was contacted by.]]}

 /* occurrences of installed_software_report */

{installed_software_report,description, [[OS software packages installed and their version information.]]}

 /* occurrences of hashes_report */

{hashes_report,description, [[A list of actual computed hash values for promised files.]]}

 /* occurrences of file_changes_report */

{file_changes_report,description, [[A log of changes to files promised under change monitoring]]}

 /* occurrences of compliance_report */

{compliance_report,description, [[Show the status of each policy promise, along with average compliance. Useful for quick auditing.]]}

 /* occurrences of classes_report */

{classes_report,description, [[Shows non-hard classes defined on the current host. This provides something like CMDB information but at level that can say something about the dynamics of the system. Probabilities that classes have been defined are based on actual observation.]]}

 /* occurrences of active_locks_report */

{active_locks_report,description, [[Currently active locks -- this should normally be an unstable short list or nothing. Could indicate hung cfengine processes.]]}

 /* occurrences of all_locks_report */

{all_locks_report,description, [[A list of locks that have been acquired, indicating promise checks]]}

 /* occurrences of audit_report */

{audit_report,description, [[Detailed reports with every transaction made by cfengine - very storage consuming]]}

 /* occurrences of the_tao */

{the_tao,Explanation, [[topics, associations and occurrences]]}

 /* occurrences of lvalue */

{lvalue,Cfengine_reference, "/inside/manuals/cf3-reference#Types-in-cfengine-3"}

 /* occurrences of lvalue */

{lvalue,definitions, [[Refers to the left hand side of an assignment "lvalue => rvalue"]]}

 /* occurrences of rvalue */

{rvalue,Cfengine_reference, "/inside/manuals/cf3-reference#Types-in-cfengine-3"}

 /* occurrences of rvalue */

{rvalue,definitions, [[Refers to the right hand side of an assignment "lvalue => rvalue"]]}

 /* occurrences of voluntary_cooperation */

{voluntary_cooperation,definitions, [[Describes the approach to modelling in which one does not assume absolute power to control, but rather assumes best effort of the system parts. A promise is an expression of voluntary cooperation - the opposite of an obligation.]]}

 /* occurrences of versions */

{versions,definitions, [[An indentity string that distinguishes altered states of an agent or occurrence of a topic.]]}

 /* occurrences of dependencies */

{dependencies,definitions, [[Promises or promisees that provide the pre-requisites for conditional promises may be called dependencies of the conditional promise.]]}

 /* occurrences of workflows */

{workflows,definitions, [[A representation or story about actions or services. ]]}

 /* occurrences of stories */

{stories,definitions, [[A sequence of topics that relates a start and an end point through a topic map. Different
aths through a topic map can relate different stories. An entire story promises to have some intention.]]}

 /* occurrences of services */

{services,definitions, [[An abstraction for actions or processes that are associated with a specific set of promises. Services are economically motivated black-boxes for promises.]]}

 /* occurrences of communicated_information */

{communicated_information,definitions, [[Any information that is transmitted falls into this category. It is a container class for more specific messages, e.g. promises.]]}

 /* occurrences of subjects */

{subjects,definitions, [[A subject is an abstract concept -- it is any thing that can be talked about or discussed.]]}

 /* occurrences of subjects */

{subjects,Explanation, [[Any thing that can be discussed]]}

 /* occurrences of occurrences */

{occurrences,definitions, [[An information resource that represents a topic. Typically a document, database entry, image or other medium.]]}

 /* occurrences of occurrence_types */

{occurrence_types,definitions, [[Occurrences are classified by the topics that refer to them. When a topic claims that an occurrence represents it somehow it uses a representation label (also called a subtype in topic map parlance). These partition occurrences into overlapping sets since an occurrence could represent several topics.]]}

 /* occurrences of topic_instances */

{topic_instances,definitions, [[Topic instances are called occurrences in topic map parlance.]]}

 /* occurrences of type_instances */

{type_instances,definitions, [[Occurrences of a type of object. In a topic map, topics are type occurrences. In a policy, promises are type occurrences.]]}

 /* occurrences of associations */

{associations,definitions, [[Trains of thought that link one topic with another.]]}

 /* occurrences of structural_relationships */

{structural_relationships,definitions, [[When a part of something is contained within another part, or is a piece of a whole then we can call this a structural relationship]]}

 /* occurrences of structural_relationships */

{structural_relationships,image,"Image at img/clusters.png"}

 /* occurrences of location_relationships */

{location_relationships,definitions, [[Spatial relationships, like up,down,left,right]]}

 /* occurrences of causative_relationships */

{causative_relationships,definitions, [[When one topic impacts on another, we can say there is a cause-effect relationship.]]}

 /* occurrences of conceptual_relationships */

{conceptual_relationships,definitions, [[Ideas that are related in documentable fashion.]]}

 /* occurrences of actions */

{actions,definitions, [[Changes instigated by a system leading to observable effects.]]}

 /* occurrences of behaviours */

{behaviours,definitions, [[Characteristics of a system that can be observed.]]}

 /* occurrences of facts */

{facts,definitions, [[Irrefutable pieces of information that can be observed.]]}

 /* occurrences of topics */

{topics,definitions, [[Topics are the way we represent abstract subjects in a topic map. A topic is implemented as a database entry.]]}

 /* occurrences of topic_types */

{topic_types,definitions, [[Topics (in topic maps) are classified into non-overlapping or disjoint types.]]}

 /* occurrences of body_constraint */

{body_constraint,definitions, [[A description of the range of values that an agent promises to restrict its behaviour to.]]}

 /* occurrences of body_type */

{body_type,definitions, [[The subject of a promise is limited to a system of non-overlapping, or disjoint types, e.g. in cfengine files, processes, knowledge, etc]]}

 /* occurrences of promise_body */

{promise_body,definitions, [[The body of a promise contains the details that describe its substance. This generally has the name of some variable and a constraint on the values that the promiser promises it will have.]]}

 /* occurrences of promise_body */

{promise_body,definitions, [[Attribute of a promise, like a template for parameterizing compound promise attributes]]}

 /* occurrences of promise_type */

{promise_type,definitions, [[The type of cfengine rules are called promise types]]}

 /* occurrences of promisee */

{promisee,definitions, [[The recipient of a promise is called the promisee.]]}

 /* occurrences of promiser */

{promiser,definitions, [[The agent or entity that makes a promise is called the promiser.]]}

 /* occurrences of announcements */

{announcements,definitions, [[The act of making public some information is called an announcement.]]}

 /* occurrences of conditional_promises */

{conditional_promises,definitions, [[A promise that is made subject to a pre-condition is not a true promise unless the condition can also be promised. Condition promises are often used to express dependencies.]]}

 /* occurrences of promises */

{promises,definitions, [[Assertions about the desired properties of a system]]}

 /* occurrences of promises */

{promises,definitions, [[When an agent's intention becomes public knowledge we call it a promise.]]}

 /* occurrences of promise_proposals */

{promise_proposals,definitions, [[Before a promise has been accepted and made it can be written down as a proposal. A contract contains many promise proposals, for instance.]]}

 /* occurrences of bundles */

{bundles,definitions, [[A container for grouping related promises]]}

 /* occurrences of bundles */

{bundles,definitions, [[Collections of promises are called bundles.]]}

 /* occurrences of intentions */

{intentions,definitions, [[Ideas that might lead to courses of action and some time past, present or future.]]}

 /* occurrences of agents */

{agents,definitions, [[Describes any system components that can give or receive promises, either physical or abstract; e.g. files, processes, topics, etc.]]}

 /* occurrences of promise_theory */

{promise_theory,definitions, [[A model for representing systems of interacting parts, such as computer networks. Orginally described by Mark Burgess to describe cfengine as no other models were suitable.]]}

 /* occurrences of copernicus */

{copernicus,Support_knowledge, "https://cfengine.com/copernicus/"}

 /* occurrences of copernicus */

{copernicus,Explanation, [[Cfengine's online support knowledge base]]}

 /* occurrences of system_reports */

{system_reports,Explanation, [[Reports generated by cfengine]]}

 /* occurrences of system_reports */

{system_reports,Explanation, [[Reports from around the system]]}

 /* occurrences of system_policy */

{system_policy,Explanation, [[Local policy description with comments and dependencies]]}

 /* occurrences of cfengine_knowledge_base */

{cfengine_knowledge_base,Origin,"Image at /img/cfknowledge.png"}

 /* occurrences of cfengine_knowledge_base */

{cfengine_knowledge_base,Explanation, [[Cfengine knowledge console]]}
