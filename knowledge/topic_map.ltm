/*********************/
/* Class types       */
/*********************/

[promise_knowledge_cf_67: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-repo..) (promise_knowledge_cf_67)"]

[is_a_promise_of_type = "is a promise of type" 
          = "has current exemplars" / promise_types]


[is_activated_by_class_context = "is activated by class context" 
          = "activates promises" / contexts]

[_var_cfengine_bin_cf_report: promisers = "/var/cfengine/bin/cf-report"]

[makes_promises = "makes promises" 
          = "is a promise made by" / promises]


[makes_promise_of_type = "makes promise of type" 
          = "promises have been made by" / promise_types]


[occurs_in_bundle = "occurs in bundle" 
          = "bundle contains promiser" / bundles]

[mon_update: contexts = "mon_update"]
[promise_knowledge_cf_63: promises = "Generate knowledge associative graphs (promise_knowledge_cf_63)"]
[_usr_local_sbin_cf_know__f__srv_www_htdocs_enterprise_cf__g: promisers = "/usr/local/sbin/cf-know -f /srv/www/htdocs/enterprise.cf -g"]
[web_server: contexts = "web_server"]
[promise_knowledge_cf_56: promises = "Generate config reports (promise_knowledge_cf_56)"]
[_usr_local_sbin_cf_promises__r: promisers = "/usr/local/sbin/cf-promises -r"]
[promise_knowledge_cf_43: promises = "Update magnified view files for monitoring knowledge (promise_knowledge_cf_43)"]
[_srv_www_htdocs_reports_192_168_1_100_mean_field_nov: promisers = "/srv/www/htdocs/reports/192.168.1.100/mean_field.nov"]
[promise_knowledge_cf_35: promises = "Update long view files for monitoring knowledge (promise_knowledge_cf_35)"]

[has_direct_influence_on = "has direct influence on" 
          = "is directly influenced by" / contexts]

[_srv_www_htdocs_reports_192_168_1_100_fluctuations_nov: promisers = "/srv/www/htdocs/reports/192.168.1.100/fluctuations.nov"]
[promise_knowledge_cf_28: promises = "Make sure knowledge files are accessible to webserver (promise_knowledge_cf_28)"]
[_srv_www_htdocs: promisers = "/srv/www/htdocs"]
[promise_knowledge_cf_15: promises = "(Uncommented promise of type <i>vars</i> made by: all_hosts..) (promise_knowledge_cf_15)"]
[all_hosts: promisers = "all_hosts"]
[promise_knowledge_cf_12: promises = "(Uncommented promise of type <i>vars</i> made by: doc_root..) (promise_knowledge_cf_12)"]
[doc_root: promisers = "doc_root"]
[setup_knowledge: bundles = "setup_knowledge"]
[promise_webserver_cf_137: promises = "(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..) (promise_webserver_cf_137)"]
[promise_webserver_cf_130: promises = "(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..) (promise_webserver_cf_130)"]
[APACHE_MODULES___: promisers = "APACHE_MODULES=.*"]
[promise_webserver_cf_117: promises = "(Uncommented promise of type <i>insert_lines</i> made by: APACHE_CONF_INCLUDE_FILES..) (promise_webserver_cf_117)"]
[APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_: promisers = "APACHE_CONF_INCLUDE_FILES="/home/mark/cfengine-inputs/httpd.conf""]
[promise_webserver_cf_108: promises = "(Uncommented promise of type <i>vars</i> made by: del_modules..) (promise_webserver_cf_108)"]
[del_modules: promisers = "del_modules"]
[promise_webserver_cf_104: promises = "(Uncommented promise of type <i>vars</i> made by: add_modules..) (promise_webserver_cf_104)"]
[add_modules: promisers = "add_modules"]
[fixapache: bundles = "fixapache"]
[promise_webserver_cf_85: promises = "(Uncommented promise of type <i>reports</i> made by: The web server software c..) (promise_webserver_cf_85)"]
[The_web_server_software_could_not_be_installed: promisers = "The web server software could not be installed"]
[_software_ok_on: contexts = "!software_ok.on"]
[promise_webserver_cf_76: promises = "(Uncommented promise of type <i>files</i> made by: /etc/sysconfig/apache2..) (promise_webserver_cf_76)"]
[_etc_sysconfig_apache2: promisers = "/etc/sysconfig/apache2"]
[software_ok: contexts = "software_ok"]
[php5: promisers = "php5"]
[apache2_prefork: promisers = "apache2-prefork"]
[apache2_mod_php5: promisers = "apache2-mod_php5"]
[promise_webserver_cf_64: promises = "(Uncommented promise of type <i>packages</i> made by: apache2..) (promise_webserver_cf_64)"]
[on: contexts = "on"]

[returns_data_type = "returns data-type" 
          = "is returned by function" / cfengine_3]

[promise_webserver_cf_53: promises = "(Uncommented promise of type <i>commands</i> made by: /etc/init.d/apache2 resta..) (promise_webserver_cf_53)"]
[_etc_init_d_apache2_restart: promisers = "/etc/init.d/apache2 restart"]
[start_apache: contexts = "start_apache"]
[promise_webserver_cf_44: promises = "(Uncommented promise of type <i>processes</i> made by: apache2..) (promise_webserver_cf_44)"]
[off: contexts = "off"]
[promise_webserver_cf_38: promises = "(Uncommented promise of type <i>processes</i> made by: apache2..) (promise_webserver_cf_38)"]
[apache2: promisers = "apache2"]
[web_ok_on: contexts = "web_ok.on"]
[promise_webserver_cf_23: promises = "(Uncommented promise of type <i>vars</i> made by: match_package..) (promise_webserver_cf_23)"]
[match_package: promisers = "match_package"]
[promise_webserver_cf_17: promises = "(Uncommented promise of type <i>vars</i> made by: site_http_conf..) (promise_webserver_cf_17)"]
[site_http_conf: promisers = "site_http_conf"]
[promise_webserver_cf_11: promises = "(Uncommented promise of type <i>vars</i> made by: document_root..) (promise_webserver_cf_11)"]
[document_root: promisers = "document_root"]
[web_server: bundles = "web_server"]
[promise_laptop_cf_31: promises = "(Uncommented promise of type <i>files</i> made by: /home/backup..) (promise_laptop_cf_31)"]
[_home_backup: promisers = "/home/backup"]
[_usb_backup_device_loaded: contexts = "!usb_backup_device_loaded"]
[promise_laptop_cf_22: promises = "(Uncommented promise of type <i>files</i> made by: /media/disk-1/CfengineBac..) (promise_laptop_cf_22)"]
[_media_disk_1_CfengineBackupDevice: promisers = "/media/disk-1/CfengineBackupDevice"]
[usb_backup_device_loaded: contexts = "usb_backup_device_loaded"]
[promise_laptop_cf_6: promises = "(Uncommented promise of type <i>vars</i> made by: mount_point..) (promise_laptop_cf_6)"]
[mount_point: promisers = "mount_point"]
[laptop: bundles = "laptop"]
[promise_library_cf_206: promises = "(Uncommented promise of type <i>reports</i> made by: Added a 5 minute schedule..) (promise_library_cf_206)"]
[Added_a_5_minute_schedule_to_crontabs: promisers = "Added a 5 minute schedule to crontabs"]
[promise_library_cf_200: promises = "(Uncommented promise of type <i>replace_patterns</i> made by: cfexecd..) (promise_library_cf_200)"]
[cfexecd: promisers = "cfexecd"]

[is_a_variant_of = "is a variant of" 
          = "is a variant of" / promisers]


[is_a_component_of = "is a component of" 
          = "has component" / cfengine_components]

[promise_library_cf_196: promises = "(Uncommented promise of type <i>insert_lines</i> made by: 0,5,10,15,20,25,30,35,40,..) (promise_library_cf_196)"]
[0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F: promisers = "0,5,10,15,20,25,30,35,40,45,50,55 * * * * /var/cfengine/bin/cf-execd -F"]
[upgrade_cfexecd: bundles = "upgrade_cfexecd"]
[promise_library_cf_171: promises = "(Uncommented promise of type <i>delete_lines</i> made by: $(regex)..) (promise_library_cf_171)"]
[__regex_: promisers = "$(regex)"]
[DeleteLinesMatching: bundles = "DeleteLinesMatching"]
[promise_library_cf_119: promises = "(Uncommented promise of type <i>field_edits</i> made by: NETCONFIG_DNS_STATIC_SEAR..) (promise_library_cf_119)"]
[NETCONFIG_DNS_STATIC_SEARCHLIST__: promisers = "NETCONFIG_DNS_STATIC_SEARCHLIST.*"]
[promise_library_cf_111: promises = "(Uncommented promise of type <i>vars</i> made by: search..) (promise_library_cf_111)"]
[search: promisers = "search"]
[resolver: bundles = "resolver"]
[promise_site_cf_422: promises = "(Uncommented promise of type <i>roles</i> made by: .*..) (promise_site_cf_422)"]
[roles: promise_types = "roles"]

[is_promised_in_bundle = "is promised in bundle" 
          = "is a bundle with promises of type" / bundles]


[are_identified_in = "are identified in" 
          = "play different" / promise_theory]


[are_recurring_patterns_of = "are recurring patterns of" 
          = "define" / promise_theory]

[__: promisers = ".*"]
[promise_site_cf_418: promises = "(Uncommented promise of type <i>access</i> made by: /home/mark/.cfagent/bin/c..) (promise_site_cf_418)"]
[_home_mark__cfagent_bin_cf_agent: promisers = "/home/mark/.cfagent/bin/cf-agent"]
[promise_site_cf_414: promises = "(Uncommented promise of type <i>access</i> made by: /home/mark/LapTop..) (promise_site_cf_414)"]
[_home_mark_LapTop: promisers = "/home/mark/LapTop"]
[access_rules: bundles = "access_rules"]
[promise_site_cf_401: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous low entropy (3d..) (promise_site_cf_401)"]
[Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_icmp_in__av___mon_average_icmp_in__pm___mon_stddev_icmp_in_: promisers = "Anomalous low entropy (3dev) incoming ICMP traffic on $(mon.host) at $(mon.env_time) 
    - measured value $(mon.value_icmp_in) av $(mon.average_icmp_in) pm $(mon.stddev_icmp_in)"]
[anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high: contexts = "anomaly_hosts.icmp_in_high_anomaly.!entropy_icmp_in_high"]
[promise_site_cf_394: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous (2dev) incoming..) (promise_site_cf_394)"]
[Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_udp_in__av___mon_average_udp_in__pm___mon_stddev_udp_in_: promisers = "Anomalous (2dev) incoming (non-DNS) UDP traffic on $(mon.host) at $(mon.env_time) 
    - measured value $(mon.value_udp_in) av $(mon.average_udp_in) pm $(mon.stddev_udp_in)"]
[entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2: contexts = "entropy_dns_in_low.anomaly_hosts.udp_in_high_dev2"]
[promise_site_cf_387: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous (3dev) incoming..) (promise_site_cf_387)"]
[Anomalous__3dev__incoming_DNS_packets_on___mon_host__at___mon_env_time_________measured_value___mon_value_dns_in__av___average_dns_in__pm___mon_stddev_dns_in_: promisers = "Anomalous (3dev) incoming DNS packets on $(mon.host) at $(mon.env_time) 
    - measured value $(mon.value_dns_in) av $(average_dns_in) pm $(mon.stddev_dns_in)"]
[entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly: contexts = "entropy_dns_in_low.anomaly_hosts.dns_in_high_anomaly"]
[promise_site_cf_380: promises = "(Uncommented promise of type <i>reports</i> made by: Anomalous number of new T..) (promise_site_cf_380)"]
[Anomalous_number_of_new_TCP_connections_on___mon_host__at___mon_env_time_________measured_value___mon_value_tcpsyn_in__av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_: promisers = "Anomalous number of new TCP connections on $(mon.host) at $(mon.env_time) 
    - measured value $(mon.value_tcpsyn_in) av $(mon.average_tcpsyn_in) pm $(mon.stddev_tcpsyn_in)"]
[entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2: contexts = "entropy_tcpsyn_in_low.anomaly_hosts.tcpsyn_in_high_dev2"]
[promise_site_cf_373: promises = "(Uncommented promise of type <i>reports</i> made by: LOW ENTROPY Incoming www ..) (promise_site_cf_373)"]
[LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_: promisers = "LOW ENTROPY Incoming www anomaly high anomaly dev!! on $(mon.host) at $(mon.env_time)
     - measured value $(svalue_www_in) av $(average_www_in) pm $(stddev_www_in)"]
[entropy_www_in_low_anomaly_hosts_www_in_high_anomaly: contexts = "entropy_www_in_low.anomaly_hosts.www_in_high_anomaly"]
[promise_site_cf_366: promises = "(Uncommented promise of type <i>reports</i> made by: HIGH ENTROPY Incoming www..) (promise_site_cf_366)"]
[HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___mon_value_www_in__av___mon_average_www_in__pm___mon_stddev_www_in_: promisers = "HIGH ENTROPY Incoming www anomaly high anomaly dev!! on $(mon.host) at $(mon.env_time) 
    - measured value $(mon.value_www_in) av $(mon.average_www_in) pm $(mon.stddev_www_in)"]
[entropy_www_in_high_anomaly_hosts_www_in_high_anomaly: contexts = "entropy_www_in_high&anomaly_hosts.www_in_high_anomaly"]
[promise_site_cf_359: promises = "(Uncommented promise of type <i>reports</i> made by: RootProc anomaly high 2 d..) (promise_site_cf_359)"]
[RootProc_anomaly_high_2_dev_on___mon_host__at___mon_env_time_______measured_value___mon_value_rootprocs__av___mon_average_rootprocs__pm___mon_stddev_rootprocs_: promisers = "RootProc anomaly high 2 dev on $(mon.host) at $(mon.env_time) 
    measured value $(mon.value_rootprocs) av $(mon.average_rootprocs) pm $(mon.stddev_rootprocs)"]
[rootprocs_high_dev2: contexts = "rootprocs_high_dev2"]
[_tmp_shadow: promisers = "/tmp/shadow"]
[promise_site_cf_349: promises = "(Uncommented promise of type <i>files</i> made by: /tmp/passwd..) (promise_site_cf_349)"]
[_tmp_passwd: promisers = "/tmp/passwd"]
[_var_cfengine_inputs_shadow: promisers = "/var/cfengine/inputs/shadow"]
[promise_site_cf_343: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/pass..) (promise_site_cf_343)"]
[files: promise_types = "files"]
[_var_cfengine_inputs_passwd: promisers = "/var/cfengine/inputs/passwd"]
[promise_site_cf_331: promises = "(Uncommented promise of type <i>vars</i> made by: files..) (promise_site_cf_331)"]
[files: promisers = "files"]
[promise_site_cf_330: promises = "(Uncommented promise of type <i>vars</i> made by: sysdir..) (promise_site_cf_330)"]
[sysdir: promisers = "sysdir"]
[anomalies: bundles = "anomalies"]
[promise_site_cf_321: promises = "(Uncommented promise of type <i>reports</i> made by: I am alive..) (promise_site_cf_321)"]
[I_am_alive: promisers = "I am alive"]
[free_disk_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /bin/df..) (free_disk_watch)"]
[_bin_df: promisers = "/bin/df"]
[apache_watch_memory: promises = "(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_pr..) (apache_watch_memory)"]
[apache_watch_cpu: promises = "(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_pr..) (apache_watch_cpu)"]
[_var_cfengine_state_cf_procs: promisers = "/var/cfengine/state/cf_procs"]
[free_memory_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /proc/meminfo..) (free_memory_watch)"]
[_proc_meminfo: promisers = "/proc/meminfo"]
[linux: contexts = "linux"]
[monitor_self_watch: promises = "(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_ro..) (monitor_self_watch)"]
[_var_cfengine_state_cf_rootprocs: promisers = "/var/cfengine/state/cf_rootprocs"]
[atlas: contexts = "atlas"]
[watch: bundles = "watch"]
[promise_site_cf_210: promises = "(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf\..*..) (promise_site_cf_210)"]
[_etc_resolv_conf____: promisers = "/etc/resolv.conf\..*"]
[promise_site_cf_204: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/outputs..) (promise_site_cf_204)"]
[_var_cfengine_outputs: promisers = "/var/cfengine/outputs"]
[garbage_collection: bundles = "garbage_collection"]
[promise_site_cf_177: promises = "Update the locate database (promise_site_cf_177)"]
[_usr_bin_updatedb___prunepaths__windows: promisers = "/usr/bin/updatedb --prunepaths=/windows"]
[Hr12: contexts = "Hr12"]
[promise_site_cf_171: promises = "(Uncommented promise of type <i>commands</i> made by: /etc/init.d/mysql start..) (promise_site_cf_171)"]
[_etc_init_d_mysql_start: promisers = "/etc/init.d/mysql start"]
[start_mysqld: contexts = "start_mysqld"]
[promise_site_cf_163: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..) (promise_site_cf_163)"]
[promise_site_cf_155: promises = "(Uncommented promise of type <i>processes</i> made by: mysql..) (promise_site_cf_155)"]
[mysql: promisers = "mysql"]

[is_managed_by = "is managed by" 
          = "may be used to manage" / promise_types]

[promise_site_cf_152: promises = "(Uncommented promise of type <i>processes</i> made by: cf-monitord..) (promise_site_cf_152)"]
[promise_site_cf_138: promises = "Lay a tripwire for change management (promise_site_cf_138)"]
[_tmp_testfile2: promisers = "/tmp/testfile2"]
[promise_site_cf_131: promises = "(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf..) (promise_site_cf_131)"]
[_etc_resolv_conf: promisers = "/etc/resolv.conf"]
[promise_site_cf_123: promises = "(Uncommented promise of type <i>reports</i> made by: Laptop wakes up..) (promise_site_cf_123)"]
[Laptop_wakes_up: promisers = "Laptop wakes up"]
[_up_and_running: contexts = "!up_and_running"]
[promise_site_cf_114: promises = "(Uncommented promise of type <i>vars</i> made by: component..) (promise_site_cf_114)"]
[component: promisers = "component"]
[main: bundles = "main"]
[promise_site_cf_101: promises = "(Uncommented promise of type <i>processes</i> made by: cron..) (promise_site_cf_101)"]
[cron: promisers = "cron"]
[exec_fix: contexts = "exec_fix"]
[promise_site_cf_93: promises = "This is inaccessible in new suse after cd opened/closed (promise_site_cf_93)"]
[_dev_sr0: promisers = "/dev/sr0"]
[promise_site_cf_81: promises = "Check if there are still promises about cfengine 2 that need removing (promise_site_cf_81)"]
[_var_cfengine_inputs___: promisers = "/var/cfengine/inputs/.*"]
[promise_site_cf_74: promises = "Test change detection (promise_site_cf_74)"]
[_usr_bin: promisers = "/usr/bin"]
[promise_site_cf_64: promises = "(Uncommented promise of type <i>commands</i> made by: /usr/sbin/ntpdate no.pool..) (promise_site_cf_64)"]
[_usr_sbin_ntpdate_no_pool_ntp_org: promisers = "/usr/sbin/ntpdate no.pool.ntp.org"]
[run_agent: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cfagent..) (run_agent)"]
[_var_cfengine_bin_cfagent: promisers = "/var/cfengine/bin/cfagent"]
[integrate_cfengine2: contexts = "integrate_cfengine2"]
[promise_site_cf_42: promises = "(Uncommented promise of type <i>vars</i> made by: cf2bits..) (promise_site_cf_42)"]
[cf2bits: promisers = "cf2bits"]
[cfengine: bundles = "cfengine"]
[promise_site_cf_19: promises = "(Uncommented promise of type <i>vars</i> made by: crontab..) (promise_site_cf_19)"]
[_SuSE: contexts = "!SuSE"]
[promise_site_cf_15: promises = "(Uncommented promise of type <i>vars</i> made by: acl..) (promise_site_cf_15)"]
[acl: promisers = "acl"]

[is_a_possible_body_constraint_for = "is a possible body constraint for" 
          = "can have body constraints" / promise_types]

[promise_site_cf_13: promises = "(Uncommented promise of type <i>vars</i> made by: crontab..) (promise_site_cf_13)"]
[crontab: promisers = "crontab"]
[SuSE: contexts = "SuSE"]
[g: bundles = "g"]
[promise_update_cf_45: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-exec..) (promise_update_cf_45)"]
[_var_cfengine_bin_cf_execd: promisers = "/var/cfengine/bin/cf-execd"]
[reload_start_exec: contexts = "reload.start_exec"]
[promise_update_cf_41: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..) (promise_update_cf_41)"]
[_var_cfengine_bin_cf_monitord: promisers = "/var/cfengine/bin/cf-monitord"]
[reload_start_monitor: contexts = "reload.start_monitor"]
[promise_update_cf_37: promises = "(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..) (promise_update_cf_37)"]
[_var_cfengine_bin_cf_serverd: promisers = "/var/cfengine/bin/cf-serverd"]
[reload_start_server: contexts = "reload.start_server"]
[promise_update_cf_31: promises = "(Uncommented promise of type <i>processes</i> made by: cf-execd..) (promise_update_cf_31)"]
[cf_execd: promisers = "cf-execd"]
[promise_update_cf_30: promises = "(Uncommented promise of type <i>processes</i> made by: cf-monitord..) (promise_update_cf_30)"]
[cf_monitord: promisers = "cf-monitord"]
[promise_update_cf_29: promises = "(Uncommented promise of type <i>processes</i> made by: cf-serverd..) (promise_update_cf_29)"]
[cf_serverd: promisers = "cf-serverd"]
[promise_update_cf_21: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/bin..) (promise_update_cf_21)"]
[_var_cfengine_bin: promisers = "/var/cfengine/bin"]
[promise_update_cf_13: promises = "(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs..) (promise_update_cf_13)"]
[files: promise_types = "files"]
[_var_cfengine_inputs: promisers = "/var/cfengine/inputs"]
[promise_update_cf_7: promises = "(Uncommented promise of type <i>vars</i> made by: master_location..) (promise_update_cf_7)"]
[master_location: promisers = "master_location"]
[any: contexts = "any"]
[update: bundles = "update"]
[system_outputs: mission_status = "Messages sent by cfengine to the operators as a matter of policy. (system outputs)"]
[host_portal: mission_status = "Portal to access mission status, monitored host data (host portal)"]
[system_reports: mission_status = "Reports from around the system (system reports)"]
[system_policy: mission_status = "Local policy description with comments and dependencies (system policy)"]
[suppliers: manager_view = "Contact information and web pages (suppliers)"]
[current_projects: manager_view = "Team projects and service (current projects)"]
[work_shifts: manager_view = "Staff rotas (work shifts)"]
[service_level_agreements: manager_view = "Promises made to clients about services (service level agreements)"]
[software_licenses: manager_view = "Terms of agreements, and renewal status (software licenses)"]

[are_reported_in = "are reported in" 
          = "reports on" / system_reports]

[request_for_change: manager_view = "(RFC) The initial proposal for an intended change of system policy. (request for change)"]

[might_be_an_example_of = "might be an example of" 
          = "might be a" / promise_theory]


[are_a_basis_for = "are a basis for" 
          = "uses" / management_issues]

[security_routines_and_procedures: security_view = "Non-automated, human workbook (security routines and procedures)"]
[security_policy: security_view = "Local risk assessment summary (security policy)"]
[quality_assurance: architect_view = "Procedures for review (quality assurance)"]
[mission_statement: architect_view = "Business objectives (mission statement)"]
[security_view: views = "security view"]

[contains_a_current_summary_of = "contains a current summary of" 
          = "is a resource for" / system_reports]

[operator_view: views = "operator view"]

[finds_documentation_in = "finds documentation in" 
          = "provides documentation for" / system_knowledge]


[see_policy_defined_events_in = "see policy-defined events in" 
          = "are an aspect of" / mission_status]


[see_software_state = "see software state" 
          = "is a resource for" / system_reports]


[see_promise_cost_in = "see promise cost in" 
          = "is a resource for" / system_reports]


[recent_compliance_at = "recent compliance at" 
          = "is a resource for" / system_reports]


[displays_communications_summary_in = "displays communications summary in" 
          = "is a resource for" / system_reports]


[displays_operational_goals_in = "displays operational goals in" 
          = "is a resource for" / mission_status]


[has_open_tickets_under = "has open tickets under" 
          = "is a resource for" / technical_concepts]


[displays_operational_state_in = "displays operational state in" 
          = "is a resource for" / mission_status]

[manager_view: views = "manager view"]

[needs_an_appreciation_of = "needs an appreciation of" 
          = "is an aspect of" / system_knowledge]


[sees_the_catalogue_of = "sees the catalogue of" 
          = "are an aspect of" / system_knowledge]


[is_responsible_for = "is responsible for" 
          = "are an aspect of" / system_knowledge]

[architect_view: views = "architect view"]

[designs = "designs" 
          = "is designed by" / mission_status]


[has_reference_support_in = "has reference support in" 
          = "is a resource for" / system_knowledge]


[depends_on_environmental = "depends on environmental" 
          = "are an aspect of" / system_policy]


[is_about_plotting = "is about plotting" 
          = "is an aspect of" / mission_status]


[is_informed_by = "is informed by" 
          = "are an aspect of" / system_knowledge]


[planning_the_system_lifecycle = "planning the system lifecycle" 
          = "is an aspect of" / models_of_system_administration]

[mission_status: system_knowledge = "Overview of IT operations (mission status)"]

[may_be_seen_from = "may be seen from" 
          = "is a viewpoint on" / views]

[views: system_knowledge = "Roles for IT stakeholders (views)"]
[management_issues: system_knowledge = "The main areas of management (management issues)"]
[ontology: system_knowledge = "Main index (ontology)"]
[copernicus: system_knowledge = "Cfengine's online support knowledge base (copernicus)"]
[machine_resources: system_knowledge = "An inventory of physical and virtual resources (machine resources)"]
[server_lifecycle: system_knowledge = "From creation to update and eventual reinstallation (server lifecycle)"]

[is_modelled_by = "is modelled by" 
          = "is a model for" / models_of_system_administration]

[service_catalogue: system_knowledge = "The basic service promises of the system (service catalogue)"]

[is_a_list_of = "is a list of" 
          = "are described in" / promise_theory]


[promises_are_implemented_as = "promises are implemented as" 
          = "implement" / system_policy]

[system_trends: system_knowledge = "Long term performance data about the system. (system trends)"]
[system_reports: system_knowledge = "Reports generated by cfengine (system reports)"]
[hosts: machine_resources = "A general term for computers that run applications of any kind (hosts)"]

[form_the_bulk_of = "form the bulk of" 
          = "are composed from" / system_knowledge]

[system_knowledge: Frequently_Asked_Topics = "Cfengine knowledge console (system knowledge)"]
[security: Frequently_Asked_Topics = "Defending an acceptable level of risk (security)"]
[management_issues: Frequently_Asked_Topics = "Decision making support (management issues)"]
[operating_systems: Frequently_Asked_Topics = "System software (operating systems)"]
[Frequently_Asked_Topics = "Frequently Asked Topics"]
[linear_topic_map_notation: topic_maps = "linear topic map notation"]
[the_tao: topic_maps = "topics, associations and occurrences (the tao)"]
[lvalue: body_constraint = "lvalue"]
[rvalue: body_constraint = "rvalue"]
[voluntary_cooperation: promise_theory = "voluntary cooperation"]
[roles: promise_theory = "roles"]
[versions: promise_theory = "versions"]

[label_variations_in = "label variations in" 
          = "vary according to" / promise_theory]

[dependencies: promise_theory = "dependencies"]

[result_in = "result in" 
          = "require the use of" / promise_theory]

[workflows: promise_theory = "workflows"]

[are_formed_by_associating = "are formed by associating" 
          = "combine into" / promise_theory]

[stories: promise_theory = "stories"]

[can_talk_about = "can talk about" 
          = "can be the subject of" / promise_theory]

[services: promise_theory = "services"]
[communicated_information: promise_theory = "communicated information"]
[subjects: promise_theory = "An abstraction for any things that can be discussed (subjects)"]

[are_represented_as = "are represented as" 
          = "are knowledge-map instances of" / promise_theory]

[occurrences: promise_theory = "occurrences"]

[are_classified_into_disjoint = "are classified into disjoint" 
 = "are disjoint classes of" / unknown_association_counterpart]

[is_a_body_constraint_of_type = "is a body constraint of type" 
 = "has possible body constraints" / unknown_association_counterpart]

[is_a_possible_sub_body_constraint_for = "is a possible sub-body constraint for" 
          = "may have sub-body constraints" / body_constraints]

[occurrence_types: promise_theory = "occurrence-types"]

[are_also_called = "are also called" 
 = "might be called" / unknown_association_counterpart]
[topic_instances: promise_theory = "topic-instances"]

[are_simply_called = "are simply called" 
          = "might be called" / promise_theory]


[are_realizations_of = "are realizations of" 
          = "are discussed in" / promise_theory]

[type_instances: promise_theory = "type-instances"]

[is_another_term_for = "is another term for" 
          = "may be described as" / promise_theory]

[associations: promise_theory = "associations"]

[form_networks_of = "form networks of" 
          = "are inter-related through" / promise_theory]


[represent = "represent" 
          = "can be represented as" / promise_theory]

[structural_relationships: promise_theory = "structural relationships"]
[location_relationships: promise_theory = "location relationships"]
[causative_relationships: promise_theory = "causative relationships"]
[conceptual_relationships: promise_theory = "conceptual relationships"]
[actions: promise_theory = "actions"]

[can_be_the_subject_of = "can be the subject of" 
          = "can talk about" / promise_theory]

[behaviours: promise_theory = "behaviours"]
[facts: promise_theory = "facts"]
[topics: promise_theory = "topics"]

[can_be_classified_into_disjoint = "can be classified into disjoint" 
 = "are disjoint classes of" / unknown_association_counterpart]

[can_be_combined_into = "can be combined into" 
          = "can be broken down into" / promise_theory]

[topic_types: promise_theory = "topic-types"]
[body_constraint: promise_theory = "body-constraint"]

[describes_the_extent__or_quantity__of_a = "describes the extent (or quantity) of a" 
 = "is quantified by its" / unknown_association_counterpart]
[body_type: promise_theory = "body-type"]

[describes_the_subject__nature_or_quality__of_a = "describes the subject (nature or quality) of a" 
          = "is qualified by its" / promise_theory]

[promise_body: promise_theory = "promise body"]

[has_attribute = "has attribute" 
          = "is an attribute of" / promise_theory]

[promise_type: promise_theory = "promise-type"]

[has_instances = "has instances" 
 = "is an instance of" / unknown_association_counterpart]

[describes_the_nature__or_quality__of_a = "describes the nature (or quality) of a" 
 = "is qualified by its" / unknown_association_counterpart]
[promisee: promise_theory = "promisee"]

[is_the_recipient_of = "is the recipient of" 
 = "is made to a" / unknown_association_counterpart]
[promiser: promise_theory = "promiser"]

[makes_a = "makes a" 
 = "is made by a" / unknown_association_counterpart]
[announcements: promise_theory = "announcements"]

[are_a_form_of = "are a form of" 
          = "includes" / promise_theory]

[conditional_promises: promise_theory = "conditional promises"]

[are_completed_by = "are completed by" 
 = "complete" / unknown_association_counterpart]
[promises: promise_theory = "promises"]

[can_be_made_about = "can be made about" 
          = "can be the subject of" / promise_theory]


[reveal = "reveal" 
          = "are revealed in the form of" / promise_theory]

[promise_proposals: promise_theory = "promise proposals"]
[policy: promise_theory = "A declared set of intentions describing how systems should behave (policy)"]

[is_a_collection_of = "is a collection of" 
          = "combine into" / promise_theory]

[bundles: promise_theory = "bundles"]

[are_collections_of = "are collections of" 
          = "combine to form" / promise_theory]

[intentions: promise_theory = "intentions"]
[agents: promise_theory = "agents"]
[convergence: convergent_operators = "The idea that we always move closer to the desired state of a system on every promise verification. Once the desired state has been reached, the state hsa converged and no further changes take place. Normally convergence to the desired state happens in a single repair, unless there are dependencies that cannot be resolved. Convergence is a stronger constraint on system behaviour than idempotence. (convergence)"]

[is_related_to = "is related to" 
 = "is related to" / unknown_association_counterpart]
[idempotence: convergent_operators = "Idempotence is a mathematical property of operations or changes. An operator is idempotent if applying it twice is the same as applying it once. This is not the same as convergence, because the result need not be anchored to anything. e.g. <pre>touch myfile</pre> is idempotent but it is not a fixed point because its effect depends on which directory the operation is performed in. <pre>touch /tmp/myfile</pre> is convergent. (idempotence)"]
[overlapping_sets: models_of_organization = "overlapping sets"]
[cascading: models_of_organization = "cascading"]
[object_paradigm: models_of_organization = "object paradigm"]
[aspect_paradigm: models_of_organization = "aspect paradigm"]
[service_orientation: models_of_organization = "service orientation"]
[hierarchical_structure: models_of_organization = "hierarchical structure"]
[peer_to_peer_network: models_of_organization = "peer to peer network"]
[heterogeneous_system: models_of_organization = "heterogeneous system"]
[homogeneous_system: models_of_organization = "homogeneous system"]
[pattern_matching: models_of_knowledge = "Classifying items by the patterns they form (pattern matching)"]
[topic_maps: models_of_knowledge = "ISO standard electronic index with semantic annotations (topic maps)"]
[self_healing: models_of_system_administration = "System exhibiting automated repair and maintenance (self-healing)"]

[improves = "improves" 
          = "is improved by" / technical_concepts]

[autonomics: models_of_system_administration = "autonomics"]
[computer_immunology: models_of_system_administration = "computer immunology"]
[convergent_operators: models_of_system_administration = "convergent operators"]

[implement = "implement" 
          = "is implemented by" / convergent_operators]

[promise_theory: models_of_system_administration = "promise theory"]

[is_implemented_in = "is implemented in" 
          = "is the reference implementation of" / bundles]

[BDMA: models_of_system_administration = "Build, Deploy, Manage, Audit, system lifecycle (BDMA)"]
[audit: BDMA = "Traditionally servers needed to be audited to determine their actual state. Under cfengine, auditing simply means generating summary reports about recent compliance or repair operations. (audit)"]

[consists_of = "consists of" 
          = "are an aspect of" / mission_status]

[manage: BDMA = "Traditionally servers needed to be managed by responding to incidents. Under cfengine indicdents are repaired automatically and management is chiefly about observing and diving the success of the current system policy. (manage)"]
[deploy: BDMA = "Traditionally servers were deployed by pushing out a cloned image. Under cfengine the deployment of policy just means publishing a new version of policy on a policy server. (deploy)"]

[makes_use_of = "makes use of" 
          = "can be used as part of" / promise_types]

[build: BDMA = "Also called "provisioning" systems, i.e. the process of specifying and assembling the resources to fulfill a set of system promises. Traditionally servers were built as a "golden image" for cloning. Under cfengine, the build phase of the server lifecycle involves planning policy for the desired-state. Installation may also be considered a part of the build process. (build)"]

[bare_metal_installation_with = "bare metal installation with" 
          = "can be used as part of" / boot_services]

[inventory: management_issues = "List of items within a datacenter, e.g. servers, applications, services. Expressed in terms of a static database that is being updated every now on then, depending on how often you scan the network. Cfengine holds accurate inventory lists and reports can easily be created on the fly. Cfengine dosen’t hold any static database that requires frequent scan (that takes a lot of resources) to describe the inventory. (inventory)"]
[system_discovery: management_issues = "The ability to detect new items (see CIs) in a datacenter. Cfengine recognizes new items on the fly and you can have them reported automatically. No need for data mining or guesses. (system discovery)"]
[configuration_management: management_issues = "The ability to configure a Datacenter through configuration settings. This is the core of Cfengine. Cfengine comes with many advanced tools to ease the configuration of Datacenters and have it self-repair according the settings you define. See also Configuration Items (CIs), Change Management. (configuration management)"]
[change_management: management_issues = "The ability to trace, log and manipulate change in files. Whenever a change occurs in a file, this probably affects some other parts of the system. The ability to track, log and potentially restore changes are important for many purposes. (change management)"]

[may_be_implemented_by = "may be implemented by" 
          = "implements" / procedures]

[reporting: management_issues = "Extracting information in human readable form (reporting)"]
[application_management: management_issues = "Deploying and patching applications, inclding the ability to configure specific applications, like Apache-servers, Microsoft Exchange, etc. (application management)"]
[release_management: management_issues = "The process of preparing for major changes to policy or enterprise activity. (release management)"]
[incident_management: management_issues = "Repairing policy violations (incident management)"]

[see_also = "see also" 
          = "see also" / manual]

[management_terminology: management_issues = "management terminology"]
[knowledge_management: management_issues = "knowledge management"]
[identity_management: management_issues = "Managing user credentials (identity management)"]
[storage_management: management_issues = "Disk volumes, primary, redundant and secondary storage (backup) (storage management)"]
[capacity_planning: management_issues = "Sometimes called dimensioning or service provisioning. Determining whether sufficient resources will be available to deliver planned services (capacity planning)"]
[compliance: management_issues = "Frameworks for standardizing and regulating systems (compliance)"]

[is_documented_by = "is documented by" 
          = "documents" / manual]

[team_work: management_issues = "Focused group in a flat organization for efficient communication and decision-making (team work)"]
[maintenance_paradigms: management_issues = "Approaches to keeping systems in an operational state (maintenance paradigms)"]
[business_value: management_issues = "business value"]

[is_improved_by = "is improved by" 
          = "improves" / models_of_system_administration]

[anomaly_detection: monitoring = "anomaly detection"]
[models_of_organization: research = "models of organization"]
[models_of_knowledge: research = "models of knowledge"]
[models_of_system_administration: research = "models of system administration"]
[phone_number_mobile: Contact_Information = "phone number mobile"]
[phone_number_office: Contact_Information = "phone number office"]
[website: Contact_Information = "website"]
[home_page: Contact_Information = "home page"]
[email_address: Contact_Information = "email address"]
[gentoo: operating_systems = "Linux distro gentoo (gentoo)"]

[is_distro_of = "is distro of" 
          = "has distro" / contexts]

[slackware: operating_systems = "Linux distro slackware (slackware)"]
[debian: operating_systems = "Linux distro debian (debian)"]
[redhat: operating_systems = "Linux distro redhat (redhat)"]
[fedora: operating_systems = "Linux distro fedora (fedora)"]
[ubuntu: operating_systems = "Linux distro ubuntu (ubuntu)"]
[suse: operating_systems = "Linux distro suse (suse)"]
[darwin: operating_systems = "darwin"]
[windows: operating_systems = "windows"]
[distro: operating_systems = "distro"]

[is_a_packaging_of = "is a packaging of" 
          = "is packaged as a" / contexts]

[crayos: operating_systems = "crayos"]
[netbsd: operating_systems = "netbsd"]
[openbsd: operating_systems = "openbsd"]
[freebsd: operating_systems = "freebsd"]
[irix: operating_systems = "irix"]
[ultrix: operating_systems = "ultrix"]
[aix: operating_systems = "aix"]
[macos_X: operating_systems = "macos X"]
[sunos: operating_systems = "sunos"]
[solaris: operating_systems = "solaris"]

[is_a_current_name_for = "is a current name for" 
          = "is recently called" / operating_systems]

[gnu_linux: operating_systems = "gnu/linux"]
[linux: operating_systems = "linux"]
[cfengine_2_control_settings: cfengine_2 = "Parameters that affect the behaviour of the agent rather than affect the system configuration. (cfengine 2 control settings)"]
[__cf2_actions_: cfengine_2 = "$(cf2_actions)"]

[is_a_promise_type_in = "is a promise type in" 
          = "has promise types" / cfengine_components]

[__nova_actions_: cfengine_3 = "$(nova_actions)"]
[__cf3_actions_: cfengine_3 = "$(cf3_actions)"]
[rlist: cfengine_3 = "rlist"]

[is_a_list_of_type = "is a list of type" 
          = "is used in" / values]

[real: cfengine_3 = "real"]
[ilist: cfengine_3 = "ilist"]
[int: cfengine_3 = "int"]
[slist: cfengine_3 = "slist"]
[string: cfengine_3 = "string"]
[enterprise_level_cfengine: cfengine_components = "enterprise level cfengine"]
[cfengine_3_0_x: cfengine_components = "cfengine version (cfengine 3.0.x)"]

[is_a_version_of = "is a version of" 
          = "has version" / bundles]

[cfengine_2_2_x: cfengine_components = "cfengine version (cfengine 2.2.x)"]
[cfengine_nova: cfengine_components = "cfengine version (cfengine nova)"]
[cfengine_3: cfengine_components = "cfengine 3"]
[cfengine_2: cfengine_components = "cfengine 2"]
[cfengine_1: cfengine_components = "cfengine 1"]
[cf_report: cfengine_components = "cf-report"]
[cf_know: cfengine_components = "cf-know"]
[cf_runagent: cfengine_components = "cf-runagent"]
[cf_monitord: cfengine_components = "cf-monitord"]
[cf_execd: cfengine_components = "cf-execd"]
[cf_serverd: cfengine_components = "cf-serverd"]
[cf_agent: cfengine_components = "cf-agent"]
[cf_promises: cfengine_components = "cf-promises"]
[cfd: cfengine_components = "cfd"]
[cfenvgraph: cfengine_components = "cfenvgraph"]
[cfshow: cfengine_components = "cfshow"]
[cfrun: cfengine_components = "cfrun"]
[cfenvd: cfengine_components = "cfenvd"]
[cfexecd: cfengine_components = "cfexecd"]
[cfservd: cfengine_components = "cfservd"]
[cfagent: cfengine_components = "cfagent"]
[cfengine_components: technical_concepts = "cfengine components"]
[data_types: technical_concepts = "data types"]
[versions: technical_concepts = "versions"]
[global_variables: technical_concepts = "global variables"]

[explained_in = "explained in" 
 = "comments on" / unknown_association_counterpart]
[lists: technical_concepts = "lists"]
[functions: technical_concepts = "functions"]
[arrays: technical_concepts = "arrays"]

[are_a_special_case_of = "are a special case of" 
          = "see also" / technical_concepts]

[variables: technical_concepts = "variables"]

[are_promised_by = "are promised by" 
          = "are promises about" / promise_types]

[template: technical_concepts = "template"]
[modules: technical_concepts = "modules"]
[distributed_system: technical_concepts = "distributed system"]
[research: technical_concepts = "Cfengine research (research)"]
[files: technical_concepts = "Notable or special files and types (files)"]
[entropy: technical_concepts = "A measure of the variation in an observation (entropy)"]
[intermittency: technical_concepts = "The entropy of availability of a service (intermittency)"]
[faults: technical_concepts = "Error messages and conditions (faults)"]
[software: technical_concepts = "software"]
[crises_and_fire_fighting: technical_concepts = "crises and fire fighting"]
[unusual_operational_behaviour: technical_concepts = "unusual operational behaviour"]
[normal_operational_behaviour: technical_concepts = "normal operational behaviour"]
[budget: technical_concepts = "budget"]

[is_an_aspect_of = "is an aspect of" 
          = "in ITIL is called" / management_terminology]

[availability: technical_concepts = "availability"]
[reliability: technical_concepts = "reliability"]
[rollback: technical_concepts = "Refers to the fictitious ability to perform an undo operation in change management (rollback)"]
[redundancy: technical_concepts = "redundancy"]
[resources: technical_concepts = "resources"]
[symptoms: technical_concepts = "symptoms"]
[automation: technical_concepts = "automation"]
[tamperproof_system: security = "tamperproof system"]
[lastseen: security = "lastseen"]
[instrumentation: security = "instrumentation"]
[friend_status: security = "friend status"]
[role_based_access_control: security = "role based access control"]
[checksums: security = "checksums"]
[hash: security = "hash"]
[hashes: security = "hashes"]
[digest: security = "digest"]
[digests: security = "digests"]
[key_exchange: security = "key exchange"]
[trusted_third_party: security = "trusted third party"]
[firewalls: security = "firewalls"]
[trust_in_cfengine: security = "trust in cfengine"]
[DMZ: security = "DMZ"]
[publickeys: security = "publickeys"]
[private_keys: security = "private keys"]
[public_private_keys: security = "public private keys"]
[encryption: security = "encryption"]
[privacy: security = "privacy"]
[permission: security = "permission"]
[authentication: security = "authentication"]
[access_control: security = "access control"]

[implements = "implements" 
 = "may be implemented by" / unknown_association_counterpart]
[monitoring: environment = "Ability to monitor the current state of your datacenter. Cfengine can sample and trace behaviour. Unlike many other monitoring solutions, Cfengine scales easily to thousands of machines. Cfengine monitors your datacenter intelligently, using historic data to decide whether a behaviour should call for action or not. (monitoring)"]

[detects = "detects" 
 = "is detected by" / unknown_association_counterpart]

[contributes_to = "contributes to" 
          = "draws on data from" / system_knowledge]

[persistent_classes: environment = "persistent classes"]
[soft_classes: environment = "soft classes"]
[hard_classes: environment = "hard classes"]
[provisioning: management_terminology = "The ability to install and adopt new services, applications, OS and servers, e.g. using PXE-boot Cfengine can turn any server into anything kind of server with any kind of service running on it. Cfengine can easily deploy a service or new application throughout the datacenter, regardless of the number of servers. (provisioning)"]
[pre_screening: management_terminology = "The ability to foresee consequences of change. If you make a change one place, what’s the impact of the rest of the datacenter? Cfengine includes a dry-run mode which simulates the consequences of a change. (pre-screening)"]
[CI: management_terminology = "Configuration Items. Computer related items that can be configured. Items typically are servers, routers, switches, applications and storage devices. Cfengine can discover different types of CIs automatically, trace dependencies and make them available in reports through an online knowledge portal. (CI)"]

[is_an_object_for = "is an object for" 
          = "is about the management of" / management_issues]

[baseline: management_terminology = "Definition of what your system looks like or what it must look like. Many traditional vendors in the industry require a baseline to be able to roll out their system and get it running. In Cfengine, there is no need for a special baseline. Cfengine focuses on the opposite – the end state. (baseline)"]
[enterprise: management_terminology = "enterprise"]
[agreement: management_terminology = "agreement"]
[contract: management_terminology = "contract"]

[is_a_bilateral_bundle_of = "is a bilateral bundle of" 
 = "can be combined into a" / unknown_association_counterpart]
[SLA: management_terminology = "Service Level Agreement (SLA)"]

[is_an_example_of = "is an example of" 
 = "has exemplar" / unknown_association_counterpart]
[operations: management_terminology = "operations"]
[business_process: management_terminology = "business process"]
[FCAPS: management_terminology = "FCAPS"]
[budget: management_terminology = "budget"]
[CM: management_terminology = "CM"]

[is_the_ITIL_name_for = "is the ITIL name for" 
 = "in ITIL is called" / unknown_association_counterpart]
[gold_server: management_terminology = "gold server"]
[version_Control: management_terminology = "version Control"]
[teams: management_terminology = "teams"]
[teamwork: management_terminology = "teamwork"]
[departments: management_terminology = "departments"]
[authoring: management_terminology = "authoring"]
[adoption_of_cfengine: management_terminology = "adoption of cfengine"]
[road_map: management_terminology = "road map"]
[BDIM: management_terminology = "Business Driven IT Management (BDIM)"]
[auditing: compliance = "A process to verify that the datacenter operate according to the guidelines and legislations. A rapid growth in datacenter size and complexity, combined with government regulations, have called for a drastic increase in audits.  Cfengine comes with reporting and logging capabilties that make auditing straightforward. (auditing)"]
[CMDB: compliance = "Configuration Management Database. A form of extended inventort system, championed by ITIL. (CMDB)"]
[SAS_70: compliance = "Stands for Statement of Auditing Standards no. 70. SAS-70 is an auditing standard. SAS 70 defines the professional standards used by a service auditor to assess the internal controls of a service organization and issue a service auditor’s report. Cfengine can be used to ensure SAS-70 compliance in the same way you can achieve other standardization compliance. (SAS-70)"]

[is_a_framework_for_implementing = "is a framework for implementing" 
          = "falls within the bounds of" / compliance]

[EUROSOX: compliance = "The 8th EU data directive (EUROSOX)"]

[involves = "involves" 
          = "is a principal component of" / management_issues]

[SOX: compliance = "The Sarbanes-Oxley Act (SOX)"]

[corresponds_to = "corresponds to" 
          = "corresponds to" / compliance]

[eTOM: compliance = "The Extended Telecom Operations Map (eTOM)"]
[ISO_IEC_20000: compliance = "A standards document based on a subset of ITIL (ISO/IEC 20000)"]

[standardizes_a_part_of = "standardizes a part of" 
          = "expands on standard" / compliance]

[ITIL: compliance = "Stands for Information Technology Infrastructure Library. ITIL is a set of self-proclaimed best-practises originally developed by the British government. It contains a set of common sense rules. Cfengine can be used as a tool for organizations looking to becoming ITIL-compliant. By translating many of your best practises into policy rules, you can have Cfengine ensure parts of ITIL-compliance. (ITIL)"]
[access_to_file_not_granted: faults = "access to file not granted"]
[trustKeysFrom_not_set: faults = "trustKeysFrom not set"]
[allowMultipleConnectionsFrom_not_set: faults = "allowMultipleConnectionsFrom not set"]
[allowConnectionsFrom_not_set: faults = "allowConnectionsFrom not set"]
[bad_memory_reference: faults = "bad memory reference"]
[print_server_not_running: faults = "print server not running"]
[web_server_not_running: faults = "web server not running"]
[remote_connection_problem: faults = "remote connection problem"]
[segmentation_fault: faults = "segmentation fault"]

[possibly_caused_by = "possibly caused by" 
 = "possibly caused by" / unknown_association_counterpart]
[samba: storage = "The Unix service for integrating with MS Windows (samba)"]
[NFS: storage = "Network File System (storage) (NFS)"]
[oracle: database = "Commercial relational SQL database (oracle)"]
[postgres: database = "Open source relational SQL database engine for transaction processing (postgres)"]
[mysql: database = "Open source SQL database engine optimized for web (mysql)"]
[DHCP: directory_services = "An IP configuration service. (DHCP)"]
[NIS: directory_services = "Sun's Network Information Service (previously called Yellow Pages). (NIS)"]
[LDAP: directory_services = "A well-known directory service. MS Active Directory purports to support this standard. (LDAP)"]
[DNS: directory_services = "Domain Name Service for translating Internet addresses into hostnames and vice versa. (DNS)"]
[BOOTP: boot_services = "A simple broadcast protocol for booting a system directly from the network, e.g. for installation purposes. (BOOTP)"]
[PXE: boot_services = "A composite network service based on the PXE protocol, allows systems to boot directly from the network. (PXE)"]
[connectivity: network_services = "Cables and hardware (connectivity)"]
[routing: network_services = "Router and switch configuration (routing)"]
[login: application_services = "The ability to log onto systems with a username and password (login)"]
[database: application_services = "Relational database services (database)"]
[storage: application_services = "Remotely accessible disk volumes. (storage)"]
[directory_services: application_services = "Directory services are look-up services, typically with identity or host information. (directory services)"]
[web: application_services = "The WWW web service (web)"]
[configuration: application_services = "Cfengine desired-state automation and self-repair service (configuration)"]
[mail: application_services = "Electronic mail service, as made famous by the Unix operating system. (mail)"]
[monitoring: service_catalogue = "Pseudo-real-time status information about system components (monitoring)"]
[network_services: service_catalogue = "Network connectivity and availability (network services)"]
[application_services: service_catalogue = "Software running on servers (application services)"]
[boot_services: service_catalogue = "Boot services are a way of booting a computer directly from the network (boot services)"]
[installation: service_catalogue = "Installing computers from bare metal (installation)"]
[userexists: functions = "True if user name or numerical id exists on this host (userexists)"]
[usemodule: functions = "Execute cfengine module script and set class if successful (usemodule)"]
[translatepath: functions = "Translate path separators from Unix style to the host's native (translatepath)"]
[strcmp: functions = "True if the two strings match exactly (strcmp)"]
[splitstring: functions = "Convert a string in arg1 into a list of max arg3 strings by splitting on a regular expression in arg2 (splitstring)"]
[splayclass: functions = "True if the first argument's time-slot has arrived, according to a policy in arg2 (splayclass)"]
[selectservers: functions = "Select tcp servers which respond correctly to a query and return their number, set array of names (selectservers)"]
[rrange: functions = "Define a range of real numbers for cfengine internal use (rrange)"]
[returnszero: functions = "True if named shell command has exit status zero (returnszero)"]
[remoteclassesmatching: functions = "Read persistent classes matching a regular expression from a remote cfengine server and add them into local context with prefix (remoteclassesmatching)"]
[remotescalar: functions = "Read a scalar value from a remote cfengine server (remotescalar)"]
[regldap: functions = "True if the regular expression in arg6 matches a value item in an ldap search (regldap)"]
[reglist: functions = "True if the regular expression in arg2 matches any item in the list whose id is arg1 (reglist)"]
[regline: functions = "True if the regular expression in arg1 matches a line in file arg2 (regline)"]
[registryvalue: functions = "Returns a value for an MS-Win registry key,value pair (registryvalue)"]
[regextract: functions = "True if the regular expression in arg 1 matches the string in arg2 and sets a non-empty array of backreferences named arg3 (regextract)"]
[regcmp: functions = "True if arg1 is a regular expression matching that matches string arg2 (regcmp)"]
[regarray: functions = "True if arg1 matches any item in the associative array with id=arg2 (regarray)"]
[readtcp: functions = "Connect to tcp port, send string and assign result to variable (readtcp)"]
[readstringlist: functions = "Read and assign a list variable from a file of separated strings (readstringlist)"]
[readstringarray: functions = "Read an array of strings from a file and assign the dimension to a variable (readstringarray)"]
[readreallist: functions = "Read and assign a list variable from a file of separated real numbers (readreallist)"]
[readrealarray: functions = "Read an array of real numbers from a file and assign the dimension to a variable (readrealarray)"]
[readintlist: functions = "Read and assign a list variable from a file of separated ints (readintlist)"]
[readintarray: functions = "Read an array of integers from a file and assign the dimension to a variable (readintarray)"]
[readfile: functions = "Read max number of bytes from named file and assign to variable (readfile)"]
[randomint: functions = "Generate a random integer between the given limits (randomint)"]
[peerleaders: functions = "Get a list of peer leaders from the named partitioning (peerleaders)"]
[peerleader: functions = "Get the assigned peer-leader of the partition to which we belong (peerleader)"]
[peers: functions = "Get a list of peers (not including ourself) from the partition to which we belong (peers)"]
[on: functions = "Convert an exact date/time to an integer system representation (on)"]
[now: functions = "Convert the current time into system representation (now)"]
[ldapvalue: functions = "Extract the first matching named value from ldap (ldapvalue)"]
[ldaplist: functions = "Extract all named values from multiple ldap records (ldaplist)"]
[ldaparray: functions = "Extract all values from an ldap record (ldaparray)"]
[lastnode: functions = "Extract the last of a separated string, e.g. filename from a path (lastnode)"]
[join: functions = "Join the items of arg2 into a string, using the conjunction in arg1 (join)"]
[isvariable: functions = "True if the named variable is defined (isvariable)"]
[isplain: functions = "True if the named object is a plain/regular file (isplain)"]
[isnewerthan: functions = "True if arg1 is newer (modified later) than arg2 (mtime) (isnewerthan)"]
[islink: functions = "True if the named object is a symbolic link (islink)"]
[islessthan: functions = "True if arg1 is numerically less than arg2, else compare strings like NOT strcmp (islessthan)"]
[isgreaterthan: functions = "True if arg1 is numerically greater than arg2, else compare strings like strcmp (isgreaterthan)"]
[isdir: functions = "True if the named object is a directory (isdir)"]
[irange: functions = "Define a range of integer values for cfengine internal use (irange)"]
[iprange: functions = "True if the current host lies in the range of IP addresses specified (iprange)"]
[hostsseen: functions = "Extract the list of hosts last seen/not seen within the last arg1 hours (hostsseen)"]
[hostrange: functions = "True if the current host lies in the range of enumerated hostnames specified (hostrange)"]
[hostinnetgroup: functions = "True if the current host is in the named netgroup (hostinnetgroup)"]
[host2ip: functions = "Returns the primary name-service IP address for the named host (host2ip)"]
[hashmatch: functions = "Compute the hash of arg1, of type arg2 and test if it matches the value in arg 3 (hashmatch)"]
[hash: functions = "Return the hash of arg1, type arg2 and assign to a variable (hash)"]
[groupexists: functions = "True if group or numerical id exists on this host (groupexists)"]
[grep: functions = "Extract the sub-list if items matching the regular expression in arg1 of the list named in arg2 (grep)"]
[getuid: functions = "Return the integer user id of the named user on this host (getuid)"]
[getgid: functions = "Return the integer group id of the named group on this host (getgid)"]
[getenv: functions = "Return the environment variable named arg1, truncated at arg2 characters (getenv)"]
[getindices: functions = "Get a list of keys to the array whose id is the argument and assign to variable (getindices)"]
[getfields: functions = "Get an array of fields in the lines matching regex arg1 in file arg2, split on regex arg3 as array name arg4 (getfields)"]
[filesexist: functions = "True if the named list of files can ALL be accessed (filesexist)"]
[fileexists: functions = "True if the named file can be accessed (fileexists)"]
[execresult: functions = "Execute named command and assign output to variable (execresult)"]
[escape: functions = "Escape regular expression characters in a string (escape)"]
[diskfree: functions = "Return the free space (in KB) available on the directory's current partition (0 if not found) (diskfree)"]
[countlinesmatching: functions = "Count the number of lines matching regex arg1 in file arg2 (countlinesmatching)"]
[countclassesmatching: functions = "Count the number of defined classes matching regex arg1 (countclassesmatching)"]
[classmatch: functions = "True if the regular expression matches any currently defined class (classmatch)"]
[classify: functions = "True if the canonicalization of the argument is a currently defined class (classify)"]
[changedbefore: functions = "True if arg1 was changed before arg2 (ctime) (changedbefore)"]
[canonify: functions = "Convert an abitrary string into a legal class name (canonify)"]
[ago: functions = "Convert a time relative to now to an integer system representation (ago)"]
[accumulated: functions = "Convert an accumulated amount of time into a system representation (accumulated)"]
[accessedbefore: functions = "True if arg1 was accessed before arg2 (atime) (accessedbefore)"]
[class: data_types = "A boolean returned by certain functions in classes promises (class)"]
[policy: data_types = "The policy for (dis)allowing (re)definition of variables matching free,overridable,constant,ifdefined (policy)"]
[rlist: data_types = "A list of real numbers matching -9.99999E100,9.99999E100 (rlist)"]
[ilist: data_types = "A list of integers matching -99999999999,9999999999 (ilist)"]
[slist: data_types = "A list of scalar strings matching  (slist)"]
[real: data_types = "A scalar real number matching -9.99999E100,9.99999E100 (real)"]
[int: data_types = "A scalar integer matching -99999999999,9999999999 (int)"]
[string: data_types = "A scalar string matching  (string)"]
[data_types: miscellaneous_concepts = "data types"]
[select_region: values = "select_region"]
[comment: values = "comment"]
[depends_on: values = "depends_on"]
[handle: values = "handle"]
[ifvarclass: values = "ifvarclass"]
[classes: values = "classes"]
[action: values = "action"]
[track_growing_file: body_constraints = "If true, cfengine remembers the position to which is last read when opening the file, and resets to the start if the file has since been truncated (track_growing_file)"]
[track_growing_file: values = "If true, cfengine remembers the position to which is last read when opening the file, and resets to the start if the file has since been truncated (track_growing_file)"]
[extraction_regex: body_constraints = "Regular expression that should contain a single backreference for extracting a value (extraction_regex)"]
[extraction_regex: values = "Regular expression that should contain a single backreference for extracting a value (extraction_regex)"]
[select_line_number: body_constraints = "Read from the n-th line of the output (fixed format) (select_line_number)"]
[select_line_number: values = "Read from the n-th line of the output (fixed format) (select_line_number)"]
[match_value: body_constraints = "Criteria for extracting the measurement from a datastream (match_value)"]
[units: body_constraints = "The engineering dimensions of this value or a note about its intent used in plots (units)"]
[history_type: body_constraints = "Whether the data can be seen as a time-series or just an isolated value (history_type)"]
[data_type: body_constraints = "The datatype being collected. (data_type)"]
[stream_type: body_constraints = "The datatype being collected. (stream_type)"]
[measurements: promise_types = "measurements"]
[inference: body_constraints = "Result of the syllogism (inference)"]
[inference: values = "Result of the syllogism (inference)"]
[post_assoc_pattern: body_constraints = "Name of backward/inverse association from associates to promiser topic (post_assoc_pattern)"]
[post_assoc_pattern: values = "Name of backward/inverse association from associates to promiser topic (post_assoc_pattern)"]
[pre_assoc_pattern: body_constraints = "Name of forward association between promiser topic and associates (pre_assoc_pattern)"]
[infer: body_constraints = "Specify the promise-inference triangle from this topic (infer)"]
[follow_topics: body_constraints = "Use the knowledge promised by topics matching this pattern (follow_topics)"]
[inferences: promise_types = "inferences"]
[path_root: body_constraints = "Base path of the occurrence when locating file (replaced by web_root) (path_root)"]
[web_root: body_constraints = "Base URL of the occurrence when rendered as a web-URL (replaces path_root) (web_root)"]
[representation: body_constraints = "How to interpret the promiser string e.g. actual data or reference to data (representation)"]
[represents: body_constraints = "List of subtopics that explains the type(s) of information represented by the occurrence (represents)"]
[occurrences: promise_types = "occurrences"]
[associates: body_constraints = "List of associated topics by this forward relationship (associates)"]
[associates: values = "List of associated topics by this forward relationship (associates)"]
[backward_relationship: body_constraints = "Name of backward/inverse association from associates to promiser topic (backward_relationship)"]
[backward_relationship: values = "Name of backward/inverse association from associates to promiser topic (backward_relationship)"]
[forward_relationship: body_constraints = "Name of forward association between promiser topic and associates (forward_relationship)"]
[association: body_constraints = "Declare associated topics (association)"]
[topics: promise_types = "topics"]
[authorize: body_constraints = "List of public-key user names that are allowed to activate the promised class during remote agent activation (authorize)"]
[roles: promise_types = "roles"]
[resource_type: body_constraints = "The type of object being granted access (the default grants access to files) (resource_type)"]
[ifencrypted: body_constraints = "true/false whether the current file access promise is conditional on the connection from the client being encrypted (ifencrypted)"]
[maproot: body_constraints = "List of host names or IP addresses to grant full read-privilege on the server (maproot)"]
[deny: body_constraints = "List of host names or IP addresses to deny access to file objects (deny)"]
[admit: body_constraints = "List of host names or IP addresses to grant access to file objects (admit)"]
[access: promise_types = "access"]
[scan_arrivals: body_constraints = "true/false generate pseudo-periodic disk change arrival distribution (scan_arrivals)"]
[scan_arrivals: values = "true/false generate pseudo-periodic disk change arrival distribution (scan_arrivals)"]
[sensible_count: body_constraints = "Minimum number of files that should be defined on a sensible-looking storage device (sensible_count)"]
[sensible_count: values = "Minimum number of files that should be defined on a sensible-looking storage device (sensible_count)"]
[sensible_size: body_constraints = "Minimum size in bytes that should be used on a sensible-looking storage device (sensible_size)"]
[freespace: body_constraints = "Absolute or percentage minimum disk space that should be available before warning (freespace)"]
[freespace: values = "Absolute or percentage minimum disk space that should be available before warning (freespace)"]
[check_foreign: body_constraints = "true/false verify storage that is mounted from a foreign system on this host (check_foreign)"]
[volume: body_constraints = "Criteria for monitoring/probing mounted volumes (volume)"]
[unmount: body_constraints = "true/false unmount a previously mounted filesystem (unmount)"]
[unmount: values = "true/false unmount a previously mounted filesystem (unmount)"]
[mount_options: body_constraints = "List of option strings to add to the file system table ("fstab") (mount_options)"]
[mount_options: values = "List of option strings to add to the file system table ("fstab") (mount_options)"]
[mount_server: body_constraints = "Hostname or IP or remote file system server (mount_server)"]
[mount_source: body_constraints = "Path of remote file system to mount (mount_source)"]
[mount_type: body_constraints = "Protocol type of remote file system (mount_type)"]
[mount_type: values = "Protocol type of remote file system (mount_type)"]
[edit_fstab: body_constraints = "true/false add or remove entries to the file system table ("fstab") (edit_fstab)"]
[mount: body_constraints = "Criteria for mounting foreign file systems (mount)"]
[storage: promise_types = "storage"]
[service_dependence_chain: body_constraints = "How to handle dependencies and dependent services (service_dependence_chain)"]
[service_autostart_policy: body_constraints = "Should the service be started automatically by the OS (service_autostart_policy)"]
[service_autostart_policy: values = "Should the service be started automatically by the OS (service_autostart_policy)"]
[service_args: body_constraints = "Parameters for starting the service (service_args)"]
[service_type: body_constraints = "Service abstraction type (service_type)"]
[service_method: body_constraints = "Details of the service specification (service_method)"]
[service_dependencies: body_constraints = "A list of services on which this service depends (service_dependencies)"]
[service_policy: body_constraints = "Policy for service status to maintain (service_policy)"]
[services: promise_types = "services"]
[signals: body_constraints = "A list of menu options representing signals to be sent to a process (signals)"]
[restart_class: body_constraints = "A class to be defined globally if the process is not running, so that a command: rule can be referred to restart the process (restart_class)"]
[process_stop: body_constraints = "A command used to stop a running process (process_stop)"]
[vsize: body_constraints = "Range of integers matching the virtual memory size of a process, in kilobytes (vsize)"]
[vsize: values = "Range of integers matching the virtual memory size of a process, in kilobytes (vsize)"]
[threads: body_constraints = "Range of integers matching the threads (NLWP) field of a process (threads)"]
[threads: values = "Range of integers matching the threads (NLWP) field of a process (threads)"]
[tty: body_constraints = "Regular expression matching the tty field of a process (tty)"]
[ttime_range: body_constraints = "Range of integers matching the total elapsed time of a process (ttime_range)"]
[stime_range: body_constraints = "Range of integers matching the start time of a process (stime_range)"]
[stime_range: values = "Range of integers matching the start time of a process (stime_range)"]
[status: body_constraints = "Regular expression matching the status field of a process (status)"]
[status: values = "Regular expression matching the status field of a process (status)"]
[rsize: body_constraints = "Range of integers matching the resident memory size of a process, in kilobytes (rsize)"]
[process_result: body_constraints = "Boolean class expression returning the logical combination of classes set by a process selection test (process_result)"]
[process_result: values = "Boolean class expression returning the logical combination of classes set by a process selection test (process_result)"]
[process_owner: body_constraints = "List of regexes matching the user of a process (process_owner)"]
[priority: body_constraints = "Range of integers matching the priority field (PRI/NI) of a process (priority)"]
[priority: values = "Range of integers matching the priority field (PRI/NI) of a process (priority)"]
[ppid: body_constraints = "Range of integers matching the parent process id of a process (ppid)"]
[ppid: values = "Range of integers matching the parent process id of a process (ppid)"]
[pgid: body_constraints = "Range of integers matching the parent group id of a process (pgid)"]
[pgid: values = "Range of integers matching the parent group id of a process (pgid)"]
[pid: body_constraints = "Range of integers matching the process id of a process (pid)"]
[pid: values = "Range of integers matching the process id of a process (pid)"]
[command: body_constraints = "Regular expression matching the command/cmd field of a process (command)"]
[process_select: body_constraints = "Criteria for matching processes in the system process table (process_select)"]
[out_of_range_define: body_constraints = "List of classes to define if the matches are out of range (out_of_range_define)"]
[out_of_range_define: values = "List of classes to define if the matches are out of range (out_of_range_define)"]
[match_range: body_constraints = "Integer range for acceptable number of matches for this process (match_range)"]
[match_range: values = "Integer range for acceptable number of matches for this process (match_range)"]
[in_range_define: body_constraints = "List of classes to define if the matches are in range (in_range_define)"]
[process_count: body_constraints = "Criteria for constraining the number of processes matching other criteria (process_count)"]
[processes: promise_types = "processes"]
[package_version: body_constraints = "Version reference point for determining promised version (package_version)"]
[package_select: body_constraints = "A criterion for first acceptable match relative to "package_version" (package_select)"]
[package_policy: body_constraints = "Criteria for package installation/upgrade on the current system (package_policy)"]
[package_multiline_start: body_constraints = "Regular expression which matches the start of a new package in multiline output (package_multiline_start)"]
[package_multiline_start: values = "Regular expression which matches the start of a new package in multiline output (package_multiline_start)"]
[package_version_regex: body_constraints = "Regular expression with one backreference to extract package version string (package_version_regex)"]
[package_verify_command: body_constraints = "Command to verify the correctness of an installed package (package_verify_command)"]
[package_update_command: body_constraints = "Command to update to the latest version a currently installed package (package_update_command)"]
[package_update_command: values = "Command to update to the latest version a currently installed package (package_update_command)"]
[package_patch_version_regex: body_constraints = "Regular expression with one backreference to extract update version string (package_patch_version_regex)"]
[package_patch_version_regex: values = "Regular expression with one backreference to extract update version string (package_patch_version_regex)"]
[package_patch_name_regex: body_constraints = "Regular expression with one backreference to extract update name string (package_patch_name_regex)"]
[package_patch_list_command: body_constraints = "Command to obtain a list of available patches or updates (package_patch_list_command)"]
[package_patch_list_command: values = "Command to obtain a list of available patches or updates (package_patch_list_command)"]
[package_patch_installed_regex: body_constraints = "Regular expression which matches packages that are already installed (package_patch_installed_regex)"]
[package_patch_command: body_constraints = "Command to update to the latest patch release of an installed package (package_patch_command)"]
[package_patch_command: values = "Command to update to the latest patch release of an installed package (package_patch_command)"]
[package_patch_arch_regex: body_constraints = "Regular expression with one backreference to extract update architecture string (package_patch_arch_regex)"]
[package_patch_arch_regex: values = "Regular expression with one backreference to extract update architecture string (package_patch_arch_regex)"]
[package_noverify_returncode: body_constraints = "Integer return code indicating package verification failure (package_noverify_returncode)"]
[package_noverify_returncode: values = "Integer return code indicating package verification failure (package_noverify_returncode)"]
[package_noverify_regex: body_constraints = "Regular expression to match verification failure output (package_noverify_regex)"]
[package_noverify_regex: values = "Regular expression to match verification failure output (package_noverify_regex)"]
[package_name_regex: body_constraints = "Regular expression with one backreference to extract package name string (package_name_regex)"]
[package_name_regex: values = "Regular expression with one backreference to extract package name string (package_name_regex)"]
[package_name_convention: body_constraints = "This is how the package manager expects the package to be referred to, e.g. $(name).$(arch) (package_name_convention)"]
[package_name_convention: values = "This is how the package manager expects the package to be referred to, e.g. $(name).$(arch) (package_name_convention)"]
[package_list_version_regex: body_constraints = "Regular expression with one backreference to extract package version string (package_list_version_regex)"]
[package_list_version_regex: values = "Regular expression with one backreference to extract package version string (package_list_version_regex)"]
[package_list_update_ifelapsed: body_constraints = "The ifelapsed locking time in between updates of the package list (package_list_update_ifelapsed)"]
[package_list_update_ifelapsed: values = "The ifelapsed locking time in between updates of the package list (package_list_update_ifelapsed)"]
[package_list_update_command: body_constraints = "Command to update the list of available packages (if any) (package_list_update_command)"]
[package_list_update_command: values = "Command to update the list of available packages (if any) (package_list_update_command)"]
[package_list_name_regex: body_constraints = "Regular expression with one backreference to extract package name string (package_list_name_regex)"]
[package_list_command: body_constraints = "Command to obtain a list of available packages (package_list_command)"]
[package_list_command: values = "Command to obtain a list of available packages (package_list_command)"]
[package_list_arch_regex: body_constraints = "Regular expression with one backreference to extract package architecture string (package_list_arch_regex)"]
[package_list_arch_regex: values = "Regular expression with one backreference to extract package architecture string (package_list_arch_regex)"]
[package_installed_regex: body_constraints = "Regular expression which matches packages that are already installed (package_installed_regex)"]
[package_installed_regex: values = "Regular expression which matches packages that are already installed (package_installed_regex)"]
[package_file_repositories: body_constraints = "A list of machine-local directories to search for packages (package_file_repositories)"]
[package_file_repositories: values = "A list of machine-local directories to search for packages (package_file_repositories)"]
[package_delete_convention: body_constraints = "This is how the package manager expects the package to be referred to in the deletion part of a package update, e.g. $(name) (package_delete_convention)"]
[package_delete_command: body_constraints = "Command to remove a package from the system (package_delete_command)"]
[package_changes: body_constraints = "Menu option - whether to group packages into a single aggregate command (package_changes)"]
[package_changes: values = "Menu option - whether to group packages into a single aggregate command (package_changes)"]
[package_arch_regex: body_constraints = "Regular expression with one backreference to extract package architecture string (package_arch_regex)"]
[package_add_command: body_constraints = "Command to install a package to the system (package_add_command)"]
[package_method: body_constraints = "Criteria for installation and verification (package_method)"]
[package_architectures: body_constraints = "Select the architecture for package selection (package_architectures)"]
[packages: promise_types = "packages"]
[promiser_type: body_constraints = "Output level to observe for the named promise or bundle (meta-promise) (promiser_type)"]
[output_level: body_constraints = "Output level to observe for the named promise or bundle (meta-promise) (output_level)"]
[outputs: promise_types = "outputs"]
[usebundle: body_constraints = "Specify the name of a bundle to run as a parameterized method (usebundle)"]
[methods: promise_types = "methods"]
[ipv6_address: body_constraints = "IPv6 address for the interface (ipv6_address)"]
[ipv4_netmask: body_constraints = "Netmask for the interface (ipv4_netmask)"]
[ipv4_address: body_constraints = "IPv4 address for the interface (ipv4_address)"]
[tcp_ip: body_constraints = "Interface tcp/ip properties (tcp_ip)"]
[interfaces: promise_types = "interfaces"]
[replace_value: body_constraints = "Value used to replace regular expression matches in search (replace_value)"]
[occurrences: body_constraints = "Menu option to replace all occurrences or just first (NB the latter is non-convergent) (occurrences)"]
[replace_with: body_constraints = "Search-replace pattern (replace_with)"]
[replace_patterns: promise_types = "replace_patterns"]
[value_separator: body_constraints = "Character separator for subfields inside the selected field (value_separator)"]
[select_field: body_constraints = "Integer index of the field required 1..n (select_field)"]
[select_field: values = "Integer index of the field required 1..n (select_field)"]
[field_value: body_constraints = "Set field value to a fixed value (field_value)"]
[field_value: values = "Set field value to a fixed value (field_value)"]
[field_separator: body_constraints = "The regular expression used to separate fields in a line (field_separator)"]
[field_operation: body_constraints = "Menu option policy for editing subfields (field_operation)"]
[field_operation: values = "Menu option policy for editing subfields (field_operation)"]
[extend_fields: body_constraints = "true/false add new fields at end of line if necessary to complete edit (extend_fields)"]
[extend_fields: values = "true/false add new fields at end of line if necessary to complete edit (extend_fields)"]
[allow_blank_fields: body_constraints = "true/false allow blank fields in a line (do not purge) (allow_blank_fields)"]
[edit_field: body_constraints = "Edit line-based file as matrix of fields (edit_field)"]
[field_edits: promise_types = "field_edits"]
[whitespace_policy: body_constraints = "Criteria for matching and recognizing existing lines (whitespace_policy)"]
[select_line_matching: body_constraints = "Regular expression for matching file line location (select_line_matching)"]
[first_last: body_constraints = "Menu option, choose first or last occurrence of match in file (first_last)"]
[before_after: body_constraints = "Menu option, point cursor before of after matched line (before_after)"]
[location: body_constraints = "Specify where in a file an insertion will be made (location)"]
[insert_if_not_contains_from_list: body_constraints = "Insert line if a regex in the list DOES NOT match a line fragment (insert_if_not_contains_from_list)"]
[insert_if_not_contains_from_list: values = "Insert line if a regex in the list DOES NOT match a line fragment (insert_if_not_contains_from_list)"]
[insert_if_contains_from_list: body_constraints = "Insert line if a regex in the list match a line fragment (insert_if_contains_from_list)"]
[insert_if_contains_from_list: values = "Insert line if a regex in the list match a line fragment (insert_if_contains_from_list)"]
[insert_if_not_match_from_list: body_constraints = "Insert line if it DOES NOT fully match a regex in the list (insert_if_not_match_from_list)"]
[insert_if_not_match_from_list: values = "Insert line if it DOES NOT fully match a regex in the list (insert_if_not_match_from_list)"]
[insert_if_match_from_list: body_constraints = "Insert line if it fully matches a regex in the list (insert_if_match_from_list)"]
[insert_if_match_from_list: values = "Insert line if it fully matches a regex in the list (insert_if_match_from_list)"]
[insert_if_not_startwith_from_list: body_constraints = "Insert line if it DOES NOT start with a string in the list (insert_if_not_startwith_from_list)"]
[insert_if_not_startwith_from_list: values = "Insert line if it DOES NOT start with a string in the list (insert_if_not_startwith_from_list)"]
[insert_if_startwith_from_list: body_constraints = "Insert line if it starts with a string in the list (insert_if_startwith_from_list)"]
[insert_select: body_constraints = "Insert only if lines pass filter criteria (insert_select)"]
[insert_type: body_constraints = "Type of object the promiser string refers to (insert_type)"]
[expand_scalars: body_constraints = "Expand any unexpanded variables (expand_scalars)"]
[insert_lines: promise_types = "insert_lines"]
[not_matching: body_constraints = "true/false negate match criterion (not_matching)"]
[delete_if_not_contains_from_list: body_constraints = "Delete line if a regex in the list DOES NOT match a line fragment (delete_if_not_contains_from_list)"]
[delete_if_not_contains_from_list: values = "Delete line if a regex in the list DOES NOT match a line fragment (delete_if_not_contains_from_list)"]
[delete_if_contains_from_list: body_constraints = "Delete line if a regex in the list match a line fragment (delete_if_contains_from_list)"]
[delete_if_contains_from_list: values = "Delete line if a regex in the list match a line fragment (delete_if_contains_from_list)"]
[delete_if_not_match_from_list: body_constraints = "Delete line if it DOES NOT fully match a regex in the list (delete_if_not_match_from_list)"]
[delete_if_not_match_from_list: values = "Delete line if it DOES NOT fully match a regex in the list (delete_if_not_match_from_list)"]
[delete_if_match_from_list: body_constraints = "Delete line if it fully matches a regex in the list (delete_if_match_from_list)"]
[delete_if_match_from_list: values = "Delete line if it fully matches a regex in the list (delete_if_match_from_list)"]
[delete_if_not_startwith_from_list: body_constraints = "Delete line if it DOES NOT start with a string in the list (delete_if_not_startwith_from_list)"]
[delete_if_not_startwith_from_list: values = "Delete line if it DOES NOT start with a string in the list (delete_if_not_startwith_from_list)"]
[delete_if_startwith_from_list: body_constraints = "Delete line if it starts with a string in the list (delete_if_startwith_from_list)"]
[delete_select: body_constraints = "Delete only if lines pass filter criteria (delete_select)"]
[delete_lines: promise_types = "delete_lines"]
[select_end: body_constraints = "Regular expression matches end of edit region from start (select_end)"]
[select_end: values = "Regular expression matches end of edit region from start (select_end)"]
[select_start: body_constraints = "Regular expression matching start of edit region (select_start)"]
[select_start: values = "Regular expression matching start of edit region (select_start)"]
[include_start_delimiter: body_constraints = "Whether to include the section delimiter (include_start_delimiter)"]
[select_region: body_constraints = "Limit edits to a demarked region of the file (select_region)"]
[transformer: body_constraints = "Command (with full path) used to transform current file (no shell wrapper used) (transformer)"]
[touch: body_constraints = "true/false whether to touch time stamps on file (touch)"]
[repository: body_constraints = "Name of a repository for versioning (repository)"]
[rotate: body_constraints = "Maximum number of file rotations to keep (rotate)"]
[rotate: values = "Maximum number of file rotations to keep (rotate)"]
[newname: body_constraints = "The desired name for the current file (newname)"]
[newname: values = "The desired name for the current file (newname)"]
[disable_suffix: body_constraints = "The suffix to add to files when disabling (.cfdisabled) (disable_suffix)"]
[disable_suffix: values = "The suffix to add to files when disabling (.cfdisabled) (disable_suffix)"]
[disable_mode: body_constraints = "The permissions to set when a file is disabled (disable_mode)"]
[disable_mode: values = "The permissions to set when a file is disabled (disable_mode)"]
[disable: body_constraints = "true/false automatically rename and remove permissions (disable)"]
[rename: body_constraints = "Criteria for renaming files (rename)"]
[rxdirs: body_constraints = "true/false add execute flag for directories if read flag is set (rxdirs)"]
[rxdirs: values = "true/false add execute flag for directories if read flag is set (rxdirs)"]
[owners: body_constraints = "List of acceptable owners or user ids, first is change target (owners)"]
[owners: values = "List of acceptable owners or user ids, first is change target (owners)"]
[mode: body_constraints = "File permissions (like posix chmod) (mode)"]
[mode: values = "File permissions (like posix chmod) (mode)"]
[groups: body_constraints = "List of acceptable groups of group ids, first is change target (groups)"]
[bsdflags: body_constraints = "List of menu options for bsd file system flags to set (bsdflags)"]
[perms: body_constraints = "Criteria for setting permissions on a file (perms)"]
[pathtype: body_constraints = "Menu option for interpreting promiser file object (pathtype)"]
[move_obstructions: body_constraints = "true/false whether to move obstructions to file-object creation (move_obstructions)"]
[when_no_source: body_constraints = "Behaviour when the source file to link to does not exist (when_no_source)"]
[when_linking_children: body_constraints = "Policy for overriding existing files when linking directories of children (when_linking_children)"]
[when_linking_children: values = "Policy for overriding existing files when linking directories of children (when_linking_children)"]
[source: body_constraints = "The source file to which the link should point (source)"]
[source: values = "The source file to which the link should point (source)"]
[link_type: body_constraints = "The type of link used to alias the file (link_type)"]
[link_type: values = "The type of link used to alias the file (link_type)"]
[link_children: body_constraints = "true/false whether to link all directory's children to source originals (link_children)"]
[link_children: values = "true/false whether to link all directory's children to source originals (link_children)"]
[copy_patterns: body_constraints = "A set of patterns that should be copied ansd synchronized instead of linked (copy_patterns)"]
[link_from: body_constraints = "Criteria for linking file from a source (link_from)"]
[file_result: body_constraints = "Logical expression combining classes defined by file search criteria (file_result)"]
[file_result: values = "Logical expression combining classes defined by file search criteria (file_result)"]
[issymlinkto: body_constraints = "List of regular expressions to match file objects (issymlinkto)"]
[file_types: body_constraints = "List of acceptable file types from menu choices (file_types)"]
[exec_program: body_constraints = "Execute this command on each file and match if the exit status is zero (exec_program)"]
[exec_regex: body_constraints = "Matches file if this regular expression matches any full line returned by the command (exec_regex)"]
[atime: body_constraints = "Range of access times (atime) for acceptable files (atime)"]
[mtime: body_constraints = "Range of modification times (mtime) for acceptable files (mtime)"]
[ctime: body_constraints = "Range of change times (ctime) for acceptable files (ctime)"]
[search_bsdflags: body_constraints = "String of flags for bsd file system flags expected set (search_bsdflags)"]
[search_bsdflags: values = "String of flags for bsd file system flags expected set (search_bsdflags)"]
[search_groups: body_constraints = "List of acceptable group names or ids for the file, or regexes to match (search_groups)"]
[search_groups: values = "List of acceptable group names or ids for the file, or regexes to match (search_groups)"]
[search_owners: body_constraints = "List of acceptable user names or ids for the file, or regexes to match (search_owners)"]
[search_size: body_constraints = "Integer range of file sizes (search_size)"]
[search_size: values = "Integer range of file sizes (search_size)"]
[search_mode: body_constraints = "A list of mode masks for acceptable file permissions (search_mode)"]
[path_name: body_constraints = "List of pathnames to match acceptable target (path_name)"]
[path_name: values = "List of pathnames to match acceptable target (path_name)"]
[leaf_name: body_constraints = "List of regexes that match an acceptable name (leaf_name)"]
[file_select: body_constraints = "Choose which files select in a search (file_select)"]
[recognize_join: body_constraints = "Join together lines that end with a backslash, up to 4kB limit (recognize_join)"]
[recognize_join: values = "Join together lines that end with a backslash, up to 4kB limit (recognize_join)"]
[max_file_size: body_constraints = "Do not edit files bigger than this number of bytes (max_file_size)"]
[max_file_size: values = "Do not edit files bigger than this number of bytes (max_file_size)"]
[empty_file_before_editing: body_constraints = "Baseline memory model of file to zero/empty before commencing promised edits (empty_file_before_editing)"]
[edit_backup: body_constraints = "Menu option for backup policy on edit changes (edit_backup)"]
[edit_defaults: body_constraints = "Default promise details for file edits (edit_defaults)"]
[edit_xml: body_constraints = "XML editing model for file (edit_xml)"]
[edit_line: body_constraints = "Line editing model for file (edit_line)"]
[xdev: body_constraints = "true/false exclude directories that are on different devices (xdev)"]
[xdev: values = "true/false exclude directories that are on different devices (xdev)"]
[traverse_links: body_constraints = "true/false traverse symbolic links to directories (false) (traverse_links)"]
[traverse_links: values = "true/false traverse symbolic links to directories (false) (traverse_links)"]
[rmdeadlinks: body_constraints = "true/false remove links that point to nowhere (rmdeadlinks)"]
[rmdeadlinks: values = "true/false remove links that point to nowhere (rmdeadlinks)"]
[include_dirs: body_constraints = "List of regexes of directory names to include in depth search (include_dirs)"]
[include_dirs: values = "List of regexes of directory names to include in depth search (include_dirs)"]
[include_basedir: body_constraints = "true/false include the start/root dir of the search results (include_basedir)"]
[include_basedir: values = "true/false include the start/root dir of the search results (include_basedir)"]
[exclude_dirs: body_constraints = "List of regexes of directory names NOT to include in depth search (exclude_dirs)"]
[exclude_dirs: values = "List of regexes of directory names NOT to include in depth search (exclude_dirs)"]
[depth: body_constraints = "Maximum depth level for search (depth)"]
[depth_search: body_constraints = "Criteria for file depth searches (depth_search)"]
[rmdirs: body_constraints = "true/false whether to delete empty directories during recursive deletion (rmdirs)"]
[dirlinks: body_constraints = "Menu option policy for dealing with symbolic links to directories during deletion (dirlinks)"]
[delete: body_constraints = "Criteria for deleting files (delete)"]
[create: body_constraints = "true/false whether to create non-existing file (create)"]
[verify: body_constraints = "true/false verify transferred file by hashing after copy (resource penalty) (verify)"]
[verify: values = "true/false verify transferred file by hashing after copy (resource penalty) (verify)"]
[type_check: body_constraints = "true/false compare file types before copying and require match (type_check)"]
[type_check: values = "true/false compare file types before copying and require match (type_check)"]
[trustkey: body_constraints = "true/false trust public keys from remote server if previously unknown (trustkey)"]
[trustkey: values = "true/false trust public keys from remote server if previously unknown (trustkey)"]
[stealth: body_constraints = "true/false whether to preserve time stamps on copied file (stealth)"]
[stealth: values = "true/false whether to preserve time stamps on copied file (stealth)"]
[purge: body_constraints = "true/false purge files on client that do not match files on server when depth_search (purge)"]
[purge: values = "true/false purge files on client that do not match files on server when depth_search (purge)"]
[preserve: body_constraints = "true/false whether to preserve file permissions on copied file (preserve)"]
[portnumber: body_constraints = "Port number to connect to on server host (portnumber)"]
[portnumber: values = "Port number to connect to on server host (portnumber)"]
[force_ipv4: body_constraints = "true/false force use of ipv4 on ipv6 enabled network (force_ipv4)"]
[force_ipv4: values = "true/false force use of ipv4 on ipv6 enabled network (force_ipv4)"]
[force_update: body_constraints = "true/false force copy update always (force_update)"]
[force_update: values = "true/false force copy update always (force_update)"]
[link_type: body_constraints = "Menu option for type of links to use when copying (link_type)"]
[link_type: values = "Menu option for type of links to use when copying (link_type)"]
[linkcopy_patterns: body_constraints = "List of patterns matching files that should be replaced with symbolic links (linkcopy_patterns)"]
[findertype: body_constraints = "Menu option for default finder type on MacOSX (findertype)"]
[copy_size: body_constraints = "Integer range of file sizes that may be copied (copy_size)"]
[copy_size: values = "Integer range of file sizes that may be copied (copy_size)"]
[copylink_patterns: body_constraints = "List of patterns matching files that should be linked instead of copied (copylink_patterns)"]
[copylink_patterns: values = "List of patterns matching files that should be linked instead of copied (copylink_patterns)"]
[check_root: body_constraints = "true/false check permissions on the root directory when depth_search (check_root)"]
[check_root: values = "true/false check permissions on the root directory when depth_search (check_root)"]
[encrypt: body_constraints = "true/false use encrypted data stream to connect to remote host (encrypt)"]
[copy_backup: body_constraints = "Menu option policy for file backup/version control (copy_backup)"]
[compare: body_constraints = "Menu option policy for comparing source and image file attributes (compare)"]
[compare: values = "Menu option policy for comparing source and image file attributes (compare)"]
[collapse_destination_dir: body_constraints = "true/false Place files in subdirectories into the root destination directory during copy (collapse_destination_dir)"]
[servers: body_constraints = "List of servers in order of preference from which to copy (servers)"]
[source: body_constraints = "Reference source file from which to copy (source)"]
[copy_from: body_constraints = "Criteria for copying file from a source (copy_from)"]
[report_diffs: body_constraints = "Generate reports summarizing the major differences between individual text files (report_diffs)"]
[report_diffs: values = "Generate reports summarizing the major differences between individual text files (report_diffs)"]
[update_hashes: body_constraints = "Update hash values immediately after change warning (update_hashes)"]
[report_changes: body_constraints = "Specify criteria for change warnings (report_changes)"]
[hash: body_constraints = "Hash files for change detection (hash)"]
[changes: body_constraints = "Criteria for change management (changes)"]
[specify_inherit_aces: body_constraints = "Native settings for access control entry (specify_inherit_aces)"]
[acl_type: body_constraints = "Access control list type for the affected file system (acl_type)"]
[acl_method: body_constraints = "Editing method for access control list (acl_method)"]
[acl_directory_inherit: body_constraints = "Access control list type for the affected file system (acl_directory_inherit)"]
[aces: body_constraints = "Native settings for access control entry (aces)"]
[acl: body_constraints = "Criteria for access control lists on file (acl)"]
[files: promise_types = "files"]
[environment_type: body_constraints = "Virtual environment type (environment_type)"]
[environment_state: body_constraints = "The desired dynamical state of the specified environment (environment_state)"]
[env_spec_file: body_constraints = "The path to a file containing a technology specific set of promises for the virtual instance (env_spec_file)"]
[env_baseline: body_constraints = "The path to an image with which to baseline the virtual environment (env_baseline)"]
[env_baseline: values = "The path to an image with which to baseline the virtual environment (env_baseline)"]
[env_disk: body_constraints = "Amount of secondary storage (DISK) in the virtual environment (MB) (env_disk)"]
[env_disk: values = "Amount of secondary storage (DISK) in the virtual environment (MB) (env_disk)"]
[env_memory: body_constraints = "Amount of primary storage (RAM) in the virtual environment (KB) (env_memory)"]
[env_memory: values = "Amount of primary storage (RAM) in the virtual environment (KB) (env_memory)"]
[env_cpus: body_constraints = "Number of virtual CPUs in the environment (env_cpus)"]
[environment_resources: body_constraints = "Virtual environment resource description (environment_resources)"]
[env_network: body_constraints = "The hostname of the virtual network (env_network)"]
[env_network: values = "The hostname of the virtual network (env_network)"]
[env_name: body_constraints = "The hostname of the virtual environment (env_name)"]
[env_name: values = "The hostname of the virtual environment (env_name)"]
[env_addresses: body_constraints = "The IP addresses of the environment's network interfaces (env_addresses)"]
[environment_interface: body_constraints = "Virtual environment outward identity and location (environment_interface)"]
[environment_host: body_constraints = "The name of the virtual environment host (this must be promised uniquely) (environment_host)"]
[environments: promise_types = "environments"]
[registry_exclude: body_constraints = "A list of regular expressions to ignore in key/value verification (registry_exclude)"]
[database_rows: body_constraints = "An ordered list of row values to be promised by SQL databases (database_rows)"]
[database_columns: body_constraints = "A list of column definitions to be promised by SQL databases (database_columns)"]
[database_operation: body_constraints = "The nature of the promise - to be or not to be (database_operation)"]
[database_type: body_constraints = "The type of database that is to be manipulated (database_type)"]
[db_server_connection_db: body_constraints = "The name of an existing database to connect to in order to create/manage other databases (db_server_connection_db)"]
[db_server_type: body_constraints = "The dialect of the database server (db_server_type)"]
[db_server_type: values = "The dialect of the database server (db_server_type)"]
[db_server_host: body_constraints = "Hostname or address for connection to database, blank means localhost (db_server_host)"]
[db_server_host: values = "Hostname or address for connection to database, blank means localhost (db_server_host)"]
[db_server_password: body_constraints = "Clear text password for database connection (db_server_password)"]
[db_server_password: values = "Clear text password for database connection (db_server_password)"]
[db_server_owner: body_constraints = "User name for database connection (db_server_owner)"]
[database_server: body_constraints = "Credentials for connecting to a local/remote database server (database_server)"]
[databases: promise_types = "databases"]
[module: body_constraints = "true/false whether to expect the cfengine module protocol (module)"]
[no_output: body_constraints = "true/false discard all output from the command (no_output)"]
[no_output: values = "true/false discard all output from the command (no_output)"]
[preview: body_constraints = "true/false preview command when running in dry-run mode (with -n) (preview)"]
[chroot: body_constraints = "Directory of root sandbox for process (chroot)"]
[chdir: body_constraints = "Directory for setting current/base directory for the process (chdir)"]
[exec_timeout: body_constraints = "Timeout in seconds for command completion (exec_timeout)"]
[exec_timeout: values = "Timeout in seconds for command completion (exec_timeout)"]
[exec_group: body_constraints = "The group name or id under which to run the process (exec_group)"]
[exec_group: values = "The group name or id under which to run the process (exec_group)"]
[exec_owner: body_constraints = "The user name or id under which to run the process (exec_owner)"]
[umask: body_constraints = "The umask value for the child process (umask)"]
[umask: values = "The umask value for the child process (umask)"]
[useshell: body_constraints = "true/false embed the command in a shell environment (true) (useshell)"]
[contain: body_constraints = "Containment options for the execution process (contain)"]
[args: body_constraints = "Alternative string of arguments for the command (concatenated with promiser string) (args)"]
[commands: promise_types = "commands"]
[comment: body_constraints = "A comment about this promise's real intention that follows through the program (comment)"]
[depends_on: body_constraints = "A list of promise handles that this promise builds on or depends on somehow (for knowledge management) (depends_on)"]
[handle: body_constraints = "A unique id-tag string for referring to this as a promisee elsewhere (handle)"]
[ifvarclass: body_constraints = "Extended classes ANDed with context (ifvarclass)"]
[timer_policy: body_constraints = "Whether a persistent class restarts its counter when rediscovered (timer_policy)"]
[timer_policy: values = "Whether a persistent class restarts its counter when rediscovered (timer_policy)"]
[persist_time: body_constraints = "A number of minutes the specified classes should remain active (persist_time)"]
[cancel_notkept: body_constraints = "A list of classes to be cancelled if the promise is not kept for any reason (cancel_notkept)"]
[cancel_repaired: body_constraints = "A list of classes to be cancelled if the promise is repaired (cancel_repaired)"]
[cancel_kept: body_constraints = "A list of classes to be cancelled if the promise is kept (cancel_kept)"]
[promise_kept: body_constraints = "A list of classes to be defined globally (promise_kept)"]
[repair_timeout: body_constraints = "A list of classes to be defined globally (repair_timeout)"]
[repair_denied: body_constraints = "A list of classes to be defined globally (repair_denied)"]
[repair_failed: body_constraints = "A list of classes to be defined globally (repair_failed)"]
[promise_repaired: body_constraints = "A list of classes to be defined globally (promise_repaired)"]
[classes: body_constraints = "Signalling behaviour (classes)"]
[measurement_class: body_constraints = "If set performance will be measured and recorded under this identifier (measurement_class)"]
[report_level: body_constraints = "The reporting level for standard output (report_level)"]
[report_level: values = "The reporting level for standard output (report_level)"]
[background: body_constraints = "true/false switch for parallelizing the promise repair (background)"]
[background: values = "true/false switch for parallelizing the promise repair (background)"]
[audit: body_constraints = "true/false switch for detailed audit records of this promise (audit)"]
[audit: values = "true/false switch for detailed audit records of this promise (audit)"]
[value_notkept: body_constraints = "A real number value (possibly negative) attributed to not keeping this promise (value_notkept)"]
[value_notkept: values = "A real number value (possibly negative) attributed to not keeping this promise (value_notkept)"]
[value_repaired: body_constraints = "A real number value attributed to reparing this promise (value_repaired)"]
[value_repaired: values = "A real number value attributed to reparing this promise (value_repaired)"]
[value_kept: body_constraints = "A real number value attributed to keeping this promise (value_kept)"]
[log_failed: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger (log_failed)"]
[log_repaired: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger (log_repaired)"]
[log_priority: body_constraints = "The priority level of the log message, as interpreted by a syslog server (log_priority)"]
[log_kept: body_constraints = "This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger (log_kept)"]
[log_level: body_constraints = "The reporting level sent to syslog (log_level)"]
[log_level: values = "The reporting level sent to syslog (log_level)"]
[log_string: body_constraints = "A message to be written to the log when a promise verification leads to a repair (log_string)"]
[log_string: values = "A message to be written to the log when a promise verification leads to a repair (log_string)"]
[expireafter: body_constraints = "Number of minutes before a repair action is interrupted and retried (expireafter)"]
[expireafter: values = "Number of minutes before a repair action is interrupted and retried (expireafter)"]
[ifelapsed: body_constraints = "Number of minutes before next allowed assessment of promise (ifelapsed)"]
[action_policy: body_constraints = "Whether to repair or report about non-kept promises (action_policy)"]
[action: body_constraints = "Output behaviour (action)"]
[_: promise_types = "*"]
[showstate: body_constraints = "List of services about which status reports should be reported to standard output (showstate)"]
[report_to_file: body_constraints = "The path and filename to which output should be appended (report_to_file)"]
[number_of_lines: body_constraints = "Integer maximum number of lines to print from selected file (number_of_lines)"]
[file_to_print: body_constraints = "Path name to the file that is to be sent to standard output (file_to_print)"]
[printfile: body_constraints = "Quote part of a file to standard output (printfile)"]
[lastseen: body_constraints = "Integer time threshold in hours since current peers were last seen, report absence (lastseen)"]
[intermittency: body_constraints = "Real number threshold [0,1] of intermittency about current peers, report above (intermittency)"]
[friend_pattern: body_constraints = "Regular expression to keep selected hosts from the friends report list (friend_pattern)"]
[reports: promise_types = "reports"]
[not: body_constraints = "Evaluate the negation of string expression in normal form (not)"]
[expression: body_constraints = "Evaluate string expression of classes in normal form (expression)"]
[dist: body_constraints = "Generate a probabilistic class distribution (strategy in cfengine 2) (dist)"]
[xor: body_constraints = "Combine class sources with XOR (xor)"]
[and: body_constraints = "Combine class sources with AND (and)"]
[or: body_constraints = "Combine class sources with inclusive OR (or)"]
[classes: promise_types = "classes"]
[policy: body_constraints = "The policy for (dis)allowing (re)definition of variables (policy)"]
[rlist: body_constraints = "A list of real numbers (rlist)"]
[ilist: body_constraints = "A list of integers (ilist)"]
[slist: body_constraints = "A list of scalar strings (slist)"]
[real: body_constraints = "A scalar real number (real)"]
[int: body_constraints = "A scalar integer (int)"]
[string: body_constraints = "A scalar string (string)"]
[vars: promise_types = "vars"]
[sys: bundles = "cfengine's internal bundle of system specific values (sys)"]
[an_arbitrary_string: values = "Should match the generic pattern , i.e. unspecified characters (an arbitrary string)"]

[are_used_in_constraint_parameters = "are used in constraint parameters" 
          = "takes value" / body_constraints]


[is_a_special_case_of = "is a special case of" 
          = "is the generic type for" / cfengine_3]

[a_syslog_level: values = "Should match the generic pattern LOG_USER,LOG_DAEMON,LOG_LOCAL0,LOG_LOCAL1,LOG_LOCAL2,LOG_LOCAL3,LOG_LOCAL4,LOG_LOCAL5,LOG_LOCAL6,LOG_LOCAL7, i.e. a syslog constant (a syslog level)"]
[a_file_path: values = "Should match the generic pattern [cC]:\.*|/.*, i.e. a system file path suitable for the target system (a file path)"]
[a_user_group_id: values = "Should match the generic pattern [a-zA-Z0-9_$.-]+, i.e. an alphanumeric string with option underscores and hyphens (a user/group id)"]
[a_cfengine_identifier: values = "Should match the generic pattern [a-zA-Z0-9_$.]+, i.e. an alphanumeric string with option underscores (a cfengine identifier)"]
[a_cfengine_class_expression: values = "Should match the generic pattern [a-zA-Z0-9_!&|.()]+, i.e. an alphanumeric string with option underscores and logical operators (a cfengine class expression)"]
[posix_file_mode_or_permission: values = "Should match the generic pattern [0-7augorwxst,+-]+, i.e. something that you would give as an argument to chmod (posix file mode or permission)"]
[a_single_character: values = "Should match the generic pattern ^.$, i.e. one symbol (a single character)"]
[real_number: values = "Should match the generic pattern -9.99999E100,9.99999E100, i.e. a number between the minus and positive maximum values (real number)"]
[integer: values = "Should match the generic pattern -99999999999,9999999999, i.e. a number between the minus and positive maximum values (integer)"]
[a_positive_integer: values = "Should match the generic pattern 0,99999999999, i.e. a number between zero and the maximum value (a positive integer)"]
[a_time_range: values = "Should match the generic pattern 0,2147483648, i.e. a value from zero to a maximum system time -- but you should use time functions to convert this (a time range)"]
[link_type: values = "Should match the generic pattern symlink,hardlink,relative,absolute,none, i.e. a support link type (link type)"]
[boolean: values = "Should match the generic pattern true,false,yes,no,on,off, i.e. a positive or a negative (boolean)"]
[system_signals: values = "Should match the generic pattern hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv, i.e. a unix signal name (system signals)"]
[values: system_policy = "Formal rvalues in constraint assignments and their legal ranges (values)"]
[functions: system_policy = "In-built functions that may be used to set variables or classes (functions)"]
[comments: system_policy = "comments"]

[see_instances_of = "see instances of" 
          = "is one of a number of" / values]

[body_constraints: system_policy = "The attributes that cfengine enables you to promise about the promiser (body constraints)"]
[promise_types: system_policy = "The types of promise that cfengine can keep (promise types)"]
[promises: system_policy = "Complete occurrences of promiser + promisee + promise-body (promises)"]
[promisers: system_policy = "The objects affected by a promise (promisers)"]
[promisees: system_policy = "Recipients of a promise, i.e. promise handles, or persons (promisees)"]
[contexts: system_policy = "Class expressions that say where or when a promise applies (contexts)"]
[bodies: system_policy = "A modular collection of body constraints for re-use (bodies)"]
[bundles: system_policy = "A modular collection of promises of different types (bundles)"]
[available_patches_report: system_reports = "Patches already installed on system (available patches report)"]

[is_generated_with = "is generated with" 
          = "reported in" / promise_types]

[installed_patches_report: system_reports = "Patches not yet installed, but published by vendor (installed patches report)"]
[variables_report: system_reports = "Current variable values expanded on different hosts (variables report)"]
[value_report: system_reports = "Value estimate / ROI of cfengine configuration (value report)"]
[setuid_report: system_reports = "Known setuid programs found on system (setuid report)"]
[promises_not_kept_report: system_reports = "Promises that were recently unkept (promises not kept report)"]
[promises_repaired_report: system_reports = "Promises that were recently repaired (promises repaired report)"]
[promise_report: system_reports = "Per-promise average compliance report (promise report)"]
[performance_report: system_reports = "Time cost of verifying system promises (performance report)"]

[is_based_on = "is based on" 
          = "reported in" / promise_theory]

[monitor_summary_report: system_reports = "Pseudo-real-time measurement (monitor summary report)"]
[license_report: system_reports = "License utilization statistics (license report)"]
[lastseen_report: system_reports = "Time and frequency of communications with peers (lastseen report)"]

[is_affected_by = "is affected by" 
          = "reported in" / promise_types]

[installed_software_report: system_reports = "Software already installed on system (installed software report)"]
[hashes_report: system_reports = "File hash values measured (change detection) (hashes report)"]
[file_diffs_report: system_reports = "Latest observed differences to system files (file_diffs report)"]
[file_changes_report: system_reports = "Latest observed changes to system files (file_changes report)"]
[compliance_report: system_reports = "Total summary of host compliance (compliance report)"]
[classes_report: system_reports = "User defined classes observed on the system (classes report)"]
[micro_audit_report: system_reports = "Generated by cfengine self-auditing (micro-audit report)"]
[is_a_promise_made_by: references = "is a promise made by"]
[makes_promises: references = "makes promises"]
[promises_have_been_made_by: references = "promises have been made by"]
[makes_promise_of_type: references = "makes promise of type"]
[bundle_contains_promiser: references = "bundle contains promiser"]
[occurs_in_bundle: references = "occurs in bundle"]
[is_a_promise_of_type: references = "is a promise of type"]
[has_current_exemplars: references = "has current exemplars"]
[used_in_promise: references = "used in promise"]
[bundle_reference: references = "bundle reference"]

/*********************/
/* Association types */
/*********************/

is_a_promise_of_type( promise_knowledge_cf_67 : promises, commands : promise_types)
is_activated_by_class_context( promise_knowledge_cf_67 : promises, mon_update : contexts)
makes_promises( _var_cfengine_bin_cf_report : promisers, promise_knowledge_cf_67 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_report : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_report : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_63 : promises, commands : promise_types)
is_activated_by_class_context( promise_knowledge_cf_63 : promises, web_server : contexts)
makes_promises( _usr_local_sbin_cf_know__f__srv_www_htdocs_enterprise_cf__g : promisers, promise_knowledge_cf_63 : promises)
makes_promise_of_type( _usr_local_sbin_cf_know__f__srv_www_htdocs_enterprise_cf__g : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_local_sbin_cf_know__f__srv_www_htdocs_enterprise_cf__g : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_56 : promises, commands : promise_types)
is_activated_by_class_context( promise_knowledge_cf_56 : promises, any : contexts)
makes_promises( _usr_local_sbin_cf_promises__r : promisers, promise_knowledge_cf_56 : promises)
makes_promise_of_type( _usr_local_sbin_cf_promises__r : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_local_sbin_cf_promises__r : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_43 : promises, files : promise_types)
is_activated_by_class_context( promise_knowledge_cf_43 : promises, any : contexts)
makes_promises( _srv_www_htdocs_reports_192_168_1_100_mean_field_nov : promisers, promise_knowledge_cf_43 : promises)
makes_promise_of_type( _srv_www_htdocs_reports_192_168_1_100_mean_field_nov : promisers, promise_types__files : promise_types)
occurs_in_bundle( _srv_www_htdocs_reports_192_168_1_100_mean_field_nov : promisers, bundles__setup_knowledge : bundles)
has_direct_influence_on( promise_knowledge_cf_35 : promises, mon_update : contexts)
is_a_promise_of_type( promise_knowledge_cf_35 : promises, files : promise_types)
is_activated_by_class_context( promise_knowledge_cf_35 : promises, any : contexts)
has_direct_influence_on( _srv_www_htdocs_reports_192_168_1_100_fluctuations_nov : promisers, mon_update : contexts)
makes_promises( _srv_www_htdocs_reports_192_168_1_100_fluctuations_nov : promisers, promise_knowledge_cf_35 : promises)
makes_promise_of_type( _srv_www_htdocs_reports_192_168_1_100_fluctuations_nov : promisers, promise_types__files : promise_types)
occurs_in_bundle( _srv_www_htdocs_reports_192_168_1_100_fluctuations_nov : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_28 : promises, files : promise_types)
is_activated_by_class_context( promise_knowledge_cf_28 : promises, any : contexts)
makes_promises( _srv_www_htdocs : promisers, promise_knowledge_cf_28 : promises)
makes_promise_of_type( _srv_www_htdocs : promisers, promise_types__files : promise_types)
occurs_in_bundle( _srv_www_htdocs : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_15 : promises, vars : promise_types)
is_activated_by_class_context( promise_knowledge_cf_15 : promises, any : contexts)
makes_promises( all_hosts : promisers, promise_knowledge_cf_15 : promises)
makes_promise_of_type( all_hosts : promisers, promise_types__vars : promise_types)
occurs_in_bundle( all_hosts : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_knowledge_cf_12 : promises, vars : promise_types)
is_activated_by_class_context( promise_knowledge_cf_12 : promises, any : contexts)
makes_promises( doc_root : promisers, promise_knowledge_cf_12 : promises)
makes_promise_of_type( doc_root : promisers, promise_types__vars : promise_types)
occurs_in_bundle( doc_root : promisers, bundles__setup_knowledge : bundles)
is_a_promise_of_type( promise_webserver_cf_137 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_webserver_cf_137 : promises, any : contexts)
is_a_promise_of_type( promise_webserver_cf_130 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_webserver_cf_130 : promises, any : contexts)
makes_promises( APACHE_MODULES___ : promisers, promise_webserver_cf_137 : promises)
makes_promises( APACHE_MODULES___ : promisers, promise_webserver_cf_130 : promises)
makes_promise_of_type( APACHE_MODULES___ : promisers, promise_types__field_edits : promise_types)
occurs_in_bundle( APACHE_MODULES___ : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_117 : promises, insert_lines : promise_types)
is_activated_by_class_context( promise_webserver_cf_117 : promises, any : contexts)
makes_promises( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, promise_webserver_cf_117 : promises)
makes_promise_of_type( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, promise_types__insert_lines : promise_types)
occurs_in_bundle( APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_ : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_108 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_108 : promises, any : contexts)
makes_promises( del_modules : promisers, promise_webserver_cf_108 : promises)
makes_promise_of_type( del_modules : promisers, promise_types__vars : promise_types)
occurs_in_bundle( del_modules : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_104 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_104 : promises, any : contexts)
makes_promises( add_modules : promisers, promise_webserver_cf_104 : promises)
makes_promise_of_type( add_modules : promisers, promise_types__vars : promise_types)
occurs_in_bundle( add_modules : promisers, bundles__fixapache : bundles)
is_a_promise_of_type( promise_webserver_cf_85 : promises, reports : promise_types)
is_activated_by_class_context( promise_webserver_cf_85 : promises, _software_ok_on : contexts)
makes_promises( The_web_server_software_could_not_be_installed : promisers, promise_webserver_cf_85 : promises)
makes_promise_of_type( The_web_server_software_could_not_be_installed : promisers, promise_types__reports : promise_types)
occurs_in_bundle( The_web_server_software_could_not_be_installed : promisers, bundles__web_server : bundles)
has_direct_influence_on( promise_webserver_cf_76 : promises, web_ok : any)
is_a_promise_of_type( promise_webserver_cf_76 : promises, files : promise_types)
is_activated_by_class_context( promise_webserver_cf_76 : promises, software_ok : contexts)
has_direct_influence_on( _etc_sysconfig_apache2 : promisers, web_ok : any)
makes_promises( _etc_sysconfig_apache2 : promisers, promise_webserver_cf_76 : promises)
makes_promise_of_type( _etc_sysconfig_apache2 : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_sysconfig_apache2 : promisers, bundles__web_server : bundles)
is_activated_by_class_context( software_ok : contexts, web_ok : any)
has_direct_influence_on( php5 : promisers, software_ok : contexts)
makes_promises( php5 : promisers, promise_webserver_cf_64 : promises)
makes_promise_of_type( php5 : promisers, promise_types__packages : promise_types)
occurs_in_bundle( php5 : promisers, bundles__web_server : bundles)
has_direct_influence_on( apache2_prefork : promisers, software_ok : contexts)
makes_promises( apache2_prefork : promisers, promise_webserver_cf_64 : promises)
makes_promise_of_type( apache2_prefork : promisers, promise_types__packages : promise_types)
occurs_in_bundle( apache2_prefork : promisers, bundles__web_server : bundles)
has_direct_influence_on( apache2_mod_php5 : promisers, software_ok : contexts)
makes_promises( apache2_mod_php5 : promisers, promise_webserver_cf_64 : promises)
makes_promise_of_type( apache2_mod_php5 : promisers, promise_types__packages : promise_types)
occurs_in_bundle( apache2_mod_php5 : promisers, bundles__web_server : bundles)
has_direct_influence_on( promise_webserver_cf_64 : promises, software_ok : contexts)
is_a_promise_of_type( promise_webserver_cf_64 : promises, packages : promise_types)
is_activated_by_class_context( promise_webserver_cf_64 : promises, on : contexts)
is_activated_by_class_context( on : contexts, software_ok : contexts)
returns_data_type( on : contexts, int : cfengine_3)
is_a_promise_of_type( promise_webserver_cf_53 : promises, commands : promise_types)
is_activated_by_class_context( promise_webserver_cf_53 : promises, start_apache : contexts)
makes_promises( _etc_init_d_apache2_restart : promisers, promise_webserver_cf_53 : promises)
makes_promise_of_type( _etc_init_d_apache2_restart : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _etc_init_d_apache2_restart : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_44 : promises, processes : promise_types)
is_activated_by_class_context( promise_webserver_cf_44 : promises, off : contexts)
is_a_promise_of_type( promise_webserver_cf_38 : promises, processes : promise_types)
is_activated_by_class_context( promise_webserver_cf_38 : promises, web_ok_on : contexts)
has_direct_influence_on( apache2 : promisers, software_ok : contexts)
makes_promises( apache2 : promisers, promise_webserver_cf_64 : promises)
makes_promises( apache2 : promisers, promise_webserver_cf_44 : promises)
makes_promises( apache2 : promisers, promise_webserver_cf_38 : promises)
makes_promise_of_type( apache2 : promisers, promise_types__packages : promise_types)
makes_promise_of_type( apache2 : promisers, promise_types__processes : promise_types)
occurs_in_bundle( apache2 : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_23 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_23 : promises, any : contexts)
makes_promises( match_package : promisers, promise_webserver_cf_23 : promises)
makes_promise_of_type( match_package : promisers, promise_types__vars : promise_types)
occurs_in_bundle( match_package : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_17 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_17 : promises, any : contexts)
makes_promises( site_http_conf : promisers, promise_webserver_cf_17 : promises)
makes_promise_of_type( site_http_conf : promisers, promise_types__vars : promise_types)
occurs_in_bundle( site_http_conf : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_webserver_cf_11 : promises, vars : promise_types)
is_activated_by_class_context( promise_webserver_cf_11 : promises, any : contexts)
makes_promises( document_root : promisers, promise_webserver_cf_11 : promises)
makes_promise_of_type( document_root : promisers, promise_types__vars : promise_types)
occurs_in_bundle( document_root : promisers, bundles__web_server : bundles)
is_a_promise_of_type( promise_laptop_cf_31 : promises, files : promise_types)
is_activated_by_class_context( promise_laptop_cf_31 : promises, _usb_backup_device_loaded : contexts)
makes_promises( _home_backup : promisers, promise_laptop_cf_31 : promises)
makes_promise_of_type( _home_backup : promisers, promise_types__files : promise_types)
occurs_in_bundle( _home_backup : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_laptop_cf_22 : promises, files : promise_types)
is_activated_by_class_context( promise_laptop_cf_22 : promises, usb_backup_device_loaded : contexts)
makes_promises( _media_disk_1_CfengineBackupDevice : promisers, promise_laptop_cf_22 : promises)
makes_promise_of_type( _media_disk_1_CfengineBackupDevice : promisers, promise_types__files : promise_types)
occurs_in_bundle( _media_disk_1_CfengineBackupDevice : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_laptop_cf_6 : promises, vars : promise_types)
is_activated_by_class_context( promise_laptop_cf_6 : promises, any : contexts)
makes_promises( mount_point : promisers, promise_laptop_cf_6 : promises)
makes_promise_of_type( mount_point : promisers, promise_types__vars : promise_types)
occurs_in_bundle( mount_point : promisers, bundles__laptop : bundles)
is_a_promise_of_type( promise_library_cf_206 : promises, reports : promise_types)
is_activated_by_class_context( promise_library_cf_206 : promises, exec_fix : contexts)
makes_promises( Added_a_5_minute_schedule_to_crontabs : promisers, promise_library_cf_206 : promises)
makes_promise_of_type( Added_a_5_minute_schedule_to_crontabs : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Added_a_5_minute_schedule_to_crontabs : promisers, bundles__upgrade_cfexecd : bundles)
is_a_promise_of_type( promise_library_cf_200 : promises, replace_patterns : promise_types)
is_activated_by_class_context( promise_library_cf_200 : promises, any : contexts)
makes_promises( cfexecd : promisers, promise_library_cf_200 : promises)
makes_promise_of_type( cfexecd : promisers, promise_types__replace_patterns : promise_types)
occurs_in_bundle( cfexecd : promisers, bundles__upgrade_cfexecd : bundles)
is_a_variant_of( cfexecd : promisers, cf_execd : promisers)
is_a_component_of( cfexecd : promisers, cfengine_2 : cfengine_components)
is_a_promise_of_type( promise_library_cf_196 : promises, insert_lines : promise_types)
is_activated_by_class_context( promise_library_cf_196 : promises, exec_fix : contexts)
makes_promises( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, promise_library_cf_196 : promises)
makes_promise_of_type( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, promise_types__insert_lines : promise_types)
occurs_in_bundle( 0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F : promisers, bundles__upgrade_cfexecd : bundles)
is_a_promise_of_type( promise_library_cf_171 : promises, delete_lines : promise_types)
is_activated_by_class_context( promise_library_cf_171 : promises, any : contexts)
makes_promises( __regex_ : promisers, promise_library_cf_171 : promises)
makes_promise_of_type( __regex_ : promisers, promise_types__delete_lines : promise_types)
occurs_in_bundle( __regex_ : promisers, bundles__DeleteLinesMatching : bundles)
is_a_promise_of_type( promise_library_cf_119 : promises, field_edits : promise_types)
is_activated_by_class_context( promise_library_cf_119 : promises, any : contexts)
makes_promises( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, promise_library_cf_119 : promises)
makes_promise_of_type( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, promise_types__field_edits : promise_types)
occurs_in_bundle( NETCONFIG_DNS_STATIC_SEARCHLIST__ : promisers, bundles__resolver : bundles)
is_a_promise_of_type( promise_library_cf_111 : promises, vars : promise_types)
is_activated_by_class_context( promise_library_cf_111 : promises, any : contexts)
makes_promises( search : promisers, promise_library_cf_111 : promises)
makes_promise_of_type( search : promisers, promise_types__vars : promise_types)
occurs_in_bundle( search : promisers, bundles__resolver : bundles)
is_a_promise_of_type( promise_site_cf_422 : promises, roles : promise_types)
is_activated_by_class_context( promise_site_cf_422 : promises, any : contexts)
is_promised_in_bundle( roles : promise_types, access_rules : bundles)
are_identified_in( roles : promise_types, agents : promise_theory)
are_recurring_patterns_of( roles : promise_types, promises : promise_theory)
makes_promises( __ : promisers, promise_site_cf_422 : promises)
makes_promise_of_type( __ : promisers, promise_types__roles : promise_types)
occurs_in_bundle( __ : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_418 : promises, access : promise_types)
is_activated_by_class_context( promise_site_cf_418 : promises, any : contexts)
makes_promises( _home_mark__cfagent_bin_cf_agent : promisers, promise_site_cf_418 : promises)
makes_promise_of_type( _home_mark__cfagent_bin_cf_agent : promisers, promise_types__access : promise_types)
occurs_in_bundle( _home_mark__cfagent_bin_cf_agent : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_414 : promises, access : promise_types)
is_activated_by_class_context( promise_site_cf_414 : promises, any : contexts)
makes_promises( _home_mark_LapTop : promisers, promise_site_cf_414 : promises)
makes_promise_of_type( _home_mark_LapTop : promisers, promise_types__access : promise_types)
occurs_in_bundle( _home_mark_LapTop : promisers, bundles__access_rules : bundles)
is_a_promise_of_type( promise_site_cf_401 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_401 : promises, anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high : contexts)
makes_promises( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_icmp_in__av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, promise_site_cf_401 : promises)
makes_promise_of_type( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_icmp_in__av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_icmp_in__av___mon_average_icmp_in__pm___mon_stddev_icmp_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_394 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_394 : promises, entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2 : contexts)
makes_promises( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_udp_in__av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, promise_site_cf_394 : promises)
makes_promise_of_type( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_udp_in__av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_udp_in__av___mon_average_udp_in__pm___mon_stddev_udp_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_387 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_387 : promises, entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly : contexts)
makes_promises( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at___mon_env_time_________measured_value___mon_value_dns_in__av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, promise_site_cf_387 : promises)
makes_promise_of_type( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at___mon_env_time_________measured_value___mon_value_dns_in__av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous__3dev__incoming_DNS_packets_on___mon_host__at___mon_env_time_________measured_value___mon_value_dns_in__av___average_dns_in__pm___mon_stddev_dns_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_380 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_380 : promises, entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2 : contexts)
makes_promises( Anomalous_number_of_new_TCP_connections_on___mon_host__at___mon_env_time_________measured_value___mon_value_tcpsyn_in__av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, promise_site_cf_380 : promises)
makes_promise_of_type( Anomalous_number_of_new_TCP_connections_on___mon_host__at___mon_env_time_________measured_value___mon_value_tcpsyn_in__av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Anomalous_number_of_new_TCP_connections_on___mon_host__at___mon_env_time_________measured_value___mon_value_tcpsyn_in__av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_373 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_373 : promises, entropy_www_in_low_anomaly_hosts_www_in_high_anomaly : contexts)
makes_promises( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, promise_site_cf_373 : promises)
makes_promise_of_type( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_366 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_366 : promises, entropy_www_in_high_anomaly_hosts_www_in_high_anomaly : contexts)
makes_promises( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___mon_value_www_in__av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, promise_site_cf_366 : promises)
makes_promise_of_type( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___mon_value_www_in__av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___mon_value_www_in__av___mon_average_www_in__pm___mon_stddev_www_in_ : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_359 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_359 : promises, rootprocs_high_dev2 : contexts)
makes_promises( RootProc_anomaly_high_2_dev_on___mon_host__at___mon_env_time_______measured_value___mon_value_rootprocs__av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, promise_site_cf_359 : promises)
makes_promise_of_type( RootProc_anomaly_high_2_dev_on___mon_host__at___mon_env_time_______measured_value___mon_value_rootprocs__av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, promise_types__reports : promise_types)
occurs_in_bundle( RootProc_anomaly_high_2_dev_on___mon_host__at___mon_env_time_______measured_value___mon_value_rootprocs__av___mon_average_rootprocs__pm___mon_stddev_rootprocs_ : promisers, bundles__anomalies : bundles)
makes_promises( _tmp_shadow : promisers, promise_site_cf_349 : promises)
makes_promise_of_type( _tmp_shadow : promisers, promise_types__files : promise_types)
occurs_in_bundle( _tmp_shadow : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_349 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_349 : promises, any : contexts)
makes_promises( _tmp_passwd : promisers, promise_site_cf_349 : promises)
makes_promise_of_type( _tmp_passwd : promisers, promise_types__files : promise_types)
occurs_in_bundle( _tmp_passwd : promisers, bundles__anomalies : bundles)
makes_promises( _var_cfengine_inputs_shadow : promisers, promise_site_cf_343 : promises)
makes_promise_of_type( _var_cfengine_inputs_shadow : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs_shadow : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_343 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_343 : promises, any : contexts)
makes_promises( files : promise_types, promise_site_cf_331 : promises)
makes_promise_of_type( files : promise_types, promise_types__vars : promise_types)
occurs_in_bundle( files : promise_types, bundles__anomalies : bundles)
is_promised_in_bundle( files : promise_types, setup_knowledge : bundles)
is_promised_in_bundle( files : promise_types, web_server : bundles)
is_promised_in_bundle( files : promise_types, laptop : bundles)
is_promised_in_bundle( files : promise_types, anomalies : bundles)
is_promised_in_bundle( files : promise_types, garbage_collection : bundles)
is_promised_in_bundle( files : promise_types, main : bundles)
is_promised_in_bundle( files : promise_types, cfengine : bundles)
is_promised_in_bundle( files : promise_types, update : bundles)
makes_promises( _var_cfengine_inputs_passwd : promisers, promise_site_cf_343 : promises)
makes_promise_of_type( _var_cfengine_inputs_passwd : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs_passwd : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_331 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_331 : promises, any : contexts)
is_a_promise_of_type( promise_site_cf_330 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_330 : promises, any : contexts)
makes_promises( sysdir : promisers, promise_site_cf_330 : promises)
makes_promise_of_type( sysdir : promisers, promise_types__vars : promise_types)
occurs_in_bundle( sysdir : promisers, bundles__anomalies : bundles)
is_a_promise_of_type( promise_site_cf_321 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_321 : promises, linux : contexts)
makes_promises( I_am_alive : promisers, promise_site_cf_321 : promises)
makes_promise_of_type( I_am_alive : promisers, promise_types__reports : promise_types)
occurs_in_bundle( I_am_alive : promisers, bundles__watch : bundles)
is_a_promise_of_type( free_disk_watch : promises, measurements : promise_types)
is_activated_by_class_context( free_disk_watch : promises, linux : contexts)
makes_promises( _bin_df : promisers, free_disk_watch : promises)
makes_promise_of_type( _bin_df : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _bin_df : promisers, bundles__watch : bundles)
is_a_promise_of_type( apache_watch_memory : promises, measurements : promise_types)
is_activated_by_class_context( apache_watch_memory : promises, linux : contexts)
is_a_promise_of_type( apache_watch_cpu : promises, measurements : promise_types)
is_activated_by_class_context( apache_watch_cpu : promises, linux : contexts)
makes_promises( _var_cfengine_state_cf_procs : promisers, apache_watch_memory : promises)
makes_promises( _var_cfengine_state_cf_procs : promisers, apache_watch_cpu : promises)
makes_promise_of_type( _var_cfengine_state_cf_procs : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _var_cfengine_state_cf_procs : promisers, bundles__watch : bundles)
is_a_promise_of_type( free_memory_watch : promises, measurements : promise_types)
is_activated_by_class_context( free_memory_watch : promises, linux : contexts)
makes_promises( _proc_meminfo : promisers, free_memory_watch : promises)
makes_promise_of_type( _proc_meminfo : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _proc_meminfo : promisers, bundles__watch : bundles)
is_a_promise_of_type( monitor_self_watch : promises, measurements : promise_types)
is_activated_by_class_context( monitor_self_watch : promises, atlas : contexts)
makes_promises( _var_cfengine_state_cf_rootprocs : promisers, monitor_self_watch : promises)
makes_promise_of_type( _var_cfengine_state_cf_rootprocs : promisers, promise_types__measurements : promise_types)
occurs_in_bundle( _var_cfengine_state_cf_rootprocs : promisers, bundles__watch : bundles)
is_a_promise_of_type( promise_site_cf_210 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_210 : promises, any : contexts)
makes_promises( _etc_resolv_conf____ : promisers, promise_site_cf_210 : promises)
makes_promise_of_type( _etc_resolv_conf____ : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_resolv_conf____ : promisers, bundles__garbage_collection : bundles)
is_a_promise_of_type( promise_site_cf_204 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_204 : promises, any : contexts)
makes_promises( _var_cfengine_outputs : promisers, promise_site_cf_204 : promises)
makes_promise_of_type( _var_cfengine_outputs : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_outputs : promisers, bundles__garbage_collection : bundles)
is_a_promise_of_type( promise_site_cf_177 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_177 : promises, Hr12 : contexts)
makes_promises( _usr_bin_updatedb___prunepaths__windows : promisers, promise_site_cf_177 : promises)
makes_promise_of_type( _usr_bin_updatedb___prunepaths__windows : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_bin_updatedb___prunepaths__windows : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_171 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_171 : promises, start_mysqld : contexts)
makes_promises( _etc_init_d_mysql_start : promisers, promise_site_cf_171 : promises)
makes_promise_of_type( _etc_init_d_mysql_start : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _etc_init_d_mysql_start : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_163 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_163 : promises, any : contexts)
is_a_promise_of_type( promise_site_cf_155 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_155 : promises, any : contexts)
makes_promises( mysql : promisers, promise_site_cf_155 : promises)
makes_promise_of_type( mysql : promisers, promise_types__processes : promise_types)
occurs_in_bundle( mysql : promisers, bundles__main : bundles)
is_managed_by( mysql : promisers, promise_types__database : promise_types)
is_a_promise_of_type( promise_site_cf_152 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_152 : promises, any : contexts)
is_a_promise_of_type( promise_site_cf_138 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_138 : promises, any : contexts)
makes_promises( _tmp_testfile2 : promisers, promise_site_cf_138 : promises)
makes_promise_of_type( _tmp_testfile2 : promisers, promise_types__files : promise_types)
occurs_in_bundle( _tmp_testfile2 : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_131 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_131 : promises, any : contexts)
makes_promises( _etc_resolv_conf : promisers, promise_site_cf_131 : promises)
makes_promise_of_type( _etc_resolv_conf : promisers, promise_types__files : promise_types)
occurs_in_bundle( _etc_resolv_conf : promisers, bundles__main : bundles)
has_direct_influence_on( promise_site_cf_123 : promises, up_and_running : any)
is_a_promise_of_type( promise_site_cf_123 : promises, reports : promise_types)
is_activated_by_class_context( promise_site_cf_123 : promises, _up_and_running : contexts)
has_direct_influence_on( Laptop_wakes_up : promisers, up_and_running : any)
makes_promises( Laptop_wakes_up : promisers, promise_site_cf_123 : promises)
makes_promise_of_type( Laptop_wakes_up : promisers, promise_types__reports : promise_types)
occurs_in_bundle( Laptop_wakes_up : promisers, bundles__main : bundles)
is_activated_by_class_context( _up_and_running : contexts, up_and_running : any)
is_a_promise_of_type( promise_site_cf_114 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_114 : promises, any : contexts)
makes_promises( component : promisers, promise_site_cf_114 : promises)
makes_promise_of_type( component : promisers, promise_types__vars : promise_types)
occurs_in_bundle( component : promisers, bundles__main : bundles)
is_a_promise_of_type( promise_site_cf_101 : promises, processes : promise_types)
is_activated_by_class_context( promise_site_cf_101 : promises, exec_fix : contexts)
makes_promises( cron : promisers, promise_site_cf_101 : promises)
makes_promise_of_type( cron : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cron : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_93 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_93 : promises, any : contexts)
makes_promises( _dev_sr0 : promisers, promise_site_cf_93 : promises)
makes_promise_of_type( _dev_sr0 : promisers, promise_types__files : promise_types)
occurs_in_bundle( _dev_sr0 : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_81 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_81 : promises, any : contexts)
makes_promises( _var_cfengine_inputs___ : promisers, promise_site_cf_81 : promises)
makes_promise_of_type( _var_cfengine_inputs___ : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs___ : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_74 : promises, files : promise_types)
is_activated_by_class_context( promise_site_cf_74 : promises, any : contexts)
makes_promises( _usr_bin : promisers, promise_site_cf_74 : promises)
makes_promise_of_type( _usr_bin : promisers, promise_types__files : promise_types)
occurs_in_bundle( _usr_bin : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_64 : promises, commands : promise_types)
is_activated_by_class_context( promise_site_cf_64 : promises, any : contexts)
makes_promises( _usr_sbin_ntpdate_no_pool_ntp_org : promisers, promise_site_cf_64 : promises)
makes_promise_of_type( _usr_sbin_ntpdate_no_pool_ntp_org : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _usr_sbin_ntpdate_no_pool_ntp_org : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( run_agent : promises, commands : promise_types)
is_activated_by_class_context( run_agent : promises, integrate_cfengine2 : contexts)
makes_promises( _var_cfengine_bin_cfagent : promisers, run_agent : promises)
makes_promise_of_type( _var_cfengine_bin_cfagent : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cfagent : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_42 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_42 : promises, any : contexts)
makes_promises( cf2bits : promisers, promise_site_cf_42 : promises)
makes_promise_of_type( cf2bits : promisers, promise_types__vars : promise_types)
occurs_in_bundle( cf2bits : promisers, bundles__cfengine : bundles)
is_a_promise_of_type( promise_site_cf_19 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_19 : promises, _SuSE : contexts)
is_a_promise_of_type( promise_site_cf_15 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_15 : promises, SuSE : contexts)
makes_promises( acl : promisers, promise_site_cf_15 : promises)
makes_promise_of_type( acl : promisers, promise_types__vars : promise_types)
occurs_in_bundle( acl : promisers, bundles__g : bundles)
is_a_possible_body_constraint_for( acl : promisers, promise_types__files : promise_types)
is_a_promise_of_type( promise_site_cf_13 : promises, vars : promise_types)
is_activated_by_class_context( promise_site_cf_13 : promises, SuSE : contexts)
makes_promises( crontab : promisers, promise_site_cf_19 : promises)
makes_promises( crontab : promisers, promise_site_cf_13 : promises)
makes_promise_of_type( crontab : promisers, promise_types__vars : promise_types)
occurs_in_bundle( crontab : promisers, bundles__g : bundles)
is_a_promise_of_type( promise_update_cf_45 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_45 : promises, reload_start_exec : contexts)
makes_promises( _var_cfengine_bin_cf_execd : promisers, promise_update_cf_45 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_execd : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_execd : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_41 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_41 : promises, reload_start_monitor : contexts)
makes_promises( _var_cfengine_bin_cf_monitord : promisers, promise_site_cf_163 : promises)
makes_promises( _var_cfengine_bin_cf_monitord : promisers, promise_update_cf_41 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_monitord : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_monitord : promisers, bundles__main : bundles)
occurs_in_bundle( _var_cfengine_bin_cf_monitord : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_37 : promises, commands : promise_types)
is_activated_by_class_context( promise_update_cf_37 : promises, reload_start_server : contexts)
makes_promises( _var_cfengine_bin_cf_serverd : promisers, promise_site_cf_163 : promises)
makes_promises( _var_cfengine_bin_cf_serverd : promisers, promise_update_cf_37 : promises)
makes_promise_of_type( _var_cfengine_bin_cf_serverd : promisers, promise_types__commands : promise_types)
occurs_in_bundle( _var_cfengine_bin_cf_serverd : promisers, bundles__main : bundles)
occurs_in_bundle( _var_cfengine_bin_cf_serverd : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_31 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_31 : promises, any : contexts)
makes_promises( cf_execd : promisers, promise_update_cf_31 : promises)
makes_promise_of_type( cf_execd : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_execd : promisers, bundles__update : bundles)
is_a_component_of( cf_execd : promisers, cfengine_3 : cfengine_components)
is_a_promise_of_type( promise_update_cf_30 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_30 : promises, any : contexts)
makes_promises( cf_monitord : promisers, promise_site_cf_152 : promises)
makes_promises( cf_monitord : promisers, promise_update_cf_30 : promises)
makes_promise_of_type( cf_monitord : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_monitord : promisers, bundles__main : bundles)
occurs_in_bundle( cf_monitord : promisers, bundles__update : bundles)
is_a_component_of( cf_monitord : promisers, cfengine_3 : cfengine_components)
is_a_promise_of_type( promise_update_cf_29 : promises, processes : promise_types)
is_activated_by_class_context( promise_update_cf_29 : promises, any : contexts)
makes_promises( cf_serverd : promisers, promise_site_cf_152 : promises)
makes_promises( cf_serverd : promisers, promise_update_cf_29 : promises)
makes_promise_of_type( cf_serverd : promisers, promise_types__processes : promise_types)
occurs_in_bundle( cf_serverd : promisers, bundles__main : bundles)
occurs_in_bundle( cf_serverd : promisers, bundles__update : bundles)
is_a_component_of( cf_serverd : promisers, cfengine_3 : cfengine_components)
has_direct_influence_on( promise_update_cf_21 : promises, reload : any)
is_a_promise_of_type( promise_update_cf_21 : promises, files : promise_types)
is_activated_by_class_context( promise_update_cf_21 : promises, any : contexts)
has_direct_influence_on( _var_cfengine_bin : promisers, reload : any)
makes_promises( _var_cfengine_bin : promisers, promise_update_cf_21 : promises)
makes_promise_of_type( _var_cfengine_bin : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_bin : promisers, bundles__update : bundles)
has_direct_influence_on( promise_update_cf_13 : promises, reload : any)
is_a_promise_of_type( promise_update_cf_13 : promises, files : promise_types)
is_activated_by_class_context( promise_update_cf_13 : promises, any : contexts)
has_direct_influence_on( _var_cfengine_inputs : promisers, reload : any)
makes_promises( _var_cfengine_inputs : promisers, promise_update_cf_13 : promises)
makes_promise_of_type( _var_cfengine_inputs : promisers, promise_types__files : promise_types)
occurs_in_bundle( _var_cfengine_inputs : promisers, bundles__update : bundles)
is_a_promise_of_type( promise_update_cf_7 : promises, vars : promise_types)
is_activated_by_class_context( promise_update_cf_7 : promises, any : contexts)
makes_promises( master_location : promisers, promise_update_cf_7 : promises)
makes_promise_of_type( master_location : promisers, promise_types__vars : promise_types)
occurs_in_bundle( master_location : promisers, bundles__update : bundles)
are_reported_in( software_licenses : manager_view, license_report : system_reports)
might_be_an_example_of( request_for_change : manager_view, promise_proposals : promise_theory)
might_be_an_example_of( request_for_change : manager_view, intentions : promise_theory)
are_a_basis_for( request_for_change : manager_view, change_management : management_issues)
contains_a_current_summary_of( security_view : views, software_patches_report : system_reports)
contains_a_current_summary_of( security_view : views, setuid_report : system_reports)
finds_documentation_in( operator_view : views, copernicus : system_knowledge)
see_policy_defined_events_in( operator_view : views, system_outputs : mission_status)
see_software_state( operator_view : views, installed_software_report : system_reports)
see_promise_cost_in( operator_view : views, performance_report : system_reports)
recent_compliance_at( operator_view : views, promises_not_kept_report : system_reports)
recent_compliance_at( operator_view : views, promises_repaired_report : system_reports)
recent_compliance_at( operator_view : views, promise_report : system_reports)
displays_communications_summary_in( operator_view : views, lastseen_report : system_reports)
displays_operational_goals_in( operator_view : views, system_policy : mission_status)
has_open_tickets_under( operator_view : views, faults : technical_concepts)
displays_operational_state_in( operator_view : views, host_portal : mission_status)
needs_an_appreciation_of( manager_view : views,  : system_knowledge)
needs_an_appreciation_of( manager_view : views, server_lifecycle : system_knowledge)
contains_a_current_summary_of( manager_view : views, compliance_report : system_reports)
sees_the_catalogue_of( manager_view : views, management_issues : system_knowledge)
is_responsible_for( manager_view : views, service_catalogue : system_knowledge)
designs( architect_view : views, system_policy : mission_status)
has_reference_support_in( architect_view : views, copernicus : system_knowledge)
depends_on_environmental( architect_view : views, contexts : system_policy)
is_about_plotting( architect_view : views, system_policy : mission_status)
is_informed_by( architect_view : views, service_catalogue : system_knowledge)
is_informed_by( architect_view : views, system_trends : system_knowledge)
planning_the_system_lifecycle( architect_view : views, BDMA : models_of_system_administration)
may_be_seen_from( mission_status : system_knowledge, security_view : views)
may_be_seen_from( mission_status : system_knowledge, operator_view : views)
may_be_seen_from( mission_status : system_knowledge, manager_view : views)
may_be_seen_from( mission_status : system_knowledge, architect_view : views)
is_modelled_by( server_lifecycle : system_knowledge, BDMA : models_of_system_administration)
is_a_list_of( service_catalogue : system_knowledge, services : promise_theory)
promises_are_implemented_as( service_catalogue : system_knowledge, system_policy__bundles : system_policy)
form_the_bulk_of( hosts : machine_resources, machine_resources : system_knowledge)
label_variations_in( versions : promise_theory, occurrences : promise_theory)
result_in( dependencies : promise_theory, conditional_promises : promise_theory)
are_formed_by_associating( workflows : promise_theory, actions : promise_theory)
can_talk_about( stories : promise_theory, workflows : promise_theory)
are_formed_by_associating( stories : promise_theory, topics : promise_theory)
are_formed_by_associating( services : promise_theory, promises : promise_theory)
are_represented_as( subjects : promise_theory, topics : promise_theory)
are_classified_into_disjoint( occurrences : promise_theory, occurrence_types : any)
is_a_body_constraint_of_type( occurrences : promise_theory, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( occurrences : promise_theory, replace_with : body_constraints)
are_also_called( occurrence_types : promise_theory, topic_map_sub_types : any)
are_simply_called( topic_instances : promise_theory, occurrences : promise_theory)
are_realizations_of( topic_instances : promise_theory, topics : promise_theory)
is_another_term_for( type_instances : promise_theory, topics : promise_theory)
form_networks_of( associations : promise_theory, topics : promise_theory)
represent( associations : promise_theory, structural_relationships : promise_theory)
represent( associations : promise_theory, causative_relationships : promise_theory)
represent( associations : promise_theory, location_relationships : promise_theory)
represent( associations : promise_theory, conceptual_relationships : promise_theory)
can_be_the_subject_of( actions : promise_theory, intentions : promise_theory)
can_be_the_subject_of( behaviours : promise_theory, intentions : promise_theory)
can_be_the_subject_of( facts : promise_theory, intentions : promise_theory)
can_be_classified_into_disjoint( topics : promise_theory, topic_types : any)
can_be_combined_into( topics : promise_theory, stories : promise_theory)
can_talk_about( topics : promise_theory, promises : promise_theory)
describes_the_extent__or_quantity__of_a( body_constraint : promise_theory, promise : any)
describes_the_subject__nature_or_quality__of_a( body_type : promise_theory, body_constraint : promise_theory)
has_attribute( promise_body : promise_theory, body_constraint : promise_theory)
has_attribute( promise_body : promise_theory, body_type : promise_theory)
has_instances( promise_type : promise_theory, __all_actions_ : any)
describes_the_nature__or_quality__of_a( promise_type : promise_theory, promise : any)
is_the_recipient_of( promisee : promise_theory, promise : any)
makes_a( promiser : promise_theory, promise : any)
are_a_form_of( announcements : promise_theory, communicated_information : promise_theory)
are_completed_by( conditional_promises : promise_theory, promise_of_necessary_conditions : any)
are_a_form_of( promises : promise_theory, communicated_information : promise_theory)
can_be_made_about( promises : promise_theory, topics : promise_theory)
reveal( promises : promise_theory, intentions : promise_theory)
are_a_basis_for( promise_proposals : promise_theory, promises : promise_theory)
is_a_collection_of( policy : promise_theory, promises : promise_theory)
is_a_body_constraint_of_type( policy : promise_theory, _menu_option_ : any)
is_a_possible_body_constraint_for( policy : promise_theory, promise_types__vars : promise_types)
are_collections_of( bundles : promise_theory, promises : promise_theory)
is_related_to( convergence : convergent_operators, Convergence : any)
is_related_to( cascading : models_of_organization, hierarchical_structure : models_of_organization)
is_related_to( object_paradigm : models_of_organization, object_orientation : any)
is_related_to( aspect_paradigm : models_of_organization, aspect_orientation : any)
is_related_to( service_orientation : models_of_organization, peer_to_peer_network : models_of_organization)
is_related_to( hierarchical_structure : models_of_organization, object_orientation : any)
improves( self_healing : models_of_system_administration, crises_and_fire_fighting : technical_concepts)
improves( self_healing : models_of_system_administration, unusual_operational_behaviour : technical_concepts)
improves( self_healing : models_of_system_administration, normal_operational_behaviour : technical_concepts)
improves( self_healing : models_of_system_administration, budget : technical_concepts)
improves( self_healing : models_of_system_administration, availability : technical_concepts)
improves( self_healing : models_of_system_administration, reliability : technical_concepts)
improves( autonomics : models_of_system_administration, crises_and_fire_fighting : technical_concepts)
improves( autonomics : models_of_system_administration, unusual_operational_behaviour : technical_concepts)
improves( autonomics : models_of_system_administration, normal_operational_behaviour : technical_concepts)
improves( autonomics : models_of_system_administration, budget : technical_concepts)
improves( autonomics : models_of_system_administration, availability : technical_concepts)
improves( autonomics : models_of_system_administration, reliability : technical_concepts)
improves( computer_immunology : models_of_system_administration, crises_and_fire_fighting : technical_concepts)
improves( computer_immunology : models_of_system_administration, unusual_operational_behaviour : technical_concepts)
improves( computer_immunology : models_of_system_administration, normal_operational_behaviour : technical_concepts)
improves( computer_immunology : models_of_system_administration, budget : technical_concepts)
improves( computer_immunology : models_of_system_administration, availability : technical_concepts)
improves( computer_immunology : models_of_system_administration, reliability : technical_concepts)
implement( convergent_operators : models_of_system_administration, convergence : convergent_operators)
is_implemented_in( promise_theory : models_of_system_administration, cfengine : bundles)
consists_of( audit : BDMA, system_reports : mission_status)
is_a_body_constraint_of_type( audit : BDMA, boolean : values)
is_a_possible_sub_body_constraint_for( audit : BDMA, action : values)
consists_of( manage : BDMA, repair : mission_status)
consists_of( manage : BDMA, system_outputs : mission_status)
consists_of( manage : BDMA, monitoring : mission_status)
makes_use_of( deploy : BDMA, packages : promise_types)
makes_use_of( deploy : BDMA, bundles__update : promise_types)
consists_of( build : BDMA, promises : promise_theory)
consists_of( build : BDMA, system_services : promise_theory)
consists_of( build : BDMA, system_policy : promise_theory)
bare_metal_installation_with( build : BDMA, PXE : boot_services)
may_be_implemented_by( change_management : management_issues, procedures__change_detection_scans : procedures)
see_also( incident_management : management_issues, manual__Incident_Management_vs_Maintenance : manual)
may_be_implemented_by( knowledge_management : management_issues, cf_know : cfengine_components)
may_be_implemented_by( identity_management : management_issues, manual__Changing_a_password : manual)
is_documented_by( compliance : management_issues, manual__Reporting : manual)
is_improved_by( business_value : management_issues, self_healing : models_of_system_administration)
is_improved_by( business_value : management_issues, autonomics : models_of_system_administration)
is_improved_by( business_value : management_issues, computer_immunology : models_of_system_administration)
is_distro_of( gentoo : operating_systems, linux : contexts)
is_distro_of( slackware : operating_systems, linux : contexts)
is_distro_of( debian : operating_systems, linux : contexts)
is_distro_of( redhat : operating_systems, linux : contexts)
is_distro_of( fedora : operating_systems, linux : contexts)
is_distro_of( ubuntu : operating_systems, linux : contexts)
is_distro_of( suse : operating_systems, linux : contexts)
see_also( darwin : operating_systems, macos_X : operating_systems)
is_a_packaging_of( distro : operating_systems, linux : contexts)
is_a_current_name_for( solaris : operating_systems, sunos : operating_systems)
is_related_to( gnu_linux : operating_systems, linux : contexts)
is_a_promise_type_in( __cf2_actions_ : cfengine_2, cfengine_2 : cfengine_components)
is_a_promise_type_in( __nova_actions_ : cfengine_3, cfengine_nova : cfengine_components)
is_a_promise_type_in( __cf3_actions_ : cfengine_3, cfengine_3 : cfengine_components)
is_a_list_of( rlist : cfengine_3, real : cfengine_3)
is_a_list_of_type( rlist : cfengine_3, real_number : values)
is_a_body_constraint_of_type( rlist : cfengine_3, real_number : values)
is_a_possible_body_constraint_for( rlist : cfengine_3, promise_types__vars : promise_types)
is_a_body_constraint_of_type( real : cfengine_3, real_number : values)
is_a_possible_body_constraint_for( real : cfengine_3, promise_types__vars : promise_types)
is_a_list_of( ilist : cfengine_3, int : cfengine_3)
is_a_list_of_type( ilist : cfengine_3, integer : values)
is_a_body_constraint_of_type( ilist : cfengine_3, integer : values)
is_a_possible_body_constraint_for( ilist : cfengine_3, promise_types__vars : promise_types)
is_a_body_constraint_of_type( int : cfengine_3, integer : values)
is_a_possible_body_constraint_for( int : cfengine_3, promise_types__vars : promise_types)
is_a_list_of( slist : cfengine_3, string : cfengine_3)
is_a_list_of_type( slist : cfengine_3, an_arbitrary_string : values)
is_a_body_constraint_of_type( slist : cfengine_3, an_arbitrary_string : values)
is_a_possible_body_constraint_for( slist : cfengine_3, promise_types__vars : promise_types)
is_a_body_constraint_of_type( string : cfengine_3, an_arbitrary_string : values)
is_a_possible_body_constraint_for( string : cfengine_3, promise_types__vars : promise_types)
is_a_version_of( cfengine_3_0_x : cfengine_components, cfengine : bundles)
is_a_version_of( cfengine_2_2_x : cfengine_components, cfengine : bundles)
is_a_version_of( cfengine_nova : cfengine_components, cfengine : bundles)
is_a_version_of( cfengine_nova : cfengine_components, enterprise_level_cfengine : bundles)
is_a_version_of( cfengine_nova : cfengine_components, cfengine_3 : bundles)
is_a_version_of( cfengine_3 : cfengine_components, cfengine : bundles)
is_a_version_of( cfengine_2 : cfengine_components, cfengine : bundles)
is_a_version_of( cfengine_1 : cfengine_components, cfengine : bundles)
is_a_component_of( cf_report : cfengine_components, cfengine_3 : cfengine_components)
is_a_component_of( cf_know : cfengine_components, cfengine_3 : cfengine_components)
is_a_component_of( cf_runagent : cfengine_components, cfengine_3 : cfengine_components)
is_a_component_of( cf_agent : cfengine_components, cfengine_3 : cfengine_components)
is_a_component_of( cf_promises : cfengine_components, cfengine_3 : cfengine_components)
is_a_variant_of( cfd : cfengine_components, cf_serverd : promisers)
is_a_variant_of( cfd : cfengine_components, cfservd : promisers)
is_a_component_of( cfd : cfengine_components, cfengine_1 : cfengine_components)
is_a_variant_of( cfenvgraph : cfengine_components, cf_report : cfengine_components)
is_a_component_of( cfenvgraph : cfengine_components, cfengine_2 : cfengine_components)
is_a_variant_of( cfshow : cfengine_components, cf_report : cfengine_components)
is_a_component_of( cfshow : cfengine_components, cfengine_2 : cfengine_components)
is_a_variant_of( cfrun : cfengine_components, cf_runagent : cfengine_components)
is_a_component_of( cfrun : cfengine_components, cfengine_2 : cfengine_components)
is_a_variant_of( cfenvd : cfengine_components, cf_monitord : promisers)
is_a_component_of( cfenvd : cfengine_components, cfengine_2 : cfengine_components)
is_a_variant_of( cfservd : cfengine_components, cf_serverd : promisers)
is_a_component_of( cfservd : cfengine_components, cfengine_2 : cfengine_components)
is_a_variant_of( cfagent : cfengine_components, cf_agent : cfengine_components)
is_a_component_of( cfagent : cfengine_components, cfengine_2 : cfengine_components)
explained_in( global_variables : technical_concepts, List_variable_substitution_and_expansion : any)
explained_in( lists : technical_concepts, List_variable_substitution_and_expansion : any)
are_a_special_case_of( arrays : technical_concepts, variables : technical_concepts)
may_be_implemented_by( variables : technical_concepts, setting_variables_with_functions : any)
are_promised_by( variables : technical_concepts, vars : promise_types)
is_related_to( variables : technical_concepts, Special_variables : any)
is_a_body_constraint_of_type( intermittency : technical_concepts, real : cfengine_3)
is_a_possible_body_constraint_for( intermittency : technical_concepts, promise_types__reports : promise_types)
is_an_aspect_of( budget : technical_concepts, BDIM : management_terminology)
is_a_body_constraint_of_type( lastseen : security, a_positive_integer : values)
is_a_possible_body_constraint_for( lastseen : security, promise_types__reports : promise_types)
returns_data_type( hash : security, string : cfengine_3)
is_a_body_constraint_of_type( hash : security, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( hash : security, changes : body_constraints)
implements( access_control : security, Role_based_access_control : any)
detects( monitoring : environment, environment : any)
contributes_to( monitoring : environment, mission_status : system_knowledge)
is_an_object_for( CI : management_terminology, configuration_management : management_issues)
is_a_bilateral_bundle_of( contract : management_terminology, promise_suggestions : any)
is_an_example_of( SLA : management_terminology, Agreement : any)
is_the_ITIL_name_for( CM : management_terminology, Configuration_Management : any)
is_a_framework_for_implementing( SAS_70 : compliance, SOX : compliance)
involves( EUROSOX : compliance, change_management : management_issues)
involves( EUROSOX : compliance, identity_management : management_issues)
corresponds_to( SOX : compliance, EUROSOX : compliance)
involves( SOX : compliance, change_management : management_issues)
involves( SOX : compliance, identity_management : management_issues)
standardizes_a_part_of( ISO_IEC_20000 : compliance, ITIL : compliance)
possibly_caused_by( segmentation_fault : faults, Bad_memory_reference : any)
is_managed_by( NFS : storage, promise_types__storage : promise_types)
is_managed_by( postgres : database, promise_types__database : promise_types)
returns_data_type( userexists : functions, class : data_types)
returns_data_type( usemodule : functions, class : data_types)
returns_data_type( translatepath : functions, string : cfengine_3)
returns_data_type( strcmp : functions, class : data_types)
returns_data_type( splitstring : functions, slist : cfengine_3)
returns_data_type( splayclass : functions, class : data_types)
returns_data_type( selectservers : functions, int : cfengine_3)
returns_data_type( rrange : functions, rrange__real_real_ : any)
returns_data_type( returnszero : functions, class : data_types)
returns_data_type( remoteclassesmatching : functions, class : data_types)
returns_data_type( remotescalar : functions, string : cfengine_3)
returns_data_type( regldap : functions, class : data_types)
returns_data_type( reglist : functions, class : data_types)
returns_data_type( regline : functions, class : data_types)
returns_data_type( registryvalue : functions, string : cfengine_3)
returns_data_type( regextract : functions, class : data_types)
returns_data_type( regcmp : functions, class : data_types)
returns_data_type( regarray : functions, class : data_types)
returns_data_type( readtcp : functions, string : cfengine_3)
returns_data_type( readstringlist : functions, slist : cfengine_3)
returns_data_type( readstringarray : functions, int : cfengine_3)
returns_data_type( readreallist : functions, rlist : cfengine_3)
returns_data_type( readrealarray : functions, int : cfengine_3)
returns_data_type( readintlist : functions, ilist : cfengine_3)
returns_data_type( readintarray : functions, int : cfengine_3)
returns_data_type( readfile : functions, string : cfengine_3)
returns_data_type( randomint : functions, int : cfengine_3)
returns_data_type( peerleaders : functions, slist : cfengine_3)
returns_data_type( peerleader : functions, string : cfengine_3)
returns_data_type( peers : functions, slist : cfengine_3)
returns_data_type( now : functions, int : cfengine_3)
returns_data_type( ldapvalue : functions, string : cfengine_3)
returns_data_type( ldaplist : functions, slist : cfengine_3)
returns_data_type( ldaparray : functions, class : data_types)
returns_data_type( lastnode : functions, string : cfengine_3)
returns_data_type( join : functions, string : cfengine_3)
returns_data_type( isvariable : functions, class : data_types)
returns_data_type( isplain : functions, class : data_types)
returns_data_type( isnewerthan : functions, class : data_types)
returns_data_type( islink : functions, class : data_types)
returns_data_type( islessthan : functions, class : data_types)
returns_data_type( isgreaterthan : functions, class : data_types)
returns_data_type( isdir : functions, class : data_types)
returns_data_type( irange : functions, irange__int_int_ : any)
returns_data_type( iprange : functions, class : data_types)
returns_data_type( hostsseen : functions, string : cfengine_3)
returns_data_type( hostrange : functions, class : data_types)
returns_data_type( hostinnetgroup : functions, class : data_types)
returns_data_type( host2ip : functions, string : cfengine_3)
returns_data_type( hashmatch : functions, class : data_types)
returns_data_type( groupexists : functions, class : data_types)
returns_data_type( grep : functions, string : cfengine_3)
returns_data_type( getuid : functions, int : cfengine_3)
returns_data_type( getgid : functions, int : cfengine_3)
returns_data_type( getenv : functions, string : cfengine_3)
returns_data_type( getindices : functions, slist : cfengine_3)
returns_data_type( getfields : functions, int : cfengine_3)
returns_data_type( filesexist : functions, class : data_types)
returns_data_type( fileexists : functions, class : data_types)
returns_data_type( execresult : functions, string : cfengine_3)
returns_data_type( escape : functions, string : cfengine_3)
returns_data_type( diskfree : functions, int : cfengine_3)
returns_data_type( countlinesmatching : functions, int : cfengine_3)
returns_data_type( countclassesmatching : functions, int : cfengine_3)
returns_data_type( classmatch : functions, class : data_types)
returns_data_type( classify : functions, class : data_types)
returns_data_type( changedbefore : functions, class : data_types)
returns_data_type( canonify : functions, string : cfengine_3)
returns_data_type( ago : functions, int : cfengine_3)
returns_data_type( accumulated : functions, int : cfengine_3)
returns_data_type( accessedbefore : functions, class : data_types)
is_a_possible_body_constraint_for( select_region : values, promise_types___ : promise_types)
is_a_body_constraint_of_type( comment : values, an_arbitrary_string : values)
is_a_possible_body_constraint_for( comment : values, promise_types__topics : promise_types)
is_a_possible_body_constraint_for( comment : values, promise_types___ : promise_types)
is_a_list_of_type( depends_on : values, an_arbitrary_string : values)
is_a_body_constraint_of_type( depends_on : values, an_arbitrary_string : values)
is_a_possible_body_constraint_for( depends_on : values, promise_types___ : promise_types)
is_a_body_constraint_of_type( handle : values, string : cfengine_3)
is_a_possible_body_constraint_for( handle : values, promise_types___ : promise_types)
is_a_body_constraint_of_type( ifvarclass : values, an_arbitrary_string : values)
is_a_possible_body_constraint_for( ifvarclass : values, promise_types___ : promise_types)
is_a_possible_body_constraint_for( classes : values, promise_types___ : promise_types)
is_a_possible_body_constraint_for( action : values, promise_types___ : promise_types)
is_a_body_constraint_of_type( track_growing_file : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( track_growing_file : body_constraints, match_value : body_constraints)
is_a_body_constraint_of_type( extraction_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( extraction_regex : body_constraints, match_value : body_constraints)
is_a_body_constraint_of_type( select_line_number : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( select_line_number : body_constraints, match_value : body_constraints)
is_a_possible_body_constraint_for( match_value : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( units : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( units : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( history_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( history_type : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( data_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( data_type : body_constraints, promise_types__measurements : promise_types)
is_a_body_constraint_of_type( stream_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( stream_type : body_constraints, promise_types__measurements : promise_types)
is_promised_in_bundle( measurements : promise_types, watch : bundles)
is_a_body_constraint_of_type( inference : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( inference : body_constraints, infer : body_constraints)
is_a_body_constraint_of_type( post_assoc_pattern : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( post_assoc_pattern : body_constraints, infer : body_constraints)
is_a_body_constraint_of_type( pre_assoc_pattern : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( pre_assoc_pattern : body_constraints, infer : body_constraints)
is_a_possible_body_constraint_for( infer : body_constraints, promise_types__inferences : promise_types)
is_a_body_constraint_of_type( follow_topics : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( follow_topics : body_constraints, promise_types__inferences : promise_types)
is_a_body_constraint_of_type( path_root : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( path_root : body_constraints, promise_types__occurrences : promise_types)
is_a_body_constraint_of_type( web_root : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( web_root : body_constraints, promise_types__occurrences : promise_types)
is_a_body_constraint_of_type( representation : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( representation : body_constraints, promise_types__occurrences : promise_types)
is_a_list_of_type( represents : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( represents : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( represents : body_constraints, promise_types__occurrences : promise_types)
is_a_list_of_type( associates : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( associates : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( associates : body_constraints, association : body_constraints)
is_a_body_constraint_of_type( backward_relationship : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( backward_relationship : body_constraints, association : body_constraints)
is_a_body_constraint_of_type( forward_relationship : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( forward_relationship : body_constraints, association : body_constraints)
is_a_possible_body_constraint_for( association : body_constraints, promise_types__topics : promise_types)
is_a_list_of_type( authorize : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( authorize : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( authorize : body_constraints, promise_types__roles : promise_types)
is_a_body_constraint_of_type( resource_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( resource_type : body_constraints, promise_types__access : promise_types)
is_a_body_constraint_of_type( ifencrypted : body_constraints, boolean : values)
is_a_possible_body_constraint_for( ifencrypted : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( maproot : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( maproot : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( maproot : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( deny : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( deny : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( deny : body_constraints, promise_types__access : promise_types)
is_a_list_of_type( admit : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( admit : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( admit : body_constraints, promise_types__access : promise_types)
is_promised_in_bundle( access : promise_types, access_rules : bundles)
is_a_body_constraint_of_type( scan_arrivals : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( scan_arrivals : body_constraints, volume : body_constraints)
is_a_body_constraint_of_type( sensible_count : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( sensible_count : body_constraints, volume : body_constraints)
is_a_body_constraint_of_type( sensible_size : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( sensible_size : body_constraints, volume : body_constraints)
is_a_body_constraint_of_type( freespace : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( freespace : body_constraints, volume : body_constraints)
is_a_body_constraint_of_type( check_foreign : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( check_foreign : body_constraints, volume : body_constraints)
is_a_possible_body_constraint_for( volume : body_constraints, promise_types__storage : promise_types)
is_a_body_constraint_of_type( unmount : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( unmount : body_constraints, mount : body_constraints)
is_a_list_of_type( mount_options : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( mount_options : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( mount_options : body_constraints, mount : body_constraints)
is_a_body_constraint_of_type( mount_server : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( mount_server : body_constraints, mount : body_constraints)
is_a_body_constraint_of_type( mount_source : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( mount_source : body_constraints, mount : body_constraints)
is_a_body_constraint_of_type( mount_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( mount_type : body_constraints, mount : body_constraints)
is_a_body_constraint_of_type( edit_fstab : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( edit_fstab : body_constraints, mount : body_constraints)
is_a_possible_body_constraint_for( mount : body_constraints, promise_types__storage : promise_types)
is_a_body_constraint_of_type( service_dependence_chain : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( service_dependence_chain : body_constraints, service_method : body_constraints)
is_a_body_constraint_of_type( service_autostart_policy : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( service_autostart_policy : body_constraints, service_method : body_constraints)
is_a_body_constraint_of_type( service_args : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( service_args : body_constraints, service_method : body_constraints)
is_a_body_constraint_of_type( service_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( service_type : body_constraints, service_method : body_constraints)
is_a_possible_body_constraint_for( service_method : body_constraints, promise_types__services : promise_types)
is_a_list_of_type( service_dependencies : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( service_dependencies : body_constraints, slist : cfengine_3)
is_a_possible_body_constraint_for( service_dependencies : body_constraints, promise_types__services : promise_types)
is_a_body_constraint_of_type( service_policy : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( service_policy : body_constraints, promise_types__services : promise_types)
is_a_body_constraint_of_type( signals : body_constraints, system_signals : values)
is_a_possible_body_constraint_for( signals : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( restart_class : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( restart_class : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( process_stop : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( process_stop : body_constraints, promise_types__processes : promise_types)
is_a_body_constraint_of_type( vsize : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( vsize : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( threads : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( threads : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( tty : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( tty : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( ttime_range : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( ttime_range : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( stime_range : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( stime_range : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( status : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( status : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( rsize : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( rsize : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( process_result : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( process_result : body_constraints, process_select : body_constraints)
is_a_list_of_type( process_owner : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( process_owner : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( process_owner : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( priority : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( priority : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( ppid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( ppid : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( pgid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( pgid : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( pid : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( pid : body_constraints, process_select : body_constraints)
is_a_body_constraint_of_type( command : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( command : body_constraints, process_select : body_constraints)
is_a_possible_body_constraint_for( process_select : body_constraints, promise_types__processes : promise_types)
is_a_list_of_type( out_of_range_define : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( out_of_range_define : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( out_of_range_define : body_constraints, process_count : body_constraints)
is_a_body_constraint_of_type( match_range : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( match_range : body_constraints, process_count : body_constraints)
is_a_list_of_type( in_range_define : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( in_range_define : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( in_range_define : body_constraints, process_count : body_constraints)
is_a_possible_body_constraint_for( process_count : body_constraints, promise_types__processes : promise_types)
is_promised_in_bundle( processes : promise_types, web_server : contexts)
is_promised_in_bundle( processes : promise_types, main : contexts)
is_promised_in_bundle( processes : promise_types, cfengine : contexts)
is_promised_in_bundle( processes : promise_types, update : contexts)
is_a_body_constraint_of_type( package_version : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( package_version : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_select : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( package_select : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_policy : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( package_policy : body_constraints, promise_types__packages : promise_types)
is_a_body_constraint_of_type( package_multiline_start : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_multiline_start : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_version_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_version_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_verify_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_verify_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_update_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_update_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_version_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_version_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_name_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_name_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_list_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_patch_list_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_installed_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_installed_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_patch_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_patch_arch_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_patch_arch_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_noverify_returncode : body_constraints, integer : values)
is_a_possible_sub_body_constraint_for( package_noverify_returncode : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_noverify_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_noverify_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_name_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_name_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_name_convention : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_name_convention : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_version_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_version_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_update_ifelapsed : body_constraints, integer : values)
is_a_possible_sub_body_constraint_for( package_list_update_ifelapsed : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_update_command : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_update_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_name_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_name_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_list_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_list_arch_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_list_arch_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_installed_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_installed_regex : body_constraints, package_method : body_constraints)
is_a_list_of_type( package_file_repositories : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( package_file_repositories : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_file_repositories : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_delete_convention : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_delete_convention : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_delete_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_delete_command : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_changes : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( package_changes : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_arch_regex : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( package_arch_regex : body_constraints, package_method : body_constraints)
is_a_body_constraint_of_type( package_add_command : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( package_add_command : body_constraints, package_method : body_constraints)
is_a_possible_body_constraint_for( package_method : body_constraints, promise_types__packages : promise_types)
is_a_list_of_type( package_architectures : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( package_architectures : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( package_architectures : body_constraints, promise_types__packages : promise_types)
is_promised_in_bundle( packages : promise_types, web_server : contexts)
is_a_body_constraint_of_type( promiser_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( promiser_type : body_constraints, promise_types__outputs : promise_types)
is_a_body_constraint_of_type( output_level : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( output_level : body_constraints, promise_types__outputs : promise_types)
is_a_body_constraint_of_type( usebundle : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( usebundle : body_constraints, promise_types__methods : promise_types)
is_a_body_constraint_of_type( ipv6_address : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( ipv6_address : body_constraints, tcp_ip : body_constraints)
is_a_body_constraint_of_type( ipv4_netmask : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( ipv4_netmask : body_constraints, tcp_ip : body_constraints)
is_a_body_constraint_of_type( ipv4_address : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( ipv4_address : body_constraints, tcp_ip : body_constraints)
is_a_possible_body_constraint_for( tcp_ip : body_constraints, promise_types__interfaces : promise_types)
is_a_body_constraint_of_type( replace_value : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( replace_value : body_constraints, replace_with : body_constraints)
is_a_possible_body_constraint_for( replace_with : body_constraints, promise_types__replace_patterns : promise_types)
is_promised_in_bundle( replace_patterns : promise_types, upgrade_cfexecd : bundles)
is_a_body_constraint_of_type( value_separator : body_constraints, a_single_character : values)
is_a_possible_sub_body_constraint_for( value_separator : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( select_field : body_constraints, int : cfengine_3)
is_a_possible_sub_body_constraint_for( select_field : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( field_value : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( field_value : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( field_separator : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( field_separator : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( field_operation : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( field_operation : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( extend_fields : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( extend_fields : body_constraints, edit_field : body_constraints)
is_a_body_constraint_of_type( allow_blank_fields : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( allow_blank_fields : body_constraints, edit_field : body_constraints)
is_a_possible_body_constraint_for( edit_field : body_constraints, promise_types__field_edits : promise_types)
is_promised_in_bundle( field_edits : promise_types, fixapache : bundles)
is_promised_in_bundle( field_edits : promise_types, resolver : bundles)
is_a_body_constraint_of_type( whitespace_policy : body_constraints, _option_list_ : any)
is_a_possible_body_constraint_for( whitespace_policy : body_constraints, promise_types__insert_lines : promise_types)
is_a_body_constraint_of_type( select_line_matching : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_line_matching : body_constraints, match_value : body_constraints)
is_a_possible_sub_body_constraint_for( select_line_matching : body_constraints, location : body_constraints)
is_a_body_constraint_of_type( first_last : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( first_last : body_constraints, location : body_constraints)
is_a_body_constraint_of_type( before_after : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( before_after : body_constraints, location : body_constraints)
is_a_possible_body_constraint_for( location : body_constraints, promise_types__insert_lines : promise_types)
is_a_list_of_type( insert_if_not_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_contains_from_list : body_constraints, insert_select : body_constraints)
is_a_list_of_type( insert_if_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_contains_from_list : body_constraints, insert_select : body_constraints)
is_a_list_of_type( insert_if_not_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_match_from_list : body_constraints, insert_select : body_constraints)
is_a_list_of_type( insert_if_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_match_from_list : body_constraints, insert_select : body_constraints)
is_a_list_of_type( insert_if_not_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_not_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_not_startwith_from_list : body_constraints, insert_select : body_constraints)
is_a_list_of_type( insert_if_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( insert_if_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( insert_if_startwith_from_list : body_constraints, insert_select : body_constraints)
is_a_possible_body_constraint_for( insert_select : body_constraints, promise_types__insert_lines : promise_types)
is_a_body_constraint_of_type( insert_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( insert_type : body_constraints, promise_types__insert_lines : promise_types)
is_a_body_constraint_of_type( expand_scalars : body_constraints, boolean : values)
is_a_possible_body_constraint_for( expand_scalars : body_constraints, promise_types__insert_lines : promise_types)
is_promised_in_bundle( insert_lines : promise_types, fixapache : bundles)
is_promised_in_bundle( insert_lines : promise_types, upgrade_cfexecd : bundles)
is_a_body_constraint_of_type( not_matching : body_constraints, boolean : values)
is_a_possible_body_constraint_for( not_matching : body_constraints, promise_types__delete_lines : promise_types)
is_a_list_of_type( delete_if_not_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_contains_from_list : body_constraints, delete_select : body_constraints)
is_a_list_of_type( delete_if_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_contains_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_contains_from_list : body_constraints, delete_select : body_constraints)
is_a_list_of_type( delete_if_not_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_match_from_list : body_constraints, delete_select : body_constraints)
is_a_list_of_type( delete_if_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_match_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_match_from_list : body_constraints, delete_select : body_constraints)
is_a_list_of_type( delete_if_not_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_not_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_not_startwith_from_list : body_constraints, delete_select : body_constraints)
is_a_list_of_type( delete_if_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( delete_if_startwith_from_list : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( delete_if_startwith_from_list : body_constraints, delete_select : body_constraints)
is_a_possible_body_constraint_for( delete_select : body_constraints, promise_types__delete_lines : promise_types)
is_promised_in_bundle( delete_lines : promise_types, DeleteLinesMatching : bundles)
is_a_body_constraint_of_type( select_end : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_end : body_constraints, select_region : values)
is_a_body_constraint_of_type( select_start : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( select_start : body_constraints, select_region : values)
is_a_body_constraint_of_type( include_start_delimiter : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( include_start_delimiter : body_constraints, select_region : values)
is_a_body_constraint_of_type( transformer : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( transformer : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( touch : body_constraints, boolean : values)
is_a_possible_body_constraint_for( touch : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( repository : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( repository : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( rotate : body_constraints, int : cfengine_3)
is_a_possible_sub_body_constraint_for( rotate : body_constraints, rename : body_constraints)
is_a_body_constraint_of_type( newname : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( newname : body_constraints, rename : body_constraints)
is_a_body_constraint_of_type( disable_suffix : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( disable_suffix : body_constraints, rename : body_constraints)
is_a_body_constraint_of_type( disable_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( disable_mode : body_constraints, rename : body_constraints)
is_a_body_constraint_of_type( disable : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( disable : body_constraints, rename : body_constraints)
is_a_possible_body_constraint_for( rename : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( rxdirs : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rxdirs : body_constraints, perms : body_constraints)
is_a_list_of_type( owners : body_constraints, a_user_group_id : values)
is_a_body_constraint_of_type( owners : body_constraints, a_user_group_id : values)
is_a_possible_sub_body_constraint_for( owners : body_constraints, perms : body_constraints)
is_a_body_constraint_of_type( mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( mode : body_constraints, perms : body_constraints)
is_a_list_of_type( groups : body_constraints, a_user_group_id : values)
is_a_body_constraint_of_type( groups : body_constraints, a_user_group_id : values)
is_a_possible_sub_body_constraint_for( groups : body_constraints, perms : body_constraints)
is_a_list_of_type( bsdflags : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( bsdflags : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( bsdflags : body_constraints, perms : body_constraints)
is_a_possible_body_constraint_for( perms : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( pathtype : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( pathtype : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( move_obstructions : body_constraints, boolean : values)
is_a_possible_body_constraint_for( move_obstructions : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( when_no_source : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( when_no_source : body_constraints, link_from : body_constraints)
is_a_body_constraint_of_type( when_linking_children : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( when_linking_children : body_constraints, link_from : body_constraints)
is_a_body_constraint_of_type( source : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( source : body_constraints, string : values)
is_a_possible_sub_body_constraint_for( source : body_constraints, link_from : body_constraints)
is_a_possible_sub_body_constraint_for( source : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( link_type : body_constraints, link_type : values)
is_a_possible_sub_body_constraint_for( link_type : body_constraints, link_from : body_constraints)
is_a_possible_sub_body_constraint_for( link_type : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( link_children : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( link_children : body_constraints, link_from : body_constraints)
is_a_list_of_type( copy_patterns : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( copy_patterns : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( copy_patterns : body_constraints, link_from : body_constraints)
is_a_possible_body_constraint_for( link_from : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( file_result : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( file_result : body_constraints, file_select : body_constraints)
is_a_list_of_type( issymlinkto : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( issymlinkto : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( issymlinkto : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( file_types : body_constraints, _option_list_ : any)
is_a_possible_sub_body_constraint_for( file_types : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( exec_program : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( exec_program : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( exec_regex : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( exec_regex : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( atime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( atime : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( mtime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( mtime : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( ctime : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( ctime : body_constraints, file_select : body_constraints)
is_a_list_of_type( search_bsdflags : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( search_bsdflags : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( search_bsdflags : body_constraints, file_select : body_constraints)
is_a_list_of_type( search_groups : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( search_groups : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( search_groups : body_constraints, file_select : body_constraints)
is_a_list_of_type( search_owners : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( search_owners : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( search_owners : body_constraints, file_select : body_constraints)
is_a_body_constraint_of_type( search_size : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( search_size : body_constraints, file_select : body_constraints)
is_a_list_of_type( search_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_body_constraint_of_type( search_mode : body_constraints, posix_file_mode_or_permission : values)
is_a_possible_sub_body_constraint_for( search_mode : body_constraints, file_select : body_constraints)
is_a_list_of_type( path_name : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( path_name : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( path_name : body_constraints, file_select : body_constraints)
is_a_list_of_type( leaf_name : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( leaf_name : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( leaf_name : body_constraints, file_select : body_constraints)
is_a_possible_body_constraint_for( file_select : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( recognize_join : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( recognize_join : body_constraints, edit_defaults : body_constraints)
is_a_body_constraint_of_type( max_file_size : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( max_file_size : body_constraints, edit_defaults : body_constraints)
is_a_body_constraint_of_type( empty_file_before_editing : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( empty_file_before_editing : body_constraints, edit_defaults : body_constraints)
is_a_body_constraint_of_type( edit_backup : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( edit_backup : body_constraints, edit_defaults : body_constraints)
is_a_possible_body_constraint_for( edit_defaults : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( edit_xml : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( edit_xml : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( edit_line : body_constraints, _ext_bundle_ : any)
is_a_possible_body_constraint_for( edit_line : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( xdev : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( xdev : body_constraints, depth_search : body_constraints)
is_a_body_constraint_of_type( traverse_links : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( traverse_links : body_constraints, depth_search : body_constraints)
is_a_body_constraint_of_type( rmdeadlinks : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rmdeadlinks : body_constraints, depth_search : body_constraints)
is_a_list_of_type( include_dirs : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( include_dirs : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( include_dirs : body_constraints, depth_search : body_constraints)
is_a_body_constraint_of_type( include_basedir : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( include_basedir : body_constraints, depth_search : body_constraints)
is_a_list_of_type( exclude_dirs : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( exclude_dirs : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exclude_dirs : body_constraints, depth_search : body_constraints)
is_a_body_constraint_of_type( depth : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( depth : body_constraints, depth_search : body_constraints)
is_a_possible_body_constraint_for( depth_search : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( rmdirs : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( rmdirs : body_constraints, delete : body_constraints)
is_a_body_constraint_of_type( dirlinks : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( dirlinks : body_constraints, delete : body_constraints)
is_a_possible_body_constraint_for( delete : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( create : body_constraints, boolean : values)
is_a_possible_body_constraint_for( create : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( verify : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( verify : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( type_check : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( type_check : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( trustkey : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( trustkey : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( stealth : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( stealth : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( purge : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( purge : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( preserve : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( preserve : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( portnumber : body_constraints, int : cfengine_3)
is_a_possible_sub_body_constraint_for( portnumber : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( force_ipv4 : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( force_ipv4 : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( force_update : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( force_update : body_constraints, copy_from : body_constraints)
is_a_list_of_type( linkcopy_patterns : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( linkcopy_patterns : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( linkcopy_patterns : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( findertype : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( findertype : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( copy_size : body_constraints, irange__int_int_ : any)
is_a_possible_sub_body_constraint_for( copy_size : body_constraints, copy_from : body_constraints)
is_a_list_of_type( copylink_patterns : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( copylink_patterns : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( copylink_patterns : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( check_root : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( check_root : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( encrypt : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( encrypt : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( copy_backup : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( copy_backup : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( compare : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( compare : body_constraints, copy_from : body_constraints)
is_a_body_constraint_of_type( collapse_destination_dir : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( collapse_destination_dir : body_constraints, copy_from : body_constraints)
is_a_list_of_type( servers : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( servers : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( servers : body_constraints, copy_from : body_constraints)
is_a_possible_body_constraint_for( copy_from : body_constraints, promise_types__files : promise_types)
is_a_body_constraint_of_type( report_diffs : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( report_diffs : body_constraints, changes : body_constraints)
is_a_body_constraint_of_type( update_hashes : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( update_hashes : body_constraints, changes : body_constraints)
is_a_body_constraint_of_type( report_changes : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( report_changes : body_constraints, changes : body_constraints)
is_a_possible_body_constraint_for( changes : body_constraints, promise_types__files : promise_types)
is_a_list_of_type( specify_inherit_aces : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( specify_inherit_aces : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( specify_inherit_aces : body_constraints, acl : promisers)
is_a_body_constraint_of_type( acl_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_type : body_constraints, acl : promisers)
is_a_body_constraint_of_type( acl_method : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_method : body_constraints, acl : promisers)
is_a_body_constraint_of_type( acl_directory_inherit : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( acl_directory_inherit : body_constraints, acl : promisers)
is_a_list_of_type( aces : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( aces : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( aces : body_constraints, acl : promisers)
is_a_body_constraint_of_type( environment_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( environment_type : body_constraints, promise_types__environments : promise_types)
is_a_body_constraint_of_type( environment_state : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( environment_state : body_constraints, promise_types__environments : promise_types)
is_a_body_constraint_of_type( env_spec_file : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( env_spec_file : body_constraints, environment_resources : body_constraints)
is_a_body_constraint_of_type( env_baseline : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( env_baseline : body_constraints, environment_resources : body_constraints)
is_a_body_constraint_of_type( env_disk : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( env_disk : body_constraints, environment_resources : body_constraints)
is_a_body_constraint_of_type( env_memory : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( env_memory : body_constraints, environment_resources : body_constraints)
is_a_body_constraint_of_type( env_cpus : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( env_cpus : body_constraints, environment_resources : body_constraints)
is_a_possible_body_constraint_for( environment_resources : body_constraints, promise_types__environments : promise_types)
is_a_body_constraint_of_type( env_network : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( env_network : body_constraints, environment_interface : body_constraints)
is_a_body_constraint_of_type( env_name : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( env_name : body_constraints, environment_interface : body_constraints)
is_a_list_of_type( env_addresses : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( env_addresses : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( env_addresses : body_constraints, environment_interface : body_constraints)
is_a_possible_body_constraint_for( environment_interface : body_constraints, promise_types__environments : promise_types)
is_a_body_constraint_of_type( environment_host : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( environment_host : body_constraints, promise_types__environments : promise_types)
is_a_list_of_type( registry_exclude : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( registry_exclude : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( registry_exclude : body_constraints, promise_types__databases : promise_types)
is_a_list_of_type( database_rows : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( database_rows : body_constraints, slist : cfengine_3)
is_a_possible_body_constraint_for( database_rows : body_constraints, promise_types__databases : promise_types)
is_a_list_of_type( database_columns : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( database_columns : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( database_columns : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( database_operation : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( database_operation : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( database_type : body_constraints, _menu_option_ : any)
is_a_possible_body_constraint_for( database_type : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( db_server_connection_db : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_connection_db : body_constraints, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_type : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( db_server_type : body_constraints, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_host : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_host : body_constraints, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_password : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_password : body_constraints, database_server : body_constraints)
is_a_body_constraint_of_type( db_server_owner : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( db_server_owner : body_constraints, database_server : body_constraints)
is_a_possible_body_constraint_for( database_server : body_constraints, promise_types__databases : promise_types)
is_a_body_constraint_of_type( module : body_constraints, boolean : values)
is_a_possible_body_constraint_for( module : body_constraints, promise_types__commands : promise_types)
is_a_body_constraint_of_type( no_output : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( no_output : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( preview : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( preview : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( chroot : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( chroot : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( chdir : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( chdir : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( exec_timeout : body_constraints, int : cfengine_3)
is_a_possible_sub_body_constraint_for( exec_timeout : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( exec_group : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exec_group : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( exec_owner : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( exec_owner : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( umask : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( umask : body_constraints, contain : body_constraints)
is_a_body_constraint_of_type( useshell : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( useshell : body_constraints, contain : body_constraints)
is_a_possible_body_constraint_for( contain : body_constraints, promise_types__commands : promise_types)
is_a_body_constraint_of_type( args : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( args : body_constraints, promise_types__commands : promise_types)
is_promised_in_bundle( commands : promise_types, setup_knowledge : bundles)
is_promised_in_bundle( commands : promise_types, web_server : bundles)
is_promised_in_bundle( commands : promise_types, main : bundles)
is_promised_in_bundle( commands : promise_types, cfengine : bundles)
is_promised_in_bundle( commands : promise_types, update : bundles)
is_a_body_constraint_of_type( timer_policy : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( timer_policy : body_constraints, classes : values)
is_a_body_constraint_of_type( persist_time : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( persist_time : body_constraints, classes : values)
is_a_list_of_type( cancel_notkept : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( cancel_notkept : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( cancel_notkept : body_constraints, classes : values)
is_a_list_of_type( cancel_repaired : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( cancel_repaired : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( cancel_repaired : body_constraints, classes : values)
is_a_list_of_type( cancel_kept : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( cancel_kept : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( cancel_kept : body_constraints, classes : values)
is_a_list_of_type( promise_kept : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( promise_kept : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( promise_kept : body_constraints, classes : values)
is_a_list_of_type( repair_timeout : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( repair_timeout : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( repair_timeout : body_constraints, classes : values)
is_a_list_of_type( repair_denied : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( repair_denied : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( repair_denied : body_constraints, classes : values)
is_a_list_of_type( repair_failed : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( repair_failed : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( repair_failed : body_constraints, classes : values)
is_a_list_of_type( promise_repaired : body_constraints, slist : cfengine_3)
is_a_body_constraint_of_type( promise_repaired : body_constraints, slist : cfengine_3)
is_a_possible_sub_body_constraint_for( promise_repaired : body_constraints, classes : values)
is_a_body_constraint_of_type( measurement_class : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( measurement_class : body_constraints, action : values)
is_a_body_constraint_of_type( report_level : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( report_level : body_constraints, action : values)
is_a_body_constraint_of_type( background : body_constraints, boolean : values)
is_a_possible_sub_body_constraint_for( background : body_constraints, action : values)
is_a_body_constraint_of_type( value_notkept : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( value_notkept : body_constraints, action : values)
is_a_body_constraint_of_type( value_repaired : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( value_repaired : body_constraints, action : values)
is_a_body_constraint_of_type( value_kept : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( value_kept : body_constraints, action : values)
is_a_body_constraint_of_type( log_failed : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( log_failed : body_constraints, action : values)
is_a_body_constraint_of_type( log_repaired : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( log_repaired : body_constraints, action : values)
is_a_body_constraint_of_type( log_priority : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( log_priority : body_constraints, action : values)
is_a_body_constraint_of_type( log_kept : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( log_kept : body_constraints, action : values)
is_a_body_constraint_of_type( log_level : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( log_level : body_constraints, action : values)
is_a_body_constraint_of_type( log_string : body_constraints, an_arbitrary_string : values)
is_a_possible_sub_body_constraint_for( log_string : body_constraints, action : values)
is_a_body_constraint_of_type( expireafter : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( expireafter : body_constraints, action : values)
is_a_body_constraint_of_type( ifelapsed : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( ifelapsed : body_constraints, action : values)
is_a_body_constraint_of_type( action_policy : body_constraints, _menu_option_ : any)
is_a_possible_sub_body_constraint_for( action_policy : body_constraints, action : values)
is_a_list_of_type( showstate : body_constraints, an_arbitrary_string : values)
is_a_body_constraint_of_type( showstate : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( showstate : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( report_to_file : body_constraints, string : cfengine_3)
is_a_possible_body_constraint_for( report_to_file : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( number_of_lines : body_constraints, a_positive_integer : values)
is_a_possible_sub_body_constraint_for( number_of_lines : body_constraints, printfile : body_constraints)
is_a_body_constraint_of_type( file_to_print : body_constraints, string : cfengine_3)
is_a_possible_sub_body_constraint_for( file_to_print : body_constraints, printfile : body_constraints)
is_a_possible_body_constraint_for( printfile : body_constraints, promise_types__reports : promise_types)
is_a_body_constraint_of_type( friend_pattern : body_constraints, an_arbitrary_string : values)
is_a_possible_body_constraint_for( friend_pattern : body_constraints, promise_types__reports : promise_types)
is_promised_in_bundle( reports : promise_types, web_server : contexts)
is_promised_in_bundle( reports : promise_types, upgrade_cfexecd : contexts)
is_promised_in_bundle( reports : promise_types, anomalies : contexts)
is_promised_in_bundle( reports : promise_types, watch : contexts)
is_promised_in_bundle( reports : promise_types, main : contexts)
is_a_body_constraint_of_type( not : body_constraints, class : data_types)
is_a_possible_body_constraint_for( not : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( expression : body_constraints, class : data_types)
is_a_possible_body_constraint_for( expression : body_constraints, promise_types__classes : promise_types)
is_a_list_of_type( dist : body_constraints, real_number : values)
is_a_body_constraint_of_type( dist : body_constraints, real_number : values)
is_a_possible_body_constraint_for( dist : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( xor : body_constraints, clist : any)
is_a_possible_body_constraint_for( xor : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( and : body_constraints, clist : any)
is_a_possible_body_constraint_for( and : body_constraints, promise_types__classes : promise_types)
is_a_body_constraint_of_type( or : body_constraints, clist : any)
is_a_possible_body_constraint_for( or : body_constraints, promise_types__classes : promise_types)
is_promised_in_bundle( vars : promise_types, setup_knowledge : bundles)
is_promised_in_bundle( vars : promise_types, fixapache : bundles)
is_promised_in_bundle( vars : promise_types, web_server : bundles)
is_promised_in_bundle( vars : promise_types, laptop : bundles)
is_promised_in_bundle( vars : promise_types, resolver : bundles)
is_promised_in_bundle( vars : promise_types, anomalies : bundles)
is_promised_in_bundle( vars : promise_types, main : bundles)
is_promised_in_bundle( vars : promise_types, cfengine : bundles)
is_promised_in_bundle( vars : promise_types, g : bundles)
is_promised_in_bundle( vars : promise_types, update : bundles)
are_used_in_constraint_parameters( an_arbitrary_string : values, extraction_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, units : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, inference : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, post_assoc_pattern : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, pre_assoc_pattern : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, follow_topics : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, path_root : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, web_root : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, represents : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, associates : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, backward_relationship : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, forward_relationship : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, authorize : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, maproot : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, deny : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, admit : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, mount_options : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, mount_server : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, service_args : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, tty : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, status : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, process_owner : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, command : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, out_of_range_define : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, in_range_define : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_version : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_multiline_start : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_version_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_patch_version_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_patch_name_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_patch_installed_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_patch_arch_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_noverify_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_name_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_name_convention : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_list_version_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_list_update_command : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_list_name_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_list_arch_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_installed_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_file_repositories : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_delete_convention : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_arch_regex : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, package_architectures : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, replace_value : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, field_value : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, field_separator : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, select_line_matching : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_not_contains_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_contains_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_not_match_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_match_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_not_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, insert_if_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_not_contains_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_contains_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_not_match_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_match_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_not_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, delete_if_startwith_from_list : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, select_end : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, select_start : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, newname : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, disable_suffix : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, source : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, copy_patterns : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, issymlinkto : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, search_groups : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, search_owners : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, leaf_name : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, include_dirs : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, exclude_dirs : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, linkcopy_patterns : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, copylink_patterns : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, env_network : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, env_name : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, env_addresses : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, registry_exclude : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, database_columns : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, db_server_connection_db : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, db_server_host : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, db_server_password : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, db_server_owner : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, exec_group : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, exec_owner : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, args : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, comment : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, depends_on : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, ifvarclass : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, measurement_class : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, value_notkept : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, value_repaired : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, value_kept : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, log_string : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, showstate : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, friend_pattern : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, slist : body_constraints)
are_used_in_constraint_parameters( an_arbitrary_string : values, string : body_constraints)
is_a_special_case_of( an_arbitrary_string : values, string : cfengine_3)
is_a_special_case_of( a_syslog_level : values, string : cfengine_3)
is_a_special_case_of( a_file_path : values, string : cfengine_3)
are_used_in_constraint_parameters( a_user_group_id : values, owners : body_constraints)
are_used_in_constraint_parameters( a_user_group_id : values, groups : body_constraints)
is_a_special_case_of( a_user_group_id : values, string : cfengine_3)
is_a_special_case_of( a_cfengine_identifier : values, string : cfengine_3)
is_a_special_case_of( a_cfengine_class_expression : values, class : data_types)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, disable_mode : body_constraints)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, mode : body_constraints)
are_used_in_constraint_parameters( posix_file_mode_or_permission : values, search_mode : body_constraints)
are_used_in_constraint_parameters( a_single_character : values, value_separator : body_constraints)
are_used_in_constraint_parameters( real_number : values, dist : body_constraints)
are_used_in_constraint_parameters( real_number : values, rlist : body_constraints)
are_used_in_constraint_parameters( real_number : values, real : body_constraints)
is_a_special_case_of( real_number : values, real : cfengine_3)
are_used_in_constraint_parameters( integer : values, package_noverify_returncode : body_constraints)
are_used_in_constraint_parameters( integer : values, package_list_update_ifelapsed : body_constraints)
are_used_in_constraint_parameters( integer : values, ilist : body_constraints)
are_used_in_constraint_parameters( integer : values, int : body_constraints)
is_a_special_case_of( integer : values, int : cfengine_3)
are_used_in_constraint_parameters( a_positive_integer : values, select_line_number : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, sensible_count : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, sensible_size : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, vsize : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, threads : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, rsize : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, ppid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, pgid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, pid : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, match_range : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, max_file_size : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, depth : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, env_disk : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, env_memory : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, env_cpus : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, persist_time : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, expireafter : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, ifelapsed : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, number_of_lines : body_constraints)
are_used_in_constraint_parameters( a_positive_integer : values, lastseen : body_constraints)
is_a_special_case_of( a_positive_integer : values, int : cfengine_3)
is_a_special_case_of( a_time_range : values, int : cfengine_3)
are_used_in_constraint_parameters( link_type : values, link_type : body_constraints)
are_used_in_constraint_parameters( boolean : values, track_growing_file : body_constraints)
are_used_in_constraint_parameters( boolean : values, ifencrypted : body_constraints)
are_used_in_constraint_parameters( boolean : values, scan_arrivals : body_constraints)
are_used_in_constraint_parameters( boolean : values, check_foreign : body_constraints)
are_used_in_constraint_parameters( boolean : values, unmount : body_constraints)
are_used_in_constraint_parameters( boolean : values, edit_fstab : body_constraints)
are_used_in_constraint_parameters( boolean : values, extend_fields : body_constraints)
are_used_in_constraint_parameters( boolean : values, allow_blank_fields : body_constraints)
are_used_in_constraint_parameters( boolean : values, expand_scalars : body_constraints)
are_used_in_constraint_parameters( boolean : values, not_matching : body_constraints)
are_used_in_constraint_parameters( boolean : values, include_start_delimiter : body_constraints)
are_used_in_constraint_parameters( boolean : values, touch : body_constraints)
are_used_in_constraint_parameters( boolean : values, disable : body_constraints)
are_used_in_constraint_parameters( boolean : values, rxdirs : body_constraints)
are_used_in_constraint_parameters( boolean : values, move_obstructions : body_constraints)
are_used_in_constraint_parameters( boolean : values, link_children : body_constraints)
are_used_in_constraint_parameters( boolean : values, recognize_join : body_constraints)
are_used_in_constraint_parameters( boolean : values, empty_file_before_editing : body_constraints)
are_used_in_constraint_parameters( boolean : values, xdev : body_constraints)
are_used_in_constraint_parameters( boolean : values, traverse_links : body_constraints)
are_used_in_constraint_parameters( boolean : values, rmdeadlinks : body_constraints)
are_used_in_constraint_parameters( boolean : values, include_basedir : body_constraints)
are_used_in_constraint_parameters( boolean : values, rmdirs : body_constraints)
are_used_in_constraint_parameters( boolean : values, create : body_constraints)
are_used_in_constraint_parameters( boolean : values, verify : body_constraints)
are_used_in_constraint_parameters( boolean : values, type_check : body_constraints)
are_used_in_constraint_parameters( boolean : values, trustkey : body_constraints)
are_used_in_constraint_parameters( boolean : values, stealth : body_constraints)
are_used_in_constraint_parameters( boolean : values, purge : body_constraints)
are_used_in_constraint_parameters( boolean : values, preserve : body_constraints)
are_used_in_constraint_parameters( boolean : values, force_ipv4 : body_constraints)
are_used_in_constraint_parameters( boolean : values, force_update : body_constraints)
are_used_in_constraint_parameters( boolean : values, check_root : body_constraints)
are_used_in_constraint_parameters( boolean : values, encrypt : body_constraints)
are_used_in_constraint_parameters( boolean : values, collapse_destination_dir : body_constraints)
are_used_in_constraint_parameters( boolean : values, report_diffs : body_constraints)
are_used_in_constraint_parameters( boolean : values, update_hashes : body_constraints)
are_used_in_constraint_parameters( boolean : values, module : body_constraints)
are_used_in_constraint_parameters( boolean : values, no_output : body_constraints)
are_used_in_constraint_parameters( boolean : values, preview : body_constraints)
are_used_in_constraint_parameters( boolean : values, useshell : body_constraints)
are_used_in_constraint_parameters( boolean : values, background : body_constraints)
are_used_in_constraint_parameters( boolean : values, audit : body_constraints)
is_a_special_case_of( boolean : values, int : cfengine_3)
are_used_in_constraint_parameters( system_signals : values, signals : body_constraints)
see_instances_of( comments : system_policy, comment : values)
is_generated_with( available_patches_report : system_reports, promise_types__packages : promise_types)
is_generated_with( installed_patches_report : system_reports, promise_types__packages : promise_types)
is_generated_with( setuid_report : system_reports, promise_types__files : promise_types)
is_based_on( performance_report : system_reports, promises : promise_theory)
is_affected_by( lastseen_report : system_reports, promise_types__access : promise_types)
is_affected_by( lastseen_report : system_reports, body_constraints__copy_from : promise_types)
is_generated_with( installed_software_report : system_reports, promise_types__packages : promise_types)
is_generated_with( hashes_report : system_reports, body_constraints__changes : body_constraints)
is_generated_with( hashes_report : system_reports, promise_types__files : body_constraints)
is_generated_with( file_diffs_report : system_reports, body_constraints__changes : body_constraints)
is_generated_with( file_diffs_report : system_reports, promise_types__files : body_constraints)
is_generated_with( file_changes_report : system_reports, body_constraints__changes : body_constraints)
is_generated_with( file_changes_report : system_reports, promise_types__files : body_constraints)
see_also( compliance_report : system_reports, promise_report : system_reports)
is_based_on( compliance_report : system_reports, promises : promise_theory)
is_generated_with( classes_report : system_reports, promise_types__classes : promise_types)

/*********************/
/* Occurrences       */
/*********************/


 /* occurrences of promise_knowledge_cf_67 */

{promise_knowledge_cf_67,commands, "promises.cf.html#promise_knowledge_cf_67"}
{promise_knowledge_cf_67,mon_update, "promises.cf.html#promise_knowledge_cf_67"}

 /* occurrences of promise_knowledge_cf_67 */

{promise_knowledge_cf_67,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-repo..)]]}

 /* occurrences of mon_update */

{mon_update,commands, "promises.cf.html#promise_knowledge_cf_67"}
{mon_update,_var_cfengine_bin_cf_report, "promises.cf.html#promise_knowledge_cf_67"}
{mon_update,promise, "promises.cf.html#promise_knowledge_cf_67"}

 /* occurrences of promise_knowledge_cf_63 */

{promise_knowledge_cf_63,commands, "promises.cf.html#promise_knowledge_cf_63"}
{promise_knowledge_cf_63,web_server, "promises.cf.html#promise_knowledge_cf_63"}

 /* occurrences of promise_knowledge_cf_63 */

{promise_knowledge_cf_63,comment, [[Generate knowledge associative graphs]]}
{promise_knowledge_cf_63,About, [[Generate knowledge associative graphs]]}

 /* occurrences of web_server */

{web_server,commands, "promises.cf.html#promise_knowledge_cf_63"}
{web_server,_usr_local_sbin_cf_know__f__srv_www_htdocs_enterprise_cf__g, "promises.cf.html#promise_knowledge_cf_63"}
{web_server,promise, "promises.cf.html#promise_knowledge_cf_63"}

 /* occurrences of web_server */

{web_server,bundle_reference, "promises.cf.html#bundle_web_server"}

 /* occurrences of promise_knowledge_cf_56 */

{promise_knowledge_cf_56,commands, "promises.cf.html#promise_knowledge_cf_56"}
{promise_knowledge_cf_56,any, "promises.cf.html#promise_knowledge_cf_56"}

 /* occurrences of promise_knowledge_cf_56 */

{promise_knowledge_cf_56,comment, [[Generate config reports]]}
{promise_knowledge_cf_56,About, [[Generate config reports]]}

 /* occurrences of promise_knowledge_cf_43 */

{promise_knowledge_cf_43,files, "promises.cf.html#promise_knowledge_cf_43"}
{promise_knowledge_cf_43,any, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of promise_knowledge_cf_43 */

{promise_knowledge_cf_43,comment, [[Update magnified view files for monitoring knowledge]]}
{promise_knowledge_cf_43,About, [[Update magnified view files for monitoring knowledge]]}

 /* occurrences of promise_knowledge_cf_35 */

{promise_knowledge_cf_35,files, "promises.cf.html#promise_knowledge_cf_35"}
{promise_knowledge_cf_35,any, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of promise_knowledge_cf_35 */

{promise_knowledge_cf_35,comment, [[Update long view files for monitoring knowledge]]}
{promise_knowledge_cf_35,About, [[Update long view files for monitoring knowledge]]}

 /* occurrences of promise_knowledge_cf_28 */

{promise_knowledge_cf_28,files, "promises.cf.html#promise_knowledge_cf_28"}
{promise_knowledge_cf_28,any, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of promise_knowledge_cf_28 */

{promise_knowledge_cf_28,comment, [[Make sure knowledge files are accessible to webserver]]}
{promise_knowledge_cf_28,About, [[Make sure knowledge files are accessible to webserver]]}

 /* occurrences of promise_knowledge_cf_15 */

{promise_knowledge_cf_15,vars, "promises.cf.html#promise_knowledge_cf_15"}
{promise_knowledge_cf_15,any, "promises.cf.html#promise_knowledge_cf_15"}

 /* occurrences of promise_knowledge_cf_15 */

{promise_knowledge_cf_15,About, [[(Uncommented promise of type <i>vars</i> made by: all_hosts..)]]}

 /* occurrences of promise_knowledge_cf_12 */

{promise_knowledge_cf_12,vars, "promises.cf.html#promise_knowledge_cf_12"}
{promise_knowledge_cf_12,any, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of promise_knowledge_cf_12 */

{promise_knowledge_cf_12,About, [[(Uncommented promise of type <i>vars</i> made by: doc_root..)]]}

 /* occurrences of setup_knowledge */

{setup_knowledge,bundle_reference, "promises.cf.html#bundle_setup_knowledge"}

 /* occurrences of promise_webserver_cf_137 */

{promise_webserver_cf_137,field_edits, "promises.cf.html#promise_webserver_cf_137"}
{promise_webserver_cf_137,any, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of promise_webserver_cf_137 */

{promise_webserver_cf_137,About, [[(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..)]]}

 /* occurrences of promise_webserver_cf_130 */

{promise_webserver_cf_130,field_edits, "promises.cf.html#promise_webserver_cf_130"}
{promise_webserver_cf_130,any, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of promise_webserver_cf_130 */

{promise_webserver_cf_130,About, [[(Uncommented promise of type <i>field_edits</i> made by: APACHE_MODULES=.*..)]]}

 /* occurrences of promise_webserver_cf_117 */

{promise_webserver_cf_117,insert_lines, "promises.cf.html#promise_webserver_cf_117"}
{promise_webserver_cf_117,any, "promises.cf.html#promise_webserver_cf_117"}

 /* occurrences of promise_webserver_cf_117 */

{promise_webserver_cf_117,About, [[(Uncommented promise of type <i>insert_lines</i> made by: APACHE_CONF_INCLUDE_FILES..)]]}

 /* occurrences of promise_webserver_cf_108 */

{promise_webserver_cf_108,vars, "promises.cf.html#promise_webserver_cf_108"}
{promise_webserver_cf_108,any, "promises.cf.html#promise_webserver_cf_108"}

 /* occurrences of promise_webserver_cf_108 */

{promise_webserver_cf_108,About, [[(Uncommented promise of type <i>vars</i> made by: del_modules..)]]}

 /* occurrences of promise_webserver_cf_104 */

{promise_webserver_cf_104,vars, "promises.cf.html#promise_webserver_cf_104"}
{promise_webserver_cf_104,any, "promises.cf.html#promise_webserver_cf_104"}

 /* occurrences of promise_webserver_cf_104 */

{promise_webserver_cf_104,About, [[(Uncommented promise of type <i>vars</i> made by: add_modules..)]]}

 /* occurrences of fixapache */

{fixapache,bundle_reference, "promises.cf.html#bundle_fixapache"}

 /* occurrences of promise_webserver_cf_85 */

{promise_webserver_cf_85,reports, "promises.cf.html#promise_webserver_cf_85"}
{promise_webserver_cf_85,_software_ok_on, "promises.cf.html#promise_webserver_cf_85"}

 /* occurrences of promise_webserver_cf_85 */

{promise_webserver_cf_85,About, [[(Uncommented promise of type <i>reports</i> made by: The web server software c..)]]}

 /* occurrences of _software_ok_on */

{_software_ok_on,reports, "promises.cf.html#promise_webserver_cf_85"}
{_software_ok_on,The_web_server_software_could_not_be_installed, "promises.cf.html#promise_webserver_cf_85"}
{_software_ok_on,promise, "promises.cf.html#promise_webserver_cf_85"}

 /* occurrences of promise_webserver_cf_76 */

{promise_webserver_cf_76,files, "promises.cf.html#promise_webserver_cf_76"}
{promise_webserver_cf_76,software_ok, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of promise_webserver_cf_76 */

{promise_webserver_cf_76,About, [[(Uncommented promise of type <i>files</i> made by: /etc/sysconfig/apache2..)]]}

 /* occurrences of software_ok */

{software_ok,files, "promises.cf.html#promise_webserver_cf_76"}
{software_ok,_etc_sysconfig_apache2, "promises.cf.html#promise_webserver_cf_76"}
{software_ok,promise, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of promise_webserver_cf_64 */

{promise_webserver_cf_64,packages, "promises.cf.html#promise_webserver_cf_64"}
{promise_webserver_cf_64,on, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of promise_webserver_cf_64 */

{promise_webserver_cf_64,About, [[(Uncommented promise of type <i>packages</i> made by: php5..)]]}

 /* occurrences of promise_webserver_cf_64 */

{promise_webserver_cf_64,About, [[(Uncommented promise of type <i>packages</i> made by: apache2-prefork..)]]}

 /* occurrences of promise_webserver_cf_64 */

{promise_webserver_cf_64,About, [[(Uncommented promise of type <i>packages</i> made by: apache2-mod_php5..)]]}

 /* occurrences of promise_webserver_cf_64 */

{promise_webserver_cf_64,About, [[(Uncommented promise of type <i>packages</i> made by: apache2..)]]}

 /* occurrences of on */

{on,php5, "promises.cf.html#promise_webserver_cf_64"}
{on,apache2_prefork, "promises.cf.html#promise_webserver_cf_64"}
{on,apache2_mod_php5, "promises.cf.html#promise_webserver_cf_64"}
{on,packages, "promises.cf.html#promise_webserver_cf_64"}
{on,apache2, "promises.cf.html#promise_webserver_cf_64"}
{on,promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of promise_webserver_cf_53 */

{promise_webserver_cf_53,commands, "promises.cf.html#promise_webserver_cf_53"}
{promise_webserver_cf_53,start_apache, "promises.cf.html#promise_webserver_cf_53"}

 /* occurrences of promise_webserver_cf_53 */

{promise_webserver_cf_53,About, [[(Uncommented promise of type <i>commands</i> made by: /etc/init.d/apache2 resta..)]]}

 /* occurrences of start_apache */

{start_apache,commands, "promises.cf.html#promise_webserver_cf_53"}
{start_apache,_etc_init_d_apache2_restart, "promises.cf.html#promise_webserver_cf_53"}
{start_apache,promise, "promises.cf.html#promise_webserver_cf_53"}

 /* occurrences of promise_webserver_cf_44 */

{promise_webserver_cf_44,processes, "promises.cf.html#promise_webserver_cf_44"}
{promise_webserver_cf_44,off, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of promise_webserver_cf_44 */

{promise_webserver_cf_44,About, [[(Uncommented promise of type <i>processes</i> made by: apache2..)]]}

 /* occurrences of off */

{off,processes, "promises.cf.html#promise_webserver_cf_44"}
{off,apache2, "promises.cf.html#promise_webserver_cf_44"}
{off,promise, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of promise_webserver_cf_38 */

{promise_webserver_cf_38,processes, "promises.cf.html#promise_webserver_cf_38"}
{promise_webserver_cf_38,web_ok_on, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of promise_webserver_cf_38 */

{promise_webserver_cf_38,About, [[(Uncommented promise of type <i>processes</i> made by: apache2..)]]}

 /* occurrences of web_ok_on */

{web_ok_on,processes, "promises.cf.html#promise_webserver_cf_38"}
{web_ok_on,apache2, "promises.cf.html#promise_webserver_cf_38"}
{web_ok_on,promise, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of promise_webserver_cf_23 */

{promise_webserver_cf_23,vars, "promises.cf.html#promise_webserver_cf_23"}
{promise_webserver_cf_23,any, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of promise_webserver_cf_23 */

{promise_webserver_cf_23,About, [[(Uncommented promise of type <i>vars</i> made by: match_package..)]]}

 /* occurrences of promise_webserver_cf_17 */

{promise_webserver_cf_17,vars, "promises.cf.html#promise_webserver_cf_17"}
{promise_webserver_cf_17,any, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of promise_webserver_cf_17 */

{promise_webserver_cf_17,About, [[(Uncommented promise of type <i>vars</i> made by: site_http_conf..)]]}

 /* occurrences of promise_webserver_cf_11 */

{promise_webserver_cf_11,vars, "promises.cf.html#promise_webserver_cf_11"}
{promise_webserver_cf_11,any, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of promise_webserver_cf_11 */

{promise_webserver_cf_11,About, [[(Uncommented promise of type <i>vars</i> made by: document_root..)]]}

 /* occurrences of promise_laptop_cf_31 */

{promise_laptop_cf_31,files, "promises.cf.html#promise_laptop_cf_31"}
{promise_laptop_cf_31,_usb_backup_device_loaded, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of promise_laptop_cf_31 */

{promise_laptop_cf_31,About, [[(Uncommented promise of type <i>files</i> made by: /home/backup..)]]}

 /* occurrences of _usb_backup_device_loaded */

{_usb_backup_device_loaded,files, "promises.cf.html#promise_laptop_cf_31"}
{_usb_backup_device_loaded,_home_backup, "promises.cf.html#promise_laptop_cf_31"}
{_usb_backup_device_loaded,promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of promise_laptop_cf_22 */

{promise_laptop_cf_22,files, "promises.cf.html#promise_laptop_cf_22"}
{promise_laptop_cf_22,usb_backup_device_loaded, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of promise_laptop_cf_22 */

{promise_laptop_cf_22,About, [[(Uncommented promise of type <i>files</i> made by: /media/disk-1/CfengineBac..)]]}

 /* occurrences of usb_backup_device_loaded */

{usb_backup_device_loaded,files, "promises.cf.html#promise_laptop_cf_22"}
{usb_backup_device_loaded,_media_disk_1_CfengineBackupDevice, "promises.cf.html#promise_laptop_cf_22"}
{usb_backup_device_loaded,promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of promise_laptop_cf_6 */

{promise_laptop_cf_6,vars, "promises.cf.html#promise_laptop_cf_6"}
{promise_laptop_cf_6,any, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of promise_laptop_cf_6 */

{promise_laptop_cf_6,About, [[(Uncommented promise of type <i>vars</i> made by: mount_point..)]]}

 /* occurrences of laptop */

{laptop,bundle_reference, "promises.cf.html#bundle_laptop"}

 /* occurrences of promise_library_cf_206 */

{promise_library_cf_206,reports, "promises.cf.html#promise_library_cf_206"}
{promise_library_cf_206,exec_fix, "promises.cf.html#promise_library_cf_206"}

 /* occurrences of promise_library_cf_206 */

{promise_library_cf_206,About, [[(Uncommented promise of type <i>reports</i> made by: Added a 5 minute schedule..)]]}

 /* occurrences of promise_library_cf_200 */

{promise_library_cf_200,replace_patterns, "promises.cf.html#promise_library_cf_200"}
{promise_library_cf_200,any, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of promise_library_cf_200 */

{promise_library_cf_200,About, [[(Uncommented promise of type <i>replace_patterns</i> made by: cfexecd..)]]}

 /* occurrences of promise_library_cf_196 */

{promise_library_cf_196,insert_lines, "promises.cf.html#promise_library_cf_196"}
{promise_library_cf_196,exec_fix, "promises.cf.html#promise_library_cf_196"}

 /* occurrences of promise_library_cf_196 */

{promise_library_cf_196,About, [[(Uncommented promise of type <i>insert_lines</i> made by: 0,5,10,15,20,25,30,35,40,..)]]}

 /* occurrences of upgrade_cfexecd */

{upgrade_cfexecd,bundle_reference, "promises.cf.html#bundle_upgrade_cfexecd"}

 /* occurrences of promise_library_cf_171 */

{promise_library_cf_171,delete_lines, "promises.cf.html#promise_library_cf_171"}
{promise_library_cf_171,any, "promises.cf.html#promise_library_cf_171"}

 /* occurrences of promise_library_cf_171 */

{promise_library_cf_171,About, [[(Uncommented promise of type <i>delete_lines</i> made by: $(regex)..)]]}

 /* occurrences of DeleteLinesMatching */

{DeleteLinesMatching,bundle_reference, "promises.cf.html#bundle_DeleteLinesMatching"}

 /* occurrences of promise_library_cf_119 */

{promise_library_cf_119,field_edits, "promises.cf.html#promise_library_cf_119"}
{promise_library_cf_119,any, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of promise_library_cf_119 */

{promise_library_cf_119,About, [[(Uncommented promise of type <i>field_edits</i> made by: NETCONFIG_DNS_STATIC_SEAR..)]]}

 /* occurrences of promise_library_cf_111 */

{promise_library_cf_111,vars, "promises.cf.html#promise_library_cf_111"}
{promise_library_cf_111,any, "promises.cf.html#promise_library_cf_111"}

 /* occurrences of promise_library_cf_111 */

{promise_library_cf_111,About, [[(Uncommented promise of type <i>vars</i> made by: search..)]]}

 /* occurrences of resolver */

{resolver,bundle_reference, "promises.cf.html#bundle_resolver"}

 /* occurrences of promise_site_cf_422 */

{promise_site_cf_422,roles, "promises.cf.html#promise_site_cf_422"}
{promise_site_cf_422,any, "promises.cf.html#promise_site_cf_422"}

 /* occurrences of promise_site_cf_422 */

{promise_site_cf_422,About, [[(Uncommented promise of type <i>roles</i> made by: .*..)]]}

 /* occurrences of promise_site_cf_418 */

{promise_site_cf_418,access, "promises.cf.html#promise_site_cf_418"}
{promise_site_cf_418,any, "promises.cf.html#promise_site_cf_418"}

 /* occurrences of promise_site_cf_418 */

{promise_site_cf_418,About, [[(Uncommented promise of type <i>access</i> made by: /home/mark/.cfagent/bin/c..)]]}

 /* occurrences of promise_site_cf_414 */

{promise_site_cf_414,access, "promises.cf.html#promise_site_cf_414"}
{promise_site_cf_414,any, "promises.cf.html#promise_site_cf_414"}

 /* occurrences of promise_site_cf_414 */

{promise_site_cf_414,About, [[(Uncommented promise of type <i>access</i> made by: /home/mark/LapTop..)]]}

 /* occurrences of access_rules */

{access_rules,bundle_reference, "promises.cf.html#bundle_access_rules"}

 /* occurrences of promise_site_cf_401 */

{promise_site_cf_401,reports, "promises.cf.html#promise_site_cf_401"}
{promise_site_cf_401,anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high, "promises.cf.html#promise_site_cf_401"}

 /* occurrences of promise_site_cf_401 */

{promise_site_cf_401,About, [[(Uncommented promise of type <i>reports</i> made by: Anomalous low entropy (3d..)]]}

 /* occurrences of anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high */

{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,reports, "promises.cf.html#promise_site_cf_401"}
{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,Anomalous_low_entropy__3dev__incoming_ICMP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_icmp_in__av___mon_average_icmp_in__pm___mon_stddev_icmp_in_, "promises.cf.html#promise_site_cf_401"}
{anomaly_hosts_icmp_in_high_anomaly__entropy_icmp_in_high,promise, "promises.cf.html#promise_site_cf_401"}

 /* occurrences of promise_site_cf_394 */

{promise_site_cf_394,reports, "promises.cf.html#promise_site_cf_394"}
{promise_site_cf_394,entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2, "promises.cf.html#promise_site_cf_394"}

 /* occurrences of promise_site_cf_394 */

{promise_site_cf_394,About, [[(Uncommented promise of type <i>reports</i> made by: Anomalous (2dev) incoming..)]]}

 /* occurrences of entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2 */

{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,reports, "promises.cf.html#promise_site_cf_394"}
{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,Anomalous__2dev__incoming__non_DNS__UDP_traffic_on___mon_host__at___mon_env_time_________measured_value___mon_value_udp_in__av___mon_average_udp_in__pm___mon_stddev_udp_in_, "promises.cf.html#promise_site_cf_394"}
{entropy_dns_in_low_anomaly_hosts_udp_in_high_dev2,promise, "promises.cf.html#promise_site_cf_394"}

 /* occurrences of promise_site_cf_387 */

{promise_site_cf_387,reports, "promises.cf.html#promise_site_cf_387"}
{promise_site_cf_387,entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly, "promises.cf.html#promise_site_cf_387"}

 /* occurrences of promise_site_cf_387 */

{promise_site_cf_387,About, [[(Uncommented promise of type <i>reports</i> made by: Anomalous (3dev) incoming..)]]}

 /* occurrences of entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly */

{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_387"}
{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,Anomalous__3dev__incoming_DNS_packets_on___mon_host__at___mon_env_time_________measured_value___mon_value_dns_in__av___average_dns_in__pm___mon_stddev_dns_in_, "promises.cf.html#promise_site_cf_387"}
{entropy_dns_in_low_anomaly_hosts_dns_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_387"}

 /* occurrences of promise_site_cf_380 */

{promise_site_cf_380,reports, "promises.cf.html#promise_site_cf_380"}
{promise_site_cf_380,entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2, "promises.cf.html#promise_site_cf_380"}

 /* occurrences of promise_site_cf_380 */

{promise_site_cf_380,About, [[(Uncommented promise of type <i>reports</i> made by: Anomalous number of new T..)]]}

 /* occurrences of entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2 */

{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,reports, "promises.cf.html#promise_site_cf_380"}
{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,Anomalous_number_of_new_TCP_connections_on___mon_host__at___mon_env_time_________measured_value___mon_value_tcpsyn_in__av___mon_average_tcpsyn_in__pm___mon_stddev_tcpsyn_in_, "promises.cf.html#promise_site_cf_380"}
{entropy_tcpsyn_in_low_anomaly_hosts_tcpsyn_in_high_dev2,promise, "promises.cf.html#promise_site_cf_380"}

 /* occurrences of promise_site_cf_373 */

{promise_site_cf_373,reports, "promises.cf.html#promise_site_cf_373"}
{promise_site_cf_373,entropy_www_in_low_anomaly_hosts_www_in_high_anomaly, "promises.cf.html#promise_site_cf_373"}

 /* occurrences of promise_site_cf_373 */

{promise_site_cf_373,About, [[(Uncommented promise of type <i>reports</i> made by: LOW ENTROPY Incoming www ..)]]}

 /* occurrences of entropy_www_in_low_anomaly_hosts_www_in_high_anomaly */

{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_373"}
{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,LOW_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___svalue_www_in__av___average_www_in__pm___stddev_www_in_, "promises.cf.html#promise_site_cf_373"}
{entropy_www_in_low_anomaly_hosts_www_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_373"}

 /* occurrences of promise_site_cf_366 */

{promise_site_cf_366,reports, "promises.cf.html#promise_site_cf_366"}
{promise_site_cf_366,entropy_www_in_high_anomaly_hosts_www_in_high_anomaly, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of promise_site_cf_366 */

{promise_site_cf_366,About, [[(Uncommented promise of type <i>reports</i> made by: HIGH ENTROPY Incoming www..)]]}

 /* occurrences of entropy_www_in_high_anomaly_hosts_www_in_high_anomaly */

{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,reports, "promises.cf.html#promise_site_cf_366"}
{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,HIGH_ENTROPY_Incoming_www_anomaly_high_anomaly_dev___on___mon_host__at___mon_env_time_________measured_value___mon_value_www_in__av___mon_average_www_in__pm___mon_stddev_www_in_, "promises.cf.html#promise_site_cf_366"}
{entropy_www_in_high_anomaly_hosts_www_in_high_anomaly,promise, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of promise_site_cf_359 */

{promise_site_cf_359,reports, "promises.cf.html#promise_site_cf_359"}
{promise_site_cf_359,rootprocs_high_dev2, "promises.cf.html#promise_site_cf_359"}

 /* occurrences of promise_site_cf_359 */

{promise_site_cf_359,About, [[(Uncommented promise of type <i>reports</i> made by: RootProc anomaly high 2 d..)]]}

 /* occurrences of rootprocs_high_dev2 */

{rootprocs_high_dev2,reports, "promises.cf.html#promise_site_cf_359"}
{rootprocs_high_dev2,RootProc_anomaly_high_2_dev_on___mon_host__at___mon_env_time_______measured_value___mon_value_rootprocs__av___mon_average_rootprocs__pm___mon_stddev_rootprocs_, "promises.cf.html#promise_site_cf_359"}
{rootprocs_high_dev2,promise, "promises.cf.html#promise_site_cf_359"}

 /* occurrences of promise_site_cf_349 */

{promise_site_cf_349,files, "promises.cf.html#promise_site_cf_349"}
{promise_site_cf_349,any, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of promise_site_cf_349 */

{promise_site_cf_349,About, [[(Uncommented promise of type <i>files</i> made by: /tmp/shadow..)]]}

 /* occurrences of promise_site_cf_349 */

{promise_site_cf_349,About, [[(Uncommented promise of type <i>files</i> made by: /tmp/passwd..)]]}

 /* occurrences of promise_site_cf_343 */

{promise_site_cf_343,files, "promises.cf.html#promise_site_cf_343"}
{promise_site_cf_343,any, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of promise_site_cf_343 */

{promise_site_cf_343,About, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/shad..)]]}

 /* occurrences of promise_site_cf_343 */

{promise_site_cf_343,About, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs/pass..)]]}

 /* occurrences of promise_site_cf_331 */

{promise_site_cf_331,vars, "promises.cf.html#promise_site_cf_331"}
{promise_site_cf_331,any, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of promise_site_cf_331 */

{promise_site_cf_331,About, [[(Uncommented promise of type <i>vars</i> made by: files..)]]}

 /* occurrences of promise_site_cf_330 */

{promise_site_cf_330,vars, "promises.cf.html#promise_site_cf_330"}
{promise_site_cf_330,any, "promises.cf.html#promise_site_cf_330"}

 /* occurrences of promise_site_cf_330 */

{promise_site_cf_330,About, [[(Uncommented promise of type <i>vars</i> made by: sysdir..)]]}

 /* occurrences of anomalies */

{anomalies,bundle_reference, "promises.cf.html#bundle_anomalies"}

 /* occurrences of promise_site_cf_321 */

{promise_site_cf_321,reports, "promises.cf.html#promise_site_cf_321"}
{promise_site_cf_321,linux, "promises.cf.html#promise_site_cf_321"}

 /* occurrences of promise_site_cf_321 */

{promise_site_cf_321,About, [[(Uncommented promise of type <i>reports</i> made by: I am alive..)]]}

 /* occurrences of free_disk_watch */

{free_disk_watch,measurements, "promises.cf.html#free_disk_watch"}
{free_disk_watch,linux, "promises.cf.html#free_disk_watch"}

 /* occurrences of free_disk_watch */

{free_disk_watch,About, [[(Uncommented promise of type <i>measurements</i> made by: /bin/df..)]]}

 /* occurrences of apache_watch_memory */

{apache_watch_memory,measurements, "promises.cf.html#apache_watch_memory"}
{apache_watch_memory,linux, "promises.cf.html#apache_watch_memory"}

 /* occurrences of apache_watch_memory */

{apache_watch_memory,About, [[(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_pr..)]]}

 /* occurrences of apache_watch_cpu */

{apache_watch_cpu,measurements, "promises.cf.html#apache_watch_cpu"}
{apache_watch_cpu,linux, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of apache_watch_cpu */

{apache_watch_cpu,About, [[(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_pr..)]]}

 /* occurrences of free_memory_watch */

{free_memory_watch,measurements, "promises.cf.html#free_memory_watch"}
{free_memory_watch,linux, "promises.cf.html#free_memory_watch"}

 /* occurrences of free_memory_watch */

{free_memory_watch,About, [[(Uncommented promise of type <i>measurements</i> made by: /proc/meminfo..)]]}

 /* occurrences of linux */

{linux,reports, "promises.cf.html#promise_site_cf_321"}
{linux,I_am_alive, "promises.cf.html#promise_site_cf_321"}
{linux,promise, "promises.cf.html#promise_site_cf_321"}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#free_disk_watch"}
{linux,_bin_df, "promises.cf.html#free_disk_watch"}
{linux,promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#apache_watch_memory"}
{linux,_var_cfengine_state_cf_procs, "promises.cf.html#apache_watch_memory"}
{linux,promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#apache_watch_cpu"}
{linux,_var_cfengine_state_cf_procs, "promises.cf.html#apache_watch_cpu"}
{linux,promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of linux */

{linux,measurements, "promises.cf.html#free_memory_watch"}
{linux,_proc_meminfo, "promises.cf.html#free_memory_watch"}
{linux,promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of monitor_self_watch */

{monitor_self_watch,measurements, "promises.cf.html#monitor_self_watch"}
{monitor_self_watch,atlas, "promises.cf.html#monitor_self_watch"}

 /* occurrences of monitor_self_watch */

{monitor_self_watch,About, [[(Uncommented promise of type <i>measurements</i> made by: /var/cfengine/state/cf_ro..)]]}

 /* occurrences of atlas */

{atlas,measurements, "promises.cf.html#monitor_self_watch"}
{atlas,_var_cfengine_state_cf_rootprocs, "promises.cf.html#monitor_self_watch"}
{atlas,promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of watch */

{watch,bundle_reference, "promises.cf.html#bundle_watch"}

 /* occurrences of promise_site_cf_210 */

{promise_site_cf_210,files, "promises.cf.html#promise_site_cf_210"}
{promise_site_cf_210,any, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of promise_site_cf_210 */

{promise_site_cf_210,About, [[(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf\..*..)]]}

 /* occurrences of promise_site_cf_204 */

{promise_site_cf_204,files, "promises.cf.html#promise_site_cf_204"}
{promise_site_cf_204,any, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of promise_site_cf_204 */

{promise_site_cf_204,About, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/outputs..)]]}

 /* occurrences of garbage_collection */

{garbage_collection,bundle_reference, "promises.cf.html#bundle_garbage_collection"}

 /* occurrences of promise_site_cf_177 */

{promise_site_cf_177,commands, "promises.cf.html#promise_site_cf_177"}
{promise_site_cf_177,Hr12, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of promise_site_cf_177 */

{promise_site_cf_177,comment, [[Update the locate database]]}
{promise_site_cf_177,About, [[Update the locate database]]}

 /* occurrences of Hr12 */

{Hr12,commands, "promises.cf.html#promise_site_cf_177"}
{Hr12,_usr_bin_updatedb___prunepaths__windows, "promises.cf.html#promise_site_cf_177"}
{Hr12,promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of promise_site_cf_171 */

{promise_site_cf_171,commands, "promises.cf.html#promise_site_cf_171"}
{promise_site_cf_171,start_mysqld, "promises.cf.html#promise_site_cf_171"}

 /* occurrences of promise_site_cf_171 */

{promise_site_cf_171,About, [[(Uncommented promise of type <i>commands</i> made by: /etc/init.d/mysql start..)]]}

 /* occurrences of start_mysqld */

{start_mysqld,commands, "promises.cf.html#promise_site_cf_171"}
{start_mysqld,_etc_init_d_mysql_start, "promises.cf.html#promise_site_cf_171"}
{start_mysqld,promise, "promises.cf.html#promise_site_cf_171"}

 /* occurrences of promise_site_cf_163 */

{promise_site_cf_163,commands, "promises.cf.html#promise_site_cf_163"}
{promise_site_cf_163,any, "promises.cf.html#promise_site_cf_163"}

 /* occurrences of promise_site_cf_163 */

{promise_site_cf_163,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..)]]}

 /* occurrences of promise_site_cf_163 */

{promise_site_cf_163,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..)]]}

 /* occurrences of promise_site_cf_155 */

{promise_site_cf_155,processes, "promises.cf.html#promise_site_cf_155"}
{promise_site_cf_155,any, "promises.cf.html#promise_site_cf_155"}

 /* occurrences of promise_site_cf_155 */

{promise_site_cf_155,About, [[(Uncommented promise of type <i>processes</i> made by: mysql..)]]}

 /* occurrences of promise_site_cf_152 */

{promise_site_cf_152,processes, "promises.cf.html#promise_site_cf_152"}
{promise_site_cf_152,any, "promises.cf.html#promise_site_cf_152"}

 /* occurrences of promise_site_cf_152 */

{promise_site_cf_152,About, [[(Uncommented promise of type <i>processes</i> made by: cf-serverd..)]]}

 /* occurrences of promise_site_cf_152 */

{promise_site_cf_152,About, [[(Uncommented promise of type <i>processes</i> made by: cf-monitord..)]]}

 /* occurrences of promise_site_cf_138 */

{promise_site_cf_138,files, "promises.cf.html#promise_site_cf_138"}
{promise_site_cf_138,any, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of promise_site_cf_138 */

{promise_site_cf_138,comment, [[Lay a tripwire for change management]]}
{promise_site_cf_138,About, [[Lay a tripwire for change management]]}

 /* occurrences of promise_site_cf_131 */

{promise_site_cf_131,files, "promises.cf.html#promise_site_cf_131"}
{promise_site_cf_131,any, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of promise_site_cf_131 */

{promise_site_cf_131,About, [[(Uncommented promise of type <i>files</i> made by: /etc/resolv.conf..)]]}

 /* occurrences of promise_site_cf_123 */

{promise_site_cf_123,reports, "promises.cf.html#promise_site_cf_123"}
{promise_site_cf_123,_up_and_running, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of promise_site_cf_123 */

{promise_site_cf_123,About, [[(Uncommented promise of type <i>reports</i> made by: Laptop wakes up..)]]}

 /* occurrences of _up_and_running */

{_up_and_running,reports, "promises.cf.html#promise_site_cf_123"}
{_up_and_running,Laptop_wakes_up, "promises.cf.html#promise_site_cf_123"}
{_up_and_running,promise, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of promise_site_cf_114 */

{promise_site_cf_114,vars, "promises.cf.html#promise_site_cf_114"}
{promise_site_cf_114,any, "promises.cf.html#promise_site_cf_114"}

 /* occurrences of promise_site_cf_114 */

{promise_site_cf_114,About, [[(Uncommented promise of type <i>vars</i> made by: component..)]]}

 /* occurrences of main */

{main,bundle_reference, "promises.cf.html#bundle_main"}

 /* occurrences of promise_site_cf_101 */

{promise_site_cf_101,processes, "promises.cf.html#promise_site_cf_101"}
{promise_site_cf_101,exec_fix, "promises.cf.html#promise_site_cf_101"}

 /* occurrences of promise_site_cf_101 */

{promise_site_cf_101,About, [[(Uncommented promise of type <i>processes</i> made by: cron..)]]}

 /* occurrences of exec_fix */

{exec_fix,reports, "promises.cf.html#promise_library_cf_206"}
{exec_fix,Added_a_5_minute_schedule_to_crontabs, "promises.cf.html#promise_library_cf_206"}
{exec_fix,promise, "promises.cf.html#promise_library_cf_206"}

 /* occurrences of exec_fix */

{exec_fix,insert_lines, "promises.cf.html#promise_library_cf_196"}
{exec_fix,0_5_10_15_20_25_30_35_40_45_50_55__________var_cfengine_bin_cf_execd__F, "promises.cf.html#promise_library_cf_196"}
{exec_fix,promise, "promises.cf.html#promise_library_cf_196"}

 /* occurrences of exec_fix */

{exec_fix,processes, "promises.cf.html#promise_site_cf_101"}
{exec_fix,cron, "promises.cf.html#promise_site_cf_101"}
{exec_fix,promise, "promises.cf.html#promise_site_cf_101"}

 /* occurrences of promise_site_cf_93 */

{promise_site_cf_93,files, "promises.cf.html#promise_site_cf_93"}
{promise_site_cf_93,any, "promises.cf.html#promise_site_cf_93"}

 /* occurrences of promise_site_cf_93 */

{promise_site_cf_93,comment, [[This is inaccessible in new suse after cd opened/closed]]}
{promise_site_cf_93,About, [[This is inaccessible in new suse after cd opened/closed]]}

 /* occurrences of promise_site_cf_81 */

{promise_site_cf_81,files, "promises.cf.html#promise_site_cf_81"}
{promise_site_cf_81,any, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of promise_site_cf_81 */

{promise_site_cf_81,comment, [[Check if there are still promises about cfengine 2 that need removing]]}
{promise_site_cf_81,About, [[Check if there are still promises about cfengine 2 that need removing]]}

 /* occurrences of promise_site_cf_74 */

{promise_site_cf_74,files, "promises.cf.html#promise_site_cf_74"}
{promise_site_cf_74,any, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of promise_site_cf_74 */

{promise_site_cf_74,comment, [[Test change detection]]}
{promise_site_cf_74,About, [[Test change detection]]}

 /* occurrences of promise_site_cf_64 */

{promise_site_cf_64,commands, "promises.cf.html#promise_site_cf_64"}
{promise_site_cf_64,any, "promises.cf.html#promise_site_cf_64"}

 /* occurrences of promise_site_cf_64 */

{promise_site_cf_64,About, [[(Uncommented promise of type <i>commands</i> made by: /usr/sbin/ntpdate no.pool..)]]}

 /* occurrences of run_agent */

{run_agent,commands, "promises.cf.html#run_agent"}
{run_agent,integrate_cfengine2, "promises.cf.html#run_agent"}

 /* occurrences of run_agent */

{run_agent,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cfagent..)]]}

 /* occurrences of integrate_cfengine2 */

{integrate_cfengine2,commands, "promises.cf.html#run_agent"}
{integrate_cfengine2,_var_cfengine_bin_cfagent, "promises.cf.html#run_agent"}
{integrate_cfengine2,promise, "promises.cf.html#run_agent"}

 /* occurrences of promise_site_cf_42 */

{promise_site_cf_42,vars, "promises.cf.html#promise_site_cf_42"}
{promise_site_cf_42,any, "promises.cf.html#promise_site_cf_42"}

 /* occurrences of promise_site_cf_42 */

{promise_site_cf_42,About, [[(Uncommented promise of type <i>vars</i> made by: cf2bits..)]]}

 /* occurrences of cfengine */

{cfengine,bundle_reference, "promises.cf.html#bundle_cfengine"}

 /* occurrences of promise_site_cf_19 */

{promise_site_cf_19,vars, "promises.cf.html#promise_site_cf_19"}
{promise_site_cf_19,_SuSE, "promises.cf.html#promise_site_cf_19"}

 /* occurrences of promise_site_cf_19 */

{promise_site_cf_19,About, [[(Uncommented promise of type <i>vars</i> made by: crontab..)]]}

 /* occurrences of _SuSE */

{_SuSE,vars, "promises.cf.html#promise_site_cf_19"}
{_SuSE,crontab, "promises.cf.html#promise_site_cf_19"}
{_SuSE,promise, "promises.cf.html#promise_site_cf_19"}

 /* occurrences of promise_site_cf_15 */

{promise_site_cf_15,vars, "promises.cf.html#promise_site_cf_15"}
{promise_site_cf_15,SuSE, "promises.cf.html#promise_site_cf_15"}

 /* occurrences of promise_site_cf_15 */

{promise_site_cf_15,About, [[(Uncommented promise of type <i>vars</i> made by: acl..)]]}

 /* occurrences of promise_site_cf_13 */

{promise_site_cf_13,vars, "promises.cf.html#promise_site_cf_13"}
{promise_site_cf_13,SuSE, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of promise_site_cf_13 */

{promise_site_cf_13,About, [[(Uncommented promise of type <i>vars</i> made by: crontab..)]]}

 /* occurrences of SuSE */

{SuSE,vars, "promises.cf.html#promise_site_cf_15"}
{SuSE,acl, "promises.cf.html#promise_site_cf_15"}
{SuSE,promise, "promises.cf.html#promise_site_cf_15"}

 /* occurrences of SuSE */

{SuSE,vars, "promises.cf.html#promise_site_cf_13"}
{SuSE,crontab, "promises.cf.html#promise_site_cf_13"}
{SuSE,promise, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of g */

{g,bundle_reference, "promises.cf.html#bundle_g"}

 /* occurrences of promise_update_cf_45 */

{promise_update_cf_45,commands, "promises.cf.html#promise_update_cf_45"}
{promise_update_cf_45,reload_start_exec, "promises.cf.html#promise_update_cf_45"}

 /* occurrences of promise_update_cf_45 */

{promise_update_cf_45,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-exec..)]]}

 /* occurrences of reload_start_exec */

{reload_start_exec,commands, "promises.cf.html#promise_update_cf_45"}
{reload_start_exec,_var_cfengine_bin_cf_execd, "promises.cf.html#promise_update_cf_45"}
{reload_start_exec,promise, "promises.cf.html#promise_update_cf_45"}

 /* occurrences of promise_update_cf_41 */

{promise_update_cf_41,commands, "promises.cf.html#promise_update_cf_41"}
{promise_update_cf_41,reload_start_monitor, "promises.cf.html#promise_update_cf_41"}

 /* occurrences of promise_update_cf_41 */

{promise_update_cf_41,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-moni..)]]}

 /* occurrences of reload_start_monitor */

{reload_start_monitor,commands, "promises.cf.html#promise_update_cf_41"}
{reload_start_monitor,_var_cfengine_bin_cf_monitord, "promises.cf.html#promise_update_cf_41"}
{reload_start_monitor,promise, "promises.cf.html#promise_update_cf_41"}

 /* occurrences of promise_update_cf_37 */

{promise_update_cf_37,commands, "promises.cf.html#promise_update_cf_37"}
{promise_update_cf_37,reload_start_server, "promises.cf.html#promise_update_cf_37"}

 /* occurrences of promise_update_cf_37 */

{promise_update_cf_37,About, [[(Uncommented promise of type <i>commands</i> made by: /var/cfengine/bin/cf-serv..)]]}

 /* occurrences of reload_start_server */

{reload_start_server,commands, "promises.cf.html#promise_update_cf_37"}
{reload_start_server,_var_cfengine_bin_cf_serverd, "promises.cf.html#promise_update_cf_37"}
{reload_start_server,promise, "promises.cf.html#promise_update_cf_37"}

 /* occurrences of promise_update_cf_31 */

{promise_update_cf_31,processes, "promises.cf.html#promise_update_cf_31"}
{promise_update_cf_31,any, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of promise_update_cf_31 */

{promise_update_cf_31,About, [[(Uncommented promise of type <i>processes</i> made by: cf-execd..)]]}

 /* occurrences of promise_update_cf_30 */

{promise_update_cf_30,processes, "promises.cf.html#promise_update_cf_30"}
{promise_update_cf_30,any, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of promise_update_cf_30 */

{promise_update_cf_30,About, [[(Uncommented promise of type <i>processes</i> made by: cf-monitord..)]]}

 /* occurrences of promise_update_cf_29 */

{promise_update_cf_29,processes, "promises.cf.html#promise_update_cf_29"}
{promise_update_cf_29,any, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of promise_update_cf_29 */

{promise_update_cf_29,About, [[(Uncommented promise of type <i>processes</i> made by: cf-serverd..)]]}

 /* occurrences of promise_update_cf_21 */

{promise_update_cf_21,files, "promises.cf.html#promise_update_cf_21"}
{promise_update_cf_21,any, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of promise_update_cf_21 */

{promise_update_cf_21,About, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/bin..)]]}

 /* occurrences of promise_update_cf_13 */

{promise_update_cf_13,files, "promises.cf.html#promise_update_cf_13"}
{promise_update_cf_13,any, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of promise_update_cf_13 */

{promise_update_cf_13,About, [[(Uncommented promise of type <i>files</i> made by: /var/cfengine/inputs..)]]}

 /* occurrences of promise_update_cf_7 */

{promise_update_cf_7,vars, "promises.cf.html#promise_update_cf_7"}
{promise_update_cf_7,any, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of promise_update_cf_7 */

{promise_update_cf_7,About, [[(Uncommented promise of type <i>vars</i> made by: master_location..)]]}

 /* occurrences of any */

{any,commands, "promises.cf.html#promise_knowledge_cf_56"}
{any,_usr_local_sbin_cf_promises__r, "promises.cf.html#promise_knowledge_cf_56"}
{any,promise, "promises.cf.html#promise_knowledge_cf_56"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_knowledge_cf_43"}
{any,_srv_www_htdocs_reports_192_168_1_100_mean_field_nov, "promises.cf.html#promise_knowledge_cf_43"}
{any,promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_knowledge_cf_35"}
{any,_srv_www_htdocs_reports_192_168_1_100_fluctuations_nov, "promises.cf.html#promise_knowledge_cf_35"}
{any,promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_knowledge_cf_28"}
{any,_srv_www_htdocs, "promises.cf.html#promise_knowledge_cf_28"}
{any,promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_knowledge_cf_15"}
{any,all_hosts, "promises.cf.html#promise_knowledge_cf_15"}
{any,promise, "promises.cf.html#promise_knowledge_cf_15"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_knowledge_cf_12"}
{any,doc_root, "promises.cf.html#promise_knowledge_cf_12"}
{any,promise, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_webserver_cf_137"}
{any,APACHE_MODULES___, "promises.cf.html#promise_webserver_cf_137"}
{any,promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_webserver_cf_130"}
{any,APACHE_MODULES___, "promises.cf.html#promise_webserver_cf_130"}
{any,promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of any */

{any,insert_lines, "promises.cf.html#promise_webserver_cf_117"}
{any,APACHE_CONF_INCLUDE_FILES___home_mark_cfengine_inputs_httpd_conf_, "promises.cf.html#promise_webserver_cf_117"}
{any,promise, "promises.cf.html#promise_webserver_cf_117"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_108"}
{any,del_modules, "promises.cf.html#promise_webserver_cf_108"}
{any,promise, "promises.cf.html#promise_webserver_cf_108"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_104"}
{any,add_modules, "promises.cf.html#promise_webserver_cf_104"}
{any,promise, "promises.cf.html#promise_webserver_cf_104"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_23"}
{any,match_package, "promises.cf.html#promise_webserver_cf_23"}
{any,promise, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_17"}
{any,site_http_conf, "promises.cf.html#promise_webserver_cf_17"}
{any,promise, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_webserver_cf_11"}
{any,document_root, "promises.cf.html#promise_webserver_cf_11"}
{any,promise, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_laptop_cf_6"}
{any,mount_point, "promises.cf.html#promise_laptop_cf_6"}
{any,promise, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of any */

{any,replace_patterns, "promises.cf.html#promise_library_cf_200"}
{any,cfexecd, "promises.cf.html#promise_library_cf_200"}
{any,promise, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of any */

{any,delete_lines, "promises.cf.html#promise_library_cf_171"}
{any,__regex_, "promises.cf.html#promise_library_cf_171"}
{any,promise, "promises.cf.html#promise_library_cf_171"}

 /* occurrences of any */

{any,field_edits, "promises.cf.html#promise_library_cf_119"}
{any,NETCONFIG_DNS_STATIC_SEARCHLIST__, "promises.cf.html#promise_library_cf_119"}
{any,promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_library_cf_111"}
{any,search, "promises.cf.html#promise_library_cf_111"}
{any,promise, "promises.cf.html#promise_library_cf_111"}

 /* occurrences of any */

{any,roles, "promises.cf.html#promise_site_cf_422"}
{any,__, "promises.cf.html#promise_site_cf_422"}
{any,promise, "promises.cf.html#promise_site_cf_422"}

 /* occurrences of any */

{any,access, "promises.cf.html#promise_site_cf_418"}
{any,_home_mark__cfagent_bin_cf_agent, "promises.cf.html#promise_site_cf_418"}
{any,promise, "promises.cf.html#promise_site_cf_418"}

 /* occurrences of any */

{any,access, "promises.cf.html#promise_site_cf_414"}
{any,_home_mark_LapTop, "promises.cf.html#promise_site_cf_414"}
{any,promise, "promises.cf.html#promise_site_cf_414"}

 /* occurrences of any */

{any,_tmp_shadow, "promises.cf.html#promise_site_cf_349"}
{any,files, "promises.cf.html#promise_site_cf_349"}
{any,_tmp_passwd, "promises.cf.html#promise_site_cf_349"}
{any,promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of any */

{any,_var_cfengine_inputs_shadow, "promises.cf.html#promise_site_cf_343"}
{any,files, "promises.cf.html#promise_site_cf_343"}
{any,_var_cfengine_inputs_passwd, "promises.cf.html#promise_site_cf_343"}
{any,promise, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_331"}
{any,files, "promises.cf.html#promise_site_cf_331"}
{any,promise, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_330"}
{any,sysdir, "promises.cf.html#promise_site_cf_330"}
{any,promise, "promises.cf.html#promise_site_cf_330"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_210"}
{any,_etc_resolv_conf____, "promises.cf.html#promise_site_cf_210"}
{any,promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_204"}
{any,_var_cfengine_outputs, "promises.cf.html#promise_site_cf_204"}
{any,promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of any */

{any,_var_cfengine_bin_cf_serverd, "promises.cf.html#promise_site_cf_163"}
{any,commands, "promises.cf.html#promise_site_cf_163"}
{any,_var_cfengine_bin_cf_monitord, "promises.cf.html#promise_site_cf_163"}
{any,promise, "promises.cf.html#promise_site_cf_163"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_site_cf_155"}
{any,mysql, "promises.cf.html#promise_site_cf_155"}
{any,promise, "promises.cf.html#promise_site_cf_155"}

 /* occurrences of any */

{any,cf_serverd, "promises.cf.html#promise_site_cf_152"}
{any,processes, "promises.cf.html#promise_site_cf_152"}
{any,cf_monitord, "promises.cf.html#promise_site_cf_152"}
{any,promise, "promises.cf.html#promise_site_cf_152"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_138"}
{any,_tmp_testfile2, "promises.cf.html#promise_site_cf_138"}
{any,promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_131"}
{any,_etc_resolv_conf, "promises.cf.html#promise_site_cf_131"}
{any,promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_114"}
{any,component, "promises.cf.html#promise_site_cf_114"}
{any,promise, "promises.cf.html#promise_site_cf_114"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_93"}
{any,_dev_sr0, "promises.cf.html#promise_site_cf_93"}
{any,promise, "promises.cf.html#promise_site_cf_93"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_81"}
{any,_var_cfengine_inputs___, "promises.cf.html#promise_site_cf_81"}
{any,promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_site_cf_74"}
{any,_usr_bin, "promises.cf.html#promise_site_cf_74"}
{any,promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of any */

{any,commands, "promises.cf.html#promise_site_cf_64"}
{any,_usr_sbin_ntpdate_no_pool_ntp_org, "promises.cf.html#promise_site_cf_64"}
{any,promise, "promises.cf.html#promise_site_cf_64"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_site_cf_42"}
{any,cf2bits, "promises.cf.html#promise_site_cf_42"}
{any,promise, "promises.cf.html#promise_site_cf_42"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_31"}
{any,cf_execd, "promises.cf.html#promise_update_cf_31"}
{any,promise, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_30"}
{any,cf_monitord, "promises.cf.html#promise_update_cf_30"}
{any,promise, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of any */

{any,processes, "promises.cf.html#promise_update_cf_29"}
{any,cf_serverd, "promises.cf.html#promise_update_cf_29"}
{any,promise, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_update_cf_21"}
{any,_var_cfengine_bin, "promises.cf.html#promise_update_cf_21"}
{any,promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of any */

{any,files, "promises.cf.html#promise_update_cf_13"}
{any,_var_cfengine_inputs, "promises.cf.html#promise_update_cf_13"}
{any,promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of any */

{any,vars, "promises.cf.html#promise_update_cf_7"}
{any,master_location, "promises.cf.html#promise_update_cf_7"}
{any,promise, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of update */

{update,bundle_reference, "promises.cf.html#bundle_update"}

 /* occurrences of system_outputs */

{system_outputs,About, [[Messages sent by cfengine to the operators as a matter of policy.]]}

 /* occurrences of host_portal */

{host_portal,portal, "reports/host_portal.html"}

 /* occurrences of host_portal */

{host_portal,About, [[Portal to access mission status, monitored host data]]}

 /* occurrences of system_reports */

{system_reports,About, [[Reports from around the system]]}

 /* occurrences of system_policy */

{system_policy,About, [[Local policy description with comments and dependencies]]}

 /* occurrences of suppliers */

{suppliers,About, [[Contact information and web pages]]}

 /* occurrences of current_projects */

{current_projects,SOW, "http://www.example.com/scope_of_work.html"}

 /* occurrences of current_projects */

{current_projects,About, [[Team projects and service]]}

 /* occurrences of work_shifts */

{work_shifts,Spreadsheet, "http://www.example.com/shifts_and_rotas.ods"}

 /* occurrences of work_shifts */

{work_shifts,About, [[Staff rotas]]}

 /* occurrences of service_level_agreements */

{service_level_agreements,About, [[Promises made to clients about services]]}

 /* occurrences of software_licenses */

{software_licenses,Cfengine_Nova, [[This cfengine software license expires <b>31 December 2012</b>]]}

 /* occurrences of software_licenses */

{software_licenses,site_usage, "reports/license_report.html"}

 /* occurrences of software_licenses */

{software_licenses,About, [[Terms of agreements, and renewal status]]}

 /* occurrences of request_for_change */

{request_for_change,About, [[(RFC) The initial proposal for an intended change of system policy.]]}

 /* occurrences of security_routines_and_procedures */

{security_routines_and_procedures,About, [[Non-automated, human workbook]]}

 /* occurrences of security_policy */

{security_policy,About, [[Local risk assessment summary]]}

 /* occurrences of quality_assurance */

{quality_assurance,About, [[Procedures for review]]}

 /* occurrences of mission_statement */

{mission_statement,About, [[Business objectives]]}

 /* occurrences of mission_status */

{mission_status,_reports_allhosts_html,"Image at /managed_hosts.png"}
{mission_status,see_all_managed_hosts,"Image at /managed_hosts.png"}

 /* occurrences of mission_status */

{mission_status,_reports_host_portal_html,"Image at /reports/meters.png"}
{mission_status,network_host_status,"Image at /reports/meters.png"}

 /* occurrences of mission_status */

{mission_status,About, [[Overview of IT operations]]}

 /* occurrences of views */

{views,About, [[Roles for IT stakeholders]]}

 /* occurrences of management_issues */

{management_issues,definitions, [[Aspects of IT management typically covered by ITIL]]}

 /* occurrences of management_issues */

{management_issues,About, [[The main areas of management]]}

 /* occurrences of ontology */

{ontology,About, [[Main index]]}

 /* occurrences of copernicus */

{copernicus,Support_knowledge_portal, "https://cfengine.com/copernicus/"}

 /* occurrences of copernicus */

{copernicus,About, [[Cfengine's online support knowledge base]]}

 /* occurrences of machine_resources */

{machine_resources,About, [[An inventory of physical and virtual resources]]}

 /* occurrences of server_lifecycle */

{server_lifecycle,About, [[From creation to update and eventual reinstallation]]}

 /* occurrences of service_catalogue */

{service_catalogue,About, [[The basic service promises of the system]]}

 /* occurrences of system_trends */

{system_trends,weekly_192_168_1_100, "reports/192.168.1.100/mainpage.html"}

 /* occurrences of system_trends */

{system_trends,About, [[Long term performance data about the system.]]}

 /* occurrences of system_reports */

{system_reports,About, [[Reports generated by cfengine]]}

 /* occurrences of hosts */

{hosts,status_192_168_1_100, "reports/192.168.1.100/mainpage.html"}

 /* occurrences of hosts */

{hosts,About, [[A general term for computers that run applications of any kind]]}

 /* occurrences of system_knowledge */

{system_knowledge,About, [[Cfengine knowledge console]]}

 /* occurrences of security */

{security,advisories, "https://cfengine.com/inside/security"}

 /* occurrences of security */

{security,About, [[Defending an acceptable level of risk]]}

 /* occurrences of management_issues */

{management_issues,About, [[Decision making support]]}

 /* occurrences of operating_systems */

{operating_systems,definitions, [[The software installed on a computer that provides its basic software infrastructure]]}

 /* occurrences of operating_systems */

{operating_systems,About, [[System software]]}

 /* occurrences of linear_topic_map_notation */

{linear_topic_map_notation,description, "http://www.ontopia.net/download/ltm.html"}

 /* occurrences of the_tao */

{the_tao,About, [[topics, associations and occurrences]]}

 /* occurrences of lvalue */

{lvalue,Cfengine_reference, "/inside/manuals/cf3-reference#Types-in-cfengine-3"}

 /* occurrences of lvalue */

{lvalue,definitions, [[Refers to the left hand side of an assignment "lvalue => rvalue"]]}

 /* occurrences of lvalue */

{lvalue,definitions, [[A variable identifier, i.e. the left hand side of an '=' association. The promiser in a variable promise.]]}

 /* occurrences of rvalue */

{rvalue,Cfengine_reference, "/inside/manuals/cf3-reference#Types-in-cfengine-3"}

 /* occurrences of rvalue */

{rvalue,definitions, [[Refers to the right hand side of an assignment "lvalue => rvalue"]]}

 /* occurrences of rvalue */

{rvalue,definitions, [[A variable value, i.e. the right hand side of an '=' association. The value promised in a variable promise.]]}

 /* occurrences of voluntary_cooperation */

{voluntary_cooperation,definitions, [[Describes the approach to modelling in which one does not assume absolute power to control, but rather assumes best effort of the system parts. A promise is an expression of voluntary cooperation - the opposite of an obligation.]]}

 /* occurrences of versions */

{versions,definitions, [[An indentity string that distinguishes altered states of an agent or occurrence of a topic.]]}

 /* occurrences of dependencies */

{dependencies,definitions, [[Promises or promisees that provide the pre-requisites for conditional promises may be called dependencies of the conditional promise.]]}

 /* occurrences of workflows */

{workflows,definitions, [[A representation or story about actions or services. ]]}

 /* occurrences of stories */

{stories,definitions, [[A sequence of topics that relates a start and an end point through a topic map. Different
aths through a topic map can relate different stories. An entire story promises to have some intention.]]}

 /* occurrences of services */

{services,definitions, [[An abstraction for actions or processes that are associated with a specific set of promises. Services are economically motivated black-boxes for promises.]]}

 /* occurrences of communicated_information */

{communicated_information,definitions, [[Any information that is transmitted falls into this category. It is a container class for more specific messages, e.g. promises.]]}

 /* occurrences of subjects */

{subjects,definitions, [[A subject is an abstract concept -- it is any thing that can be talked about or discussed.]]}

 /* occurrences of subjects */

{subjects,About, [[An abstraction for any things that can be discussed]]}

 /* occurrences of occurrences */

{occurrences,promise_library_cf_200, "promises.cf.html#promise_library_cf_200"}
{occurrences,used_in_promise, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of occurrences */

{occurrences,definitions, [[An information resource that represents a topic. Typically a document, database entry, image or other medium.]]}

 /* occurrences of occurrence_types */

{occurrence_types,definitions, [[Occurrences are classified by the topics that refer to them. When a topic claims that an occurrence represents it somehow it uses a representation label (also called a subtype in topic map parlance). These partition occurrences into overlapping sets since an occurrence could represent several topics.]]}

 /* occurrences of topic_instances */

{topic_instances,definitions, [[Topic instances are called occurrences in topic map parlance.]]}

 /* occurrences of type_instances */

{type_instances,definitions, [[Occurrences of a type of object. In a topic map, topics are type occurrences. In a policy, promises are type occurrences.]]}

 /* occurrences of associations */

{associations,definitions, [[Trains of thought that link one topic with another.]]}

 /* occurrences of structural_relationships */

{structural_relationships,definitions, [[When a part of something is contained within another part, or is a piece of a whole then we can call this a structural relationship]]}

 /* occurrences of structural_relationships */

{structural_relationships,image,"Image at img/clusters.png"}

 /* occurrences of location_relationships */

{location_relationships,definitions, [[Spatial relationships, like up,down,left,right]]}

 /* occurrences of causative_relationships */

{causative_relationships,definitions, [[When one topic impacts on another, we can say there is a cause-effect relationship.]]}

 /* occurrences of conceptual_relationships */

{conceptual_relationships,definitions, [[Ideas that are related in documentable fashion.]]}

 /* occurrences of actions */

{actions,definitions, [[Changes instigated by a system leading to observable effects.]]}

 /* occurrences of behaviours */

{behaviours,definitions, [[Characteristics of a system that can be observed.]]}

 /* occurrences of facts */

{facts,definitions, [[Irrefutable pieces of information that can be observed.]]}

 /* occurrences of topics */

{topics,definitions, [[Topics are the way we represent abstract subjects in a topic map. A topic is implemented as a database entry.]]}

 /* occurrences of topic_types */

{topic_types,definitions, [[Topics (in topic maps) are classified into non-overlapping or disjoint types.]]}

 /* occurrences of body_constraint */

{body_constraint,definitions, [[A description of the range of values that an agent promises to restrict its behaviour to.]]}

 /* occurrences of body_type */

{body_type,definitions, [[The subject of a promise is limited to a system of non-overlapping, or disjoint types, e.g. in cfengine files, processes, knowledge, etc]]}

 /* occurrences of promise_body */

{promise_body,definitions, [[The body of a promise contains the details that describe its substance. This generally has the name of some variable and a constraint on the values that the promiser promises it will have.]]}

 /* occurrences of promise_body */

{promise_body,definitions, [[Attribute of a promise, like a template for parameterizing compound promise attributes]]}

 /* occurrences of promise_type */

{promise_type,definitions, [[The type of cfengine rules are called promise types]]}

 /* occurrences of promisee */

{promisee,definitions, [[The recipient of a promise is called the promisee.]]}

 /* occurrences of promiser */

{promiser,definitions, [[The agent or entity that makes a promise is called the promiser.]]}

 /* occurrences of announcements */

{announcements,definitions, [[The act of making public some information is called an announcement.]]}

 /* occurrences of conditional_promises */

{conditional_promises,definitions, [[A promise that is made subject to a pre-condition is not a true promise unless the condition can also be promised. Condition promises are often used to express dependencies.]]}

 /* occurrences of promises */

{promises,paper, "http://research.iu.hio.no/papers/origin2.pdf"}

 /* occurrences of promises */

{promises,keynote_speech, "https://cfengine.com/cftimes/stories/icackeynote"}

 /* occurrences of promises */

{promises,definitions, [[Assertions about the desired properties of a system]]}

 /* occurrences of promises */

{promises,definitions, [[When an agent's intention becomes public knowledge we call it a promise.]]}

 /* occurrences of promise_proposals */

{promise_proposals,definitions, [[Before a promise has been accepted and made it can be written down as a proposal. A contract contains many promise proposals, for instance.]]}

 /* occurrences of policy */

{policy,About, [[A declared set of intentions describing how systems should behave]]}

 /* occurrences of bundles */

{bundles,definitions, [[A container for grouping related promises]]}

 /* occurrences of bundles */

{bundles,definitions, [[Collections of promises are called bundles.]]}

 /* occurrences of intentions */

{intentions,definitions, [[Ideas that might lead to courses of action and some time past, present or future.]]}

 /* occurrences of agents */

{agents,definitions, [[Describes any system components that can give or receive promises, either physical or abstract; e.g. files, processes, topics, etc.]]}

 /* occurrences of convergence */

{convergence,keynote_speech, "https://cfengine.com/cftimes/stories/icackeynote"}

 /* occurrences of convergence */

{convergence,popular, "https://cfengine.com/cftimes/stories/cm/4"}

 /* occurrences of convergence */

{convergence,image,"Image at https://cfengine.com/img/outside/convergence.png"}

 /* occurrences of convergence */

{convergence,About, [[The idea that we always move closer to the desired state of a system on every promise verification. Once the desired state has been reached, the state hsa converged and no further changes take place. Normally convergence to the desired state happens in a single repair, unless there are dependencies that cannot be resolved. Convergence is a stronger constraint on system behaviour than idempotence.]]}

 /* occurrences of idempotence */

{idempotence,About, [[Idempotence is a mathematical property of operations or changes. An operator is idempotent if applying it twice is the same as applying it once. This is not the same as convergence, because the result need not be anchored to anything. e.g. <pre>touch myfile</pre> is idempotent but it is not a fixed point because its effect depends on which directory the operation is performed in. <pre>touch /tmp/myfile</pre> is convergent.]]}

 /* occurrences of heterogeneous_system */

{heterogeneous_system,definitions, [[Any computer system that is composed of multiple operating system types]]}

 /* occurrences of homogeneous_system */

{homogeneous_system,definitions, [[Any computer system that is composed of only one type of operating system]]}

 /* occurrences of pattern_matching */

{pattern_matching,definitions, [[Approaches to identifying and modelling objects]]}

 /* occurrences of pattern_matching */

{pattern_matching,About, [[Classifying items by the patterns they form]]}

 /* occurrences of topic_maps */

{topic_maps,tutorial, "http://www.ontopia.net/topicmaps/materials/tao.html"}

 /* occurrences of topic_maps */

{topic_maps,introduction, "http://www.ontopia.com"}

 /* occurrences of topic_maps */

{topic_maps,About, [[ISO standard electronic index with semantic annotations]]}

 /* occurrences of self_healing */

{self_healing,About, [[System exhibiting automated repair and maintenance]]}

 /* occurrences of autonomics */

{autonomics,definitions, [[IBM's name for the idea of self-healing and self-regulating systems]]}

 /* occurrences of computer_immunology */

{computer_immunology,popular_science, "https://cfengine.com/cftimes/stories/sick"}

 /* occurrences of computer_immunology */

{computer_immunology,definitions, [[An idea developed by Mark Burgess of Oslo University College in 1998 for self-healing systems. Related ideas were proposed by Stephanie Forrest's group at the University of New Mexico.]]}

 /* occurrences of convergent_operators */

{convergent_operators,popular_science, "https://cfengine.com/cftimes/stories/cm"}

 /* occurrences of convergent_operators */

{convergent_operators,paper, "http://research.iu.hio.no/papers/MACE-v2.pdf"}

 /* occurrences of convergent_operators */

{convergent_operators,paper, "http://research.iu.hio.no/papers/immunity.pdf"}

 /* occurrences of promise_theory */

{promise_theory,definitions, [[A model for representing systems of interacting parts, such as computer networks. Orginally described by Mark Burgess to describe cfengine as no other models were suitable.]]}

 /* occurrences of BDMA */

{BDMA,About, [[Build, Deploy, Manage, Audit, system lifecycle]]}

 /* occurrences of audit */

{audit,About, [[Traditionally servers needed to be audited to determine their actual state. Under cfengine, auditing simply means generating summary reports about recent compliance or repair operations.]]}

 /* occurrences of manage */

{manage,About, [[Traditionally servers needed to be managed by responding to incidents. Under cfengine indicdents are repaired automatically and management is chiefly about observing and diving the success of the current system policy.]]}

 /* occurrences of deploy */

{deploy,About, [[Traditionally servers were deployed by pushing out a cloned image. Under cfengine the deployment of policy just means publishing a new version of policy on a policy server.]]}

 /* occurrences of build */

{build,About, [[Also called "provisioning" systems, i.e. the process of specifying and assembling the resources to fulfill a set of system promises. Traditionally servers were built as a "golden image" for cloning. Under cfengine, the build phase of the server lifecycle involves planning policy for the desired-state. Installation may also be considered a part of the build process.]]}

 /* occurrences of inventory */

{inventory,About, [[List of items within a datacenter, e.g. servers, applications, services. Expressed in terms of a static database that is being updated every now on then, depending on how often you scan the network. Cfengine holds accurate inventory lists and reports can easily be created on the fly. Cfengine dosen’t hold any static database that requires frequent scan (that takes a lot of resources) to describe the inventory.]]}

 /* occurrences of system_discovery */

{system_discovery,About, [[The ability to detect new items (see CIs) in a datacenter. Cfengine recognizes new items on the fly and you can have them reported automatically. No need for data mining or guesses.]]}

 /* occurrences of configuration_management */

{configuration_management,paper, "http://research.iu.hio.no/papers/alvamark.pdf"}

 /* occurrences of configuration_management */

{configuration_management,About, [[The ability to configure a Datacenter through configuration settings. This is the core of Cfengine. Cfengine comes with many advanced tools to ease the configuration of Datacenters and have it self-repair according the settings you define. See also Configuration Items (CIs), Change Management.]]}

 /* occurrences of change_management */

{change_management,About, [[The ability to trace, log and manipulate change in files. Whenever a change occurs in a file, this probably affects some other parts of the system. The ability to track, log and potentially restore changes are important for many purposes.]]}

 /* occurrences of reporting */

{reporting,About, [[Extracting information in human readable form]]}

 /* occurrences of application_management */

{application_management,About, [[Deploying and patching applications, inclding the ability to configure specific applications, like Apache-servers, Microsoft Exchange, etc.]]}

 /* occurrences of release_management */

{release_management,About, [[The process of preparing for major changes to policy or enterprise activity.]]}

 /* occurrences of incident_management */

{incident_management,About, [[Repairing policy violations]]}

 /* occurrences of identity_management */

{identity_management,About, [[Managing user accounts]]}

 /* occurrences of identity_management */

{identity_management,About, [[Managing user credentials]]}

 /* occurrences of storage_management */

{storage_management,About, [[Disk volumes, primary, redundant and secondary storage (backup)]]}

 /* occurrences of capacity_planning */

{capacity_planning,About, [[Sometimes called dimensioning or service provisioning. Determining whether sufficient resources will be available to deliver planned services]]}

 /* occurrences of compliance */

{compliance,About, [[Frameworks for standardizing and regulating systems]]}

 /* occurrences of team_work */

{team_work,About, [[Focused group in a flat organization for efficient communication and decision-making]]}

 /* occurrences of maintenance_paradigms */

{maintenance_paradigms,About, [[Approaches to keeping systems in an operational state]]}

 /* occurrences of anomaly_detection */

{anomaly_detection,paper, "http://research.iu.hio.no/anomalypapers.php"}

 /* occurrences of gentoo */

{gentoo,About, [[Linux distro gentoo]]}

 /* occurrences of slackware */

{slackware,About, [[Linux distro slackware]]}

 /* occurrences of debian */

{debian,About, [[Linux distro debian]]}

 /* occurrences of redhat */

{redhat,About, [[Linux distro redhat]]}

 /* occurrences of fedora */

{fedora,About, [[Linux distro fedora]]}

 /* occurrences of ubuntu */

{ubuntu,About, [[Linux distro ubuntu]]}

 /* occurrences of suse */

{suse,official_website, "http://www.opensuse.org"}

 /* occurrences of suse */

{suse,About, [[Linux distro suse]]}

 /* occurrences of cfengine_2_control_settings */

{cfengine_2_control_settings,About, [[Parameters that affect the behaviour of the agent rather than affect the system configuration.]]}

 /* occurrences of slist */

{slist,promise_knowledge_cf_15, "promises.cf.html#promise_knowledge_cf_15"}
{slist,used_in_promise, "promises.cf.html#promise_knowledge_cf_15"}

 /* occurrences of slist */

{slist,promise_webserver_cf_108, "promises.cf.html#promise_webserver_cf_108"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_108"}

 /* occurrences of slist */

{slist,promise_webserver_cf_104, "promises.cf.html#promise_webserver_cf_104"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_104"}

 /* occurrences of slist */

{slist,promise_webserver_cf_23, "promises.cf.html#promise_webserver_cf_23"}
{slist,used_in_promise, "promises.cf.html#promise_webserver_cf_23"}

 /* occurrences of slist */

{slist,promise_library_cf_111, "promises.cf.html#promise_library_cf_111"}
{slist,used_in_promise, "promises.cf.html#promise_library_cf_111"}

 /* occurrences of slist */

{slist,promise_site_cf_331, "promises.cf.html#promise_site_cf_331"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_331"}

 /* occurrences of slist */

{slist,promise_site_cf_114, "promises.cf.html#promise_site_cf_114"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_114"}

 /* occurrences of slist */

{slist,promise_site_cf_42, "promises.cf.html#promise_site_cf_42"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_42"}

 /* occurrences of slist */

{slist,promise_site_cf_15, "promises.cf.html#promise_site_cf_15"}
{slist,used_in_promise, "promises.cf.html#promise_site_cf_15"}

 /* occurrences of string */

{string,promise_knowledge_cf_12, "promises.cf.html#promise_knowledge_cf_12"}
{string,used_in_promise, "promises.cf.html#promise_knowledge_cf_12"}

 /* occurrences of string */

{string,promise_webserver_cf_17, "promises.cf.html#promise_webserver_cf_17"}
{string,used_in_promise, "promises.cf.html#promise_webserver_cf_17"}

 /* occurrences of string */

{string,promise_webserver_cf_11, "promises.cf.html#promise_webserver_cf_11"}
{string,used_in_promise, "promises.cf.html#promise_webserver_cf_11"}

 /* occurrences of string */

{string,promise_laptop_cf_6, "promises.cf.html#promise_laptop_cf_6"}
{string,used_in_promise, "promises.cf.html#promise_laptop_cf_6"}

 /* occurrences of string */

{string,promise_site_cf_330, "promises.cf.html#promise_site_cf_330"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_330"}

 /* occurrences of string */

{string,promise_site_cf_19, "promises.cf.html#promise_site_cf_19"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_19"}

 /* occurrences of string */

{string,promise_site_cf_13, "promises.cf.html#promise_site_cf_13"}
{string,used_in_promise, "promises.cf.html#promise_site_cf_13"}

 /* occurrences of string */

{string,promise_update_cf_7, "promises.cf.html#promise_update_cf_7"}
{string,used_in_promise, "promises.cf.html#promise_update_cf_7"}

 /* occurrences of enterprise_level_cfengine */

{enterprise_level_cfengine,definitions, [[Cfengine Enterprise editions are commercially licensed versions of Cfengine 3 with build-time library extensions. They are directed at organizations and scenarios where the need for complex, supported management processes arises. They provide extended functionality and time-saving process simplifications to the automation of datacentres.]]}

 /* occurrences of cfengine_3_0_x */

{cfengine_3_0_x,About, [[cfengine version]]}

 /* occurrences of cfengine_2_2_x */

{cfengine_2_2_x,About, [[cfengine version]]}

 /* occurrences of cfengine_nova */

{cfengine_nova,About, [[cfengine version]]}

 /* occurrences of functions */

{functions,cf3, "/inside/manuals/cf3-reference#Special-functions"}

 /* occurrences of functions */

{functions,classes, "/inside/manuals/cf2-Reference#Setting-classes-with-special-functions"}

 /* occurrences of functions */

{functions,variables, "/inside/manuals/cf2-Reference#Variable-expansion-and-contexts"}

 /* occurrences of distributed_system */

{distributed_system,definitions, [[Any computer system consisting of more than one host]]}

 /* occurrences of research */

{research,About, [[Cfengine research]]}

 /* occurrences of files */

{files,About, [[Notable or special files and types]]}

 /* occurrences of entropy */

{entropy,About, [[A measure of the variation in an observation]]}

 /* occurrences of intermittency */

{intermittency,About, [[The entropy of availability of a service]]}

 /* occurrences of faults */

{faults,About, [[Error messages and conditions]]}

 /* occurrences of rollback */

{rollback,About, [[A widely misunderstood idea from change management that describes the reversal of managed changes to a system. Rollback is a property of transaction based data processing, a model that cannot apply to dynamical objects like computers.]]}

 /* occurrences of rollback */

{rollback,About, [[Refers to the fictitious ability to perform an undo operation in change management]]}

 /* occurrences of role_based_access_control */

{role_based_access_control,cf3, "/inside/manuals/cf3-reference#roles-in-server-promises"}

 /* occurrences of hash */

{hash,promise_site_cf_138, "promises.cf.html#promise_site_cf_138"}
{hash,used_in_promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of hash */

{hash,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{hash,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of monitoring */

{monitoring,portal, "reports/host_portal.html"}

 /* occurrences of monitoring */

{monitoring,About, [[Ability to monitor the current state of your datacenter. Cfengine can sample and trace behaviour. Unlike many other monitoring solutions, Cfengine scales easily to thousands of machines. Cfengine monitors your datacenter intelligently, using historic data to decide whether a behaviour should call for action or not.]]}

 /* occurrences of soft_classes */

{soft_classes,definitions, [[A classification of the dynamic environment that can change depending on context, e.g. about the system hardware]]}

 /* occurrences of hard_classes */

{hard_classes,definitions, [[A classification of the basic environment that is immutable, e.g. about the system hardware]]}

 /* occurrences of hard_classes */

{hard_classes,manual, "/inside/manuals/cf3-reference#Hard-classes"}

 /* occurrences of provisioning */

{provisioning,About, [[The ability to install and adopt new services, applications, OS and servers, e.g. using PXE-boot Cfengine can turn any server into anything kind of server with any kind of service running on it. Cfengine can easily deploy a service or new application throughout the datacenter, regardless of the number of servers.]]}

 /* occurrences of pre_screening */

{pre_screening,About, [[The ability to foresee consequences of change. If you make a change one place, what’s the impact of the rest of the datacenter? Cfengine includes a dry-run mode which simulates the consequences of a change.]]}

 /* occurrences of CI */

{CI,About, [[Configuration Items. Computer related items that can be configured. Items typically are servers, routers, switches, applications and storage devices. Cfengine can discover different types of CIs automatically, trace dependencies and make them available in reports through an online knowledge portal.]]}

 /* occurrences of baseline */

{baseline,About, [[Definition of what your system looks like or what it must look like. Many traditional vendors in the industry require a baseline to be able to roll out their system and get it running. In Cfengine, there is no need for a special baseline. Cfengine focuses on the opposite – the end state.]]}

 /* occurrences of SLA */

{SLA,About, [[Service Level Agreement]]}

 /* occurrences of BDIM */

{BDIM,About, [[Business Driven IT Management]]}

 /* occurrences of auditing */

{auditing,About, [[A process to verify that the datacenter operate according to the guidelines and legislations. A rapid growth in datacenter size and complexity, combined with government regulations, have called for a drastic increase in audits.  Cfengine comes with reporting and logging capabilties that make auditing straightforward.]]}

 /* occurrences of CMDB */

{CMDB,About, [[Configuration Management Database. A form of extended inventort system, championed by ITIL.]]}

 /* occurrences of SAS_70 */

{SAS_70,About, [[Stands for Statement of Auditing Standards no. 70. SAS-70 is an auditing standard. SAS 70 defines the professional standards used by a service auditor to assess the internal controls of a service organization and issue a service auditor’s report. Cfengine can be used to ensure SAS-70 compliance in the same way you can achieve other standardization compliance.]]}

 /* occurrences of EUROSOX */

{EUROSOX,About, [[The 8th EU data directive]]}

 /* occurrences of SOX */

{SOX,About, [[Stands for Sarbanes-Oxley Act is a United States federal law in response to a number of major corporate and accounting scandals including those affecting Enron, Tyco International, Adelphia, Peregrine Systems and WorldCom. The intention behind the law is to ensure financial reporting. This law calls for standardization of datacenters under this law and the need to show compliance. Cfengine can be used as a tool for ensuring specific parts of the compliance.]]}

 /* occurrences of SOX */

{SOX,About, [[The Sarbanes-Oxley Act]]}

 /* occurrences of eTOM */

{eTOM,definitions, [[The Enhanced Telecom Operations Map]]}

 /* occurrences of eTOM */

{eTOM,definitions, "http://en.wikipedia.org/wiki/ETOM"}

 /* occurrences of eTOM */

{eTOM,About, [[The Extended Telecom Operations Map]]}

 /* occurrences of ISO_IEC_20000 */

{ISO_IEC_20000,About, [[A standards document based on a subset of ITIL]]}

 /* occurrences of ITIL */

{ITIL,free_wiki, "http://www.itframeworks.org/wiki/Information_Technology_Infrastructure_Library"}

 /* occurrences of ITIL */

{ITIL,official_website, "http://www.itil-officialsite.com"}

 /* occurrences of ITIL */

{ITIL,definitions, "http://en.wikipedia.org/wiki/ITIL"}

 /* occurrences of ITIL */

{ITIL,About, [[Stands for Information Technology Infrastructure Library. ITIL is a set of self-proclaimed best-practises originally developed by the British government. It contains a set of common sense rules. Cfengine can be used as a tool for organizations looking to becoming ITIL-compliant. By translating many of your best practises into policy rules, you can have Cfengine ensure parts of ITIL-compliance.]]}

 /* occurrences of samba */

{samba,About, [[The Unix service for integrating with MS Windows]]}

 /* occurrences of NFS */

{NFS,About, [[Network File System (storage)]]}

 /* occurrences of oracle */

{oracle,About, [[Commercial relational SQL database]]}

 /* occurrences of postgres */

{postgres,About, [[Open source relational SQL database engine for transaction processing]]}

 /* occurrences of mysql */

{mysql,About, [[Open source SQL database engine optimized for web]]}

 /* occurrences of DHCP */

{DHCP,About, [[An IP configuration service.]]}

 /* occurrences of NIS */

{NIS,About, [[Sun's Network Information Service (previously called Yellow Pages).]]}

 /* occurrences of LDAP */

{LDAP,About, [[A well-known directory service. MS Active Directory purports to support this standard.]]}

 /* occurrences of DNS */

{DNS,About, [[Domain Name Service for translating Internet addresses into hostnames and vice versa.]]}

 /* occurrences of BOOTP */

{BOOTP,About, [[A simple broadcast protocol for booting a system directly from the network, e.g. for installation purposes.]]}

 /* occurrences of PXE */

{PXE,About, [[A composite network service based on the PXE protocol, allows systems to boot directly from the network.]]}

 /* occurrences of connectivity */

{connectivity,About, [[Cables and hardware]]}

 /* occurrences of routing */

{routing,About, [[Router and switch configuration]]}

 /* occurrences of login */

{login,About, [[The ability to log onto systems with a username and password]]}

 /* occurrences of database */

{database,About, [[Relational database services]]}

 /* occurrences of storage */

{storage,About, [[Remotely accessible disk volumes.]]}

 /* occurrences of directory_services */

{directory_services,About, [[Directory services are look-up services, typically with identity or host information.]]}

 /* occurrences of web */

{web,About, [[The WWW web service]]}

 /* occurrences of configuration */

{configuration,About, [[Cfengine desired-state automation and self-repair service]]}

 /* occurrences of mail */

{mail,About, [[Electronic mail service, as made famous by the Unix operating system.]]}

 /* occurrences of monitoring */

{monitoring,About, [[Pseudo-real-time status information about system components]]}

 /* occurrences of network_services */

{network_services,About, [[Network connectivity and availability]]}

 /* occurrences of application_services */

{application_services,About, [[Software running on servers]]}

 /* occurrences of boot_services */

{boot_services,About, [[Boot services are a way of booting a computer directly from the network]]}

 /* occurrences of installation */

{installation,About, [[Installing computers from bare metal]]}

 /* occurrences of userexists */

{userexists,About, [[True if user name or numerical id exists on this host]]}

 /* occurrences of usemodule */

{usemodule,About, [[Execute cfengine module script and set class if successful]]}

 /* occurrences of translatepath */

{translatepath,About, [[Translate path separators from Unix style to the host's native]]}

 /* occurrences of strcmp */

{strcmp,About, [[True if the two strings match exactly]]}

 /* occurrences of splitstring */

{splitstring,About, [[Convert a string in arg1 into a list of max arg3 strings by splitting on a regular expression in arg2]]}

 /* occurrences of splayclass */

{splayclass,About, [[True if the first argument's time-slot has arrived, according to a policy in arg2]]}

 /* occurrences of selectservers */

{selectservers,About, [[Select tcp servers which respond correctly to a query and return their number, set array of names]]}

 /* occurrences of rrange */

{rrange,About, [[Define a range of real numbers for cfengine internal use]]}

 /* occurrences of returnszero */

{returnszero,About, [[True if named shell command has exit status zero]]}

 /* occurrences of remoteclassesmatching */

{remoteclassesmatching,About, [[Read persistent classes matching a regular expression from a remote cfengine server and add them into local context with prefix]]}

 /* occurrences of remotescalar */

{remotescalar,About, [[Read a scalar value from a remote cfengine server]]}

 /* occurrences of regldap */

{regldap,About, [[True if the regular expression in arg6 matches a value item in an ldap search]]}

 /* occurrences of reglist */

{reglist,About, [[True if the regular expression in arg2 matches any item in the list whose id is arg1]]}

 /* occurrences of regline */

{regline,About, [[True if the regular expression in arg1 matches a line in file arg2]]}

 /* occurrences of registryvalue */

{registryvalue,About, [[Returns a value for an MS-Win registry key,value pair]]}

 /* occurrences of regextract */

{regextract,About, [[True if the regular expression in arg 1 matches the string in arg2 and sets a non-empty array of backreferences named arg3]]}

 /* occurrences of regcmp */

{regcmp,About, [[True if arg1 is a regular expression matching that matches string arg2]]}

 /* occurrences of regarray */

{regarray,About, [[True if arg1 matches any item in the associative array with id=arg2]]}

 /* occurrences of readtcp */

{readtcp,About, [[Connect to tcp port, send string and assign result to variable]]}

 /* occurrences of readstringlist */

{readstringlist,About, [[Read and assign a list variable from a file of separated strings]]}

 /* occurrences of readstringarray */

{readstringarray,About, [[Read an array of strings from a file and assign the dimension to a variable]]}

 /* occurrences of readreallist */

{readreallist,About, [[Read and assign a list variable from a file of separated real numbers]]}

 /* occurrences of readrealarray */

{readrealarray,About, [[Read an array of real numbers from a file and assign the dimension to a variable]]}

 /* occurrences of readintlist */

{readintlist,About, [[Read and assign a list variable from a file of separated ints]]}

 /* occurrences of readintarray */

{readintarray,About, [[Read an array of integers from a file and assign the dimension to a variable]]}

 /* occurrences of readfile */

{readfile,About, [[Read max number of bytes from named file and assign to variable]]}

 /* occurrences of randomint */

{randomint,About, [[Generate a random integer between the given limits]]}

 /* occurrences of peerleaders */

{peerleaders,About, [[Get a list of peer leaders from the named partitioning]]}

 /* occurrences of peerleader */

{peerleader,About, [[Get the assigned peer-leader of the partition to which we belong]]}

 /* occurrences of peers */

{peers,About, [[Get a list of peers (not including ourself) from the partition to which we belong]]}

 /* occurrences of on */

{on,About, [[Convert an exact date/time to an integer system representation]]}

 /* occurrences of now */

{now,About, [[Convert the current time into system representation]]}

 /* occurrences of ldapvalue */

{ldapvalue,About, [[Extract the first matching named value from ldap]]}

 /* occurrences of ldaplist */

{ldaplist,About, [[Extract all named values from multiple ldap records]]}

 /* occurrences of ldaparray */

{ldaparray,About, [[Extract all values from an ldap record]]}

 /* occurrences of lastnode */

{lastnode,About, [[Extract the last of a separated string, e.g. filename from a path]]}

 /* occurrences of join */

{join,About, [[Join the items of arg2 into a string, using the conjunction in arg1]]}

 /* occurrences of isvariable */

{isvariable,About, [[True if the named variable is defined]]}

 /* occurrences of isplain */

{isplain,About, [[True if the named object is a plain/regular file]]}

 /* occurrences of isnewerthan */

{isnewerthan,About, [[True if arg1 is newer (modified later) than arg2 (mtime)]]}

 /* occurrences of islink */

{islink,About, [[True if the named object is a symbolic link]]}

 /* occurrences of islessthan */

{islessthan,About, [[True if arg1 is numerically less than arg2, else compare strings like NOT strcmp]]}

 /* occurrences of isgreaterthan */

{isgreaterthan,About, [[True if arg1 is numerically greater than arg2, else compare strings like strcmp]]}

 /* occurrences of isdir */

{isdir,About, [[True if the named object is a directory]]}

 /* occurrences of irange */

{irange,About, [[Define a range of integer values for cfengine internal use]]}

 /* occurrences of iprange */

{iprange,About, [[True if the current host lies in the range of IP addresses specified]]}

 /* occurrences of hostsseen */

{hostsseen,About, [[Extract the list of hosts last seen/not seen within the last arg1 hours]]}

 /* occurrences of hostrange */

{hostrange,About, [[True if the current host lies in the range of enumerated hostnames specified]]}

 /* occurrences of hostinnetgroup */

{hostinnetgroup,About, [[True if the current host is in the named netgroup]]}

 /* occurrences of host2ip */

{host2ip,About, [[Returns the primary name-service IP address for the named host]]}

 /* occurrences of hashmatch */

{hashmatch,About, [[Compute the hash of arg1, of type arg2 and test if it matches the value in arg 3]]}

 /* occurrences of hash */

{hash,About, [[Return the hash of arg1, type arg2 and assign to a variable]]}

 /* occurrences of groupexists */

{groupexists,About, [[True if group or numerical id exists on this host]]}

 /* occurrences of grep */

{grep,About, [[Extract the sub-list if items matching the regular expression in arg1 of the list named in arg2]]}

 /* occurrences of getuid */

{getuid,About, [[Return the integer user id of the named user on this host]]}

 /* occurrences of getgid */

{getgid,About, [[Return the integer group id of the named group on this host]]}

 /* occurrences of getenv */

{getenv,About, [[Return the environment variable named arg1, truncated at arg2 characters]]}

 /* occurrences of getindices */

{getindices,About, [[Get a list of keys to the array whose id is the argument and assign to variable]]}

 /* occurrences of getfields */

{getfields,About, [[Get an array of fields in the lines matching regex arg1 in file arg2, split on regex arg3 as array name arg4]]}

 /* occurrences of filesexist */

{filesexist,About, [[True if the named list of files can ALL be accessed]]}

 /* occurrences of fileexists */

{fileexists,About, [[True if the named file can be accessed]]}

 /* occurrences of execresult */

{execresult,About, [[Execute named command and assign output to variable]]}

 /* occurrences of escape */

{escape,About, [[Escape regular expression characters in a string]]}

 /* occurrences of diskfree */

{diskfree,About, [[Return the free space (in KB) available on the directory's current partition (0 if not found)]]}

 /* occurrences of countlinesmatching */

{countlinesmatching,About, [[Count the number of lines matching regex arg1 in file arg2]]}

 /* occurrences of countclassesmatching */

{countclassesmatching,About, [[Count the number of defined classes matching regex arg1]]}

 /* occurrences of classmatch */

{classmatch,About, [[True if the regular expression matches any currently defined class]]}

 /* occurrences of classify */

{classify,About, [[True if the canonicalization of the argument is a currently defined class]]}

 /* occurrences of changedbefore */

{changedbefore,About, [[True if arg1 was changed before arg2 (ctime)]]}

 /* occurrences of canonify */

{canonify,About, [[Convert an abitrary string into a legal class name]]}

 /* occurrences of ago */

{ago,About, [[Convert a time relative to now to an integer system representation]]}

 /* occurrences of accumulated */

{accumulated,About, [[Convert an accumulated amount of time into a system representation]]}

 /* occurrences of accessedbefore */

{accessedbefore,About, [[True if arg1 was accessed before arg2 (atime)]]}

 /* occurrences of class */

{class,About, [[A boolean returned by certain functions in classes promises]]}

 /* occurrences of policy */

{policy,About, [[The policy for (dis)allowing (re)definition of variables matching free,overridable,constant,ifdefined]]}

 /* occurrences of rlist */

{rlist,About, [[A list of real numbers matching -9.99999E100,9.99999E100]]}

 /* occurrences of ilist */

{ilist,About, [[A list of integers matching -99999999999,9999999999]]}

 /* occurrences of slist */

{slist,About, [[A list of scalar strings matching ]]}

 /* occurrences of real */

{real,About, [[A scalar real number matching -9.99999E100,9.99999E100]]}

 /* occurrences of int */

{int,About, [[A scalar integer matching -99999999999,9999999999]]}

 /* occurrences of string */

{string,About, [[A scalar string matching ]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_63, [[Generate knowledge associative graphs]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_63, "promises.cf.html#promise_knowledge_cf_63"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_63"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_56, [[Generate config reports]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_56, "promises.cf.html#promise_knowledge_cf_56"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_56"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_43, [[Update magnified view files for monitoring knowledge]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_35, [[Update long view files for monitoring knowledge]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of comment */

{comment,promise_knowledge_cf_28, [[Make sure knowledge files are accessible to webserver]]}

 /* occurrences of comment */

{comment,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{comment,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of comment */

{comment,promise_site_cf_177, [[Update the locate database]]}

 /* occurrences of comment */

{comment,promise_site_cf_177, "promises.cf.html#promise_site_cf_177"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of comment */

{comment,promise_site_cf_138, [[Lay a tripwire for change management]]}

 /* occurrences of comment */

{comment,promise_site_cf_138, "promises.cf.html#promise_site_cf_138"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of comment */

{comment,promise_site_cf_93, [[This is inaccessible in new suse after cd opened/closed]]}

 /* occurrences of comment */

{comment,promise_site_cf_93, "promises.cf.html#promise_site_cf_93"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_93"}

 /* occurrences of comment */

{comment,promise_site_cf_81, [[Check if there are still promises about cfengine 2 that need removing]]}

 /* occurrences of comment */

{comment,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of comment */

{comment,promise_site_cf_74, [[Test change detection]]}

 /* occurrences of comment */

{comment,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{comment,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of handle */

{handle,free_disk_watch, "promises.cf.html#free_disk_watch"}
{handle,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of handle */

{handle,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{handle,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of handle */

{handle,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{handle,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of handle */

{handle,free_memory_watch, "promises.cf.html#free_memory_watch"}
{handle,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of handle */

{handle,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{handle,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of handle */

{handle,run_agent, "promises.cf.html#run_agent"}
{handle,used_in_promise, "promises.cf.html#run_agent"}

 /* occurrences of ifvarclass */

{ifvarclass,promise_site_cf_349, "promises.cf.html#promise_site_cf_349"}
{ifvarclass,used_in_promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of ifvarclass */

{ifvarclass,promise_site_cf_163, "promises.cf.html#promise_site_cf_163"}
{ifvarclass,used_in_promise, "promises.cf.html#promise_site_cf_163"}

 /* occurrences of classes */

{classes,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{classes,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of classes */

{classes,promise_webserver_cf_76, "promises.cf.html#promise_webserver_cf_76"}
{classes,used_in_promise, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of classes */

{classes,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{classes,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of classes */

{classes,promise_site_cf_123, "promises.cf.html#promise_site_cf_123"}
{classes,used_in_promise, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of classes */

{classes,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{classes,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of classes */

{classes,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{classes,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of action */

{action,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{action,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of action */

{action,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{action,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of action */

{action,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{action,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of action */

{action,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{action,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of action */

{action,promise_library_cf_171, "promises.cf.html#promise_library_cf_171"}
{action,used_in_promise, "promises.cf.html#promise_library_cf_171"}

 /* occurrences of action */

{action,free_disk_watch, "promises.cf.html#free_disk_watch"}
{action,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of action */

{action,promise_site_cf_177, "promises.cf.html#promise_site_cf_177"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of action */

{action,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of action */

{action,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{action,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of action */

{action,run_agent, "promises.cf.html#run_agent"}
{action,used_in_promise, "promises.cf.html#run_agent"}

 /* occurrences of action */

{action,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{action,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of action */

{action,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{action,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of track_growing_file */

{track_growing_file,About, [[If true, cfengine remembers the position to which is last read when opening the file, and resets to the start if the file has since been truncated]]}

 /* occurrences of track_growing_file */

{track_growing_file,About, [[If true, cfengine remembers the position to which is last read when opening the file, and resets to the start if the file has since been truncated]]}

 /* occurrences of extraction_regex */

{extraction_regex,free_disk_watch, "promises.cf.html#free_disk_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{extraction_regex,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of extraction_regex */

{extraction_regex,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{extraction_regex,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of extraction_regex */

{extraction_regex,free_memory_watch, "promises.cf.html#free_memory_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{extraction_regex,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of extraction_regex */

{extraction_regex,About, [[Regular expression that should contain a single backreference for extracting a value]]}

 /* occurrences of extraction_regex */

{extraction_regex,About, [[Regular expression that should contain a single backreference for extracting a value]]}

 /* occurrences of select_line_number */

{select_line_number,About, [[Read from the n-th line of the output (fixed format)]]}

 /* occurrences of select_line_number */

{select_line_number,About, [[Read from the n-th line of the output (fixed format)]]}

 /* occurrences of match_value */

{match_value,free_disk_watch, "promises.cf.html#free_disk_watch"}
{match_value,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of match_value */

{match_value,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{match_value,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of match_value */

{match_value,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{match_value,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of match_value */

{match_value,free_memory_watch, "promises.cf.html#free_memory_watch"}
{match_value,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of match_value */

{match_value,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{match_value,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of match_value */

{match_value,About, [[Criteria for extracting the measurement from a datastream]]}

 /* occurrences of units */

{units,free_disk_watch, "promises.cf.html#free_disk_watch"}
{units,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of units */

{units,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{units,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of units */

{units,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{units,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of units */

{units,free_memory_watch, "promises.cf.html#free_memory_watch"}
{units,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of units */

{units,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{units,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of units */

{units,About, [[The engineering dimensions of this value or a note about its intent used in plots]]}

 /* occurrences of history_type */

{history_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{history_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of history_type */

{history_type,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{history_type,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of history_type */

{history_type,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{history_type,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of history_type */

{history_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{history_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of history_type */

{history_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{history_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of history_type */

{history_type,About, [[Whether the data can be seen as a time-series or just an isolated value]]}

 /* occurrences of data_type */

{data_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{data_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of data_type */

{data_type,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{data_type,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of data_type */

{data_type,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{data_type,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of data_type */

{data_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{data_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of data_type */

{data_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{data_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of data_type */

{data_type,About, [[The datatype being collected.]]}

 /* occurrences of stream_type */

{stream_type,free_disk_watch, "promises.cf.html#free_disk_watch"}
{stream_type,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of stream_type */

{stream_type,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{stream_type,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of stream_type */

{stream_type,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{stream_type,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of stream_type */

{stream_type,free_memory_watch, "promises.cf.html#free_memory_watch"}
{stream_type,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of stream_type */

{stream_type,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{stream_type,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of stream_type */

{stream_type,About, [[The datatype being collected.]]}

 /* occurrences of inference */

{inference,About, [[Result of the syllogism]]}

 /* occurrences of inference */

{inference,About, [[Result of the syllogism]]}

 /* occurrences of post_assoc_pattern */

{post_assoc_pattern,About, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of post_assoc_pattern */

{post_assoc_pattern,About, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of pre_assoc_pattern */

{pre_assoc_pattern,About, [[Name of forward association between promiser topic and associates]]}

 /* occurrences of infer */

{infer,About, [[Specify the promise-inference triangle from this topic]]}

 /* occurrences of follow_topics */

{follow_topics,About, [[Use the knowledge promised by topics matching this pattern]]}

 /* occurrences of path_root */

{path_root,About, [[Base path of the occurrence when locating file (replaced by web_root)]]}

 /* occurrences of web_root */

{web_root,About, [[Base URL of the occurrence when rendered as a web-URL (replaces path_root)]]}

 /* occurrences of representation */

{representation,About, [[How to interpret the promiser string e.g. actual data or reference to data]]}

 /* occurrences of represents */

{represents,About, [[List of subtopics that explains the type(s) of information represented by the occurrence]]}

 /* occurrences of associates */

{associates,About, [[List of associated topics by this forward relationship]]}

 /* occurrences of associates */

{associates,About, [[List of associated topics by this forward relationship]]}

 /* occurrences of backward_relationship */

{backward_relationship,About, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of backward_relationship */

{backward_relationship,About, [[Name of backward/inverse association from associates to promiser topic]]}

 /* occurrences of forward_relationship */

{forward_relationship,About, [[Name of forward association between promiser topic and associates]]}

 /* occurrences of association */

{association,About, [[Declare associated topics]]}

 /* occurrences of authorize */

{authorize,promise_site_cf_422, "promises.cf.html#promise_site_cf_422"}
{authorize,used_in_promise, "promises.cf.html#promise_site_cf_422"}

 /* occurrences of authorize */

{authorize,About, [[List of public-key user names that are allowed to activate the promised class during remote agent activation]]}

 /* occurrences of resource_type */

{resource_type,About, [[The type of object being granted access (the default grants access to files)]]}

 /* occurrences of ifencrypted */

{ifencrypted,About, [[true/false whether the current file access promise is conditional on the connection from the client being encrypted]]}

 /* occurrences of maproot */

{maproot,About, [[List of host names or IP addresses to grant full read-privilege on the server]]}

 /* occurrences of deny */

{deny,About, [[List of host names or IP addresses to deny access to file objects]]}

 /* occurrences of admit */

{admit,promise_site_cf_418, "promises.cf.html#promise_site_cf_418"}
{admit,used_in_promise, "promises.cf.html#promise_site_cf_418"}

 /* occurrences of admit */

{admit,promise_site_cf_414, "promises.cf.html#promise_site_cf_414"}
{admit,used_in_promise, "promises.cf.html#promise_site_cf_414"}

 /* occurrences of admit */

{admit,About, [[List of host names or IP addresses to grant access to file objects]]}

 /* occurrences of scan_arrivals */

{scan_arrivals,About, [[true/false generate pseudo-periodic disk change arrival distribution]]}

 /* occurrences of scan_arrivals */

{scan_arrivals,About, [[true/false generate pseudo-periodic disk change arrival distribution]]}

 /* occurrences of sensible_count */

{sensible_count,About, [[Minimum number of files that should be defined on a sensible-looking storage device]]}

 /* occurrences of sensible_count */

{sensible_count,About, [[Minimum number of files that should be defined on a sensible-looking storage device]]}

 /* occurrences of sensible_size */

{sensible_size,About, [[Minimum size in bytes that should be used on a sensible-looking storage device]]}

 /* occurrences of freespace */

{freespace,About, [[Absolute or percentage minimum disk space that should be available before warning]]}

 /* occurrences of freespace */

{freespace,About, [[Absolute or percentage minimum disk space that should be available before warning]]}

 /* occurrences of check_foreign */

{check_foreign,About, [[true/false verify storage that is mounted from a foreign system on this host]]}

 /* occurrences of volume */

{volume,About, [[Criteria for monitoring/probing mounted volumes]]}

 /* occurrences of unmount */

{unmount,About, [[true/false unmount a previously mounted filesystem]]}

 /* occurrences of unmount */

{unmount,About, [[true/false unmount a previously mounted filesystem]]}

 /* occurrences of mount_options */

{mount_options,About, [[List of option strings to add to the file system table ("fstab")]]}

 /* occurrences of mount_options */

{mount_options,About, [[List of option strings to add to the file system table ("fstab")]]}

 /* occurrences of mount_server */

{mount_server,About, [[Hostname or IP or remote file system server]]}

 /* occurrences of mount_source */

{mount_source,About, [[Path of remote file system to mount]]}

 /* occurrences of mount_type */

{mount_type,About, [[Protocol type of remote file system]]}

 /* occurrences of mount_type */

{mount_type,About, [[Protocol type of remote file system]]}

 /* occurrences of edit_fstab */

{edit_fstab,About, [[true/false add or remove entries to the file system table ("fstab")]]}

 /* occurrences of mount */

{mount,About, [[Criteria for mounting foreign file systems]]}

 /* occurrences of service_dependence_chain */

{service_dependence_chain,About, [[How to handle dependencies and dependent services]]}

 /* occurrences of service_autostart_policy */

{service_autostart_policy,About, [[Should the service be started automatically by the OS]]}

 /* occurrences of service_autostart_policy */

{service_autostart_policy,About, [[Should the service be started automatically by the OS]]}

 /* occurrences of service_args */

{service_args,About, [[Parameters for starting the service]]}

 /* occurrences of service_type */

{service_type,About, [[Service abstraction type]]}

 /* occurrences of service_method */

{service_method,About, [[Details of the service specification]]}

 /* occurrences of service_dependencies */

{service_dependencies,About, [[A list of services on which this service depends]]}

 /* occurrences of service_policy */

{service_policy,About, [[Policy for service status to maintain]]}

 /* occurrences of signals */

{signals,promise_site_cf_101, "promises.cf.html#promise_site_cf_101"}
{signals,used_in_promise, "promises.cf.html#promise_site_cf_101"}

 /* occurrences of signals */

{signals,About, [[A list of menu options representing signals to be sent to a process]]}

 /* occurrences of restart_class */

{restart_class,promise_webserver_cf_38, "promises.cf.html#promise_webserver_cf_38"}
{restart_class,used_in_promise, "promises.cf.html#promise_webserver_cf_38"}

 /* occurrences of restart_class */

{restart_class,promise_site_cf_155, "promises.cf.html#promise_site_cf_155"}
{restart_class,used_in_promise, "promises.cf.html#promise_site_cf_155"}

 /* occurrences of restart_class */

{restart_class,promise_site_cf_152, "promises.cf.html#promise_site_cf_152"}
{restart_class,used_in_promise, "promises.cf.html#promise_site_cf_152"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_31, "promises.cf.html#promise_update_cf_31"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_31"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_30, "promises.cf.html#promise_update_cf_30"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_30"}

 /* occurrences of restart_class */

{restart_class,promise_update_cf_29, "promises.cf.html#promise_update_cf_29"}
{restart_class,used_in_promise, "promises.cf.html#promise_update_cf_29"}

 /* occurrences of restart_class */

{restart_class,About, [[A class to be defined globally if the process is not running, so that a command: rule can be referred to restart the process]]}

 /* occurrences of process_stop */

{process_stop,promise_webserver_cf_44, "promises.cf.html#promise_webserver_cf_44"}
{process_stop,used_in_promise, "promises.cf.html#promise_webserver_cf_44"}

 /* occurrences of process_stop */

{process_stop,About, [[A command used to stop a running process]]}

 /* occurrences of vsize */

{vsize,About, [[Range of integers matching the virtual memory size of a process, in kilobytes]]}

 /* occurrences of vsize */

{vsize,About, [[Range of integers matching the virtual memory size of a process, in kilobytes]]}

 /* occurrences of threads */

{threads,About, [[Range of integers matching the threads (NLWP) field of a process]]}

 /* occurrences of threads */

{threads,About, [[Range of integers matching the threads (NLWP) field of a process]]}

 /* occurrences of tty */

{tty,About, [[Regular expression matching the tty field of a process]]}

 /* occurrences of ttime_range */

{ttime_range,About, [[Range of integers matching the total elapsed time of a process]]}

 /* occurrences of stime_range */

{stime_range,About, [[Range of integers matching the start time of a process]]}

 /* occurrences of stime_range */

{stime_range,About, [[Range of integers matching the start time of a process]]}

 /* occurrences of status */

{status,About, [[Regular expression matching the status field of a process]]}

 /* occurrences of status */

{status,About, [[Regular expression matching the status field of a process]]}

 /* occurrences of rsize */

{rsize,About, [[Range of integers matching the resident memory size of a process, in kilobytes]]}

 /* occurrences of process_result */

{process_result,About, [[Boolean class expression returning the logical combination of classes set by a process selection test]]}

 /* occurrences of process_result */

{process_result,About, [[Boolean class expression returning the logical combination of classes set by a process selection test]]}

 /* occurrences of process_owner */

{process_owner,About, [[List of regexes matching the user of a process]]}

 /* occurrences of priority */

{priority,About, [[Range of integers matching the priority field (PRI/NI) of a process]]}

 /* occurrences of priority */

{priority,About, [[Range of integers matching the priority field (PRI/NI) of a process]]}

 /* occurrences of ppid */

{ppid,About, [[Range of integers matching the parent process id of a process]]}

 /* occurrences of ppid */

{ppid,About, [[Range of integers matching the parent process id of a process]]}

 /* occurrences of pgid */

{pgid,About, [[Range of integers matching the parent group id of a process]]}

 /* occurrences of pgid */

{pgid,About, [[Range of integers matching the parent group id of a process]]}

 /* occurrences of pid */

{pid,About, [[Range of integers matching the process id of a process]]}

 /* occurrences of pid */

{pid,About, [[Range of integers matching the process id of a process]]}

 /* occurrences of command */

{command,About, [[Regular expression matching the command/cmd field of a process]]}

 /* occurrences of process_select */

{process_select,About, [[Criteria for matching processes in the system process table]]}

 /* occurrences of out_of_range_define */

{out_of_range_define,About, [[List of classes to define if the matches are out of range]]}

 /* occurrences of out_of_range_define */

{out_of_range_define,About, [[List of classes to define if the matches are out of range]]}

 /* occurrences of match_range */

{match_range,About, [[Integer range for acceptable number of matches for this process]]}

 /* occurrences of match_range */

{match_range,About, [[Integer range for acceptable number of matches for this process]]}

 /* occurrences of in_range_define */

{in_range_define,About, [[List of classes to define if the matches are in range]]}

 /* occurrences of process_count */

{process_count,About, [[Criteria for constraining the number of processes matching other criteria]]}

 /* occurrences of package_version */

{package_version,About, [[Version reference point for determining promised version]]}

 /* occurrences of package_select */

{package_select,About, [[A criterion for first acceptable match relative to "package_version"]]}

 /* occurrences of package_policy */

{package_policy,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_policy,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_policy */

{package_policy,About, [[Criteria for package installation/upgrade on the current system]]}

 /* occurrences of package_multiline_start */

{package_multiline_start,About, [[Regular expression which matches the start of a new package in multiline output]]}

 /* occurrences of package_multiline_start */

{package_multiline_start,About, [[Regular expression which matches the start of a new package in multiline output]]}

 /* occurrences of package_version_regex */

{package_version_regex,About, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_verify_command */

{package_verify_command,About, [[Command to verify the correctness of an installed package]]}

 /* occurrences of package_update_command */

{package_update_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_update_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_update_command */

{package_update_command,About, [[Command to update to the latest version a currently installed package]]}

 /* occurrences of package_update_command */

{package_update_command,About, [[Command to update to the latest version a currently installed package]]}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_patch_version_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,About, [[Regular expression with one backreference to extract update version string]]}

 /* occurrences of package_patch_version_regex */

{package_patch_version_regex,About, [[Regular expression with one backreference to extract update version string]]}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_patch_name_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_patch_name_regex */

{package_patch_name_regex,About, [[Regular expression with one backreference to extract update name string]]}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_patch_list_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,About, [[Command to obtain a list of available patches or updates]]}

 /* occurrences of package_patch_list_command */

{package_patch_list_command,About, [[Command to obtain a list of available patches or updates]]}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_patch_installed_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_patch_installed_regex */

{package_patch_installed_regex,About, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_patch_command */

{package_patch_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_patch_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_patch_command */

{package_patch_command,About, [[Command to update to the latest patch release of an installed package]]}

 /* occurrences of package_patch_command */

{package_patch_command,About, [[Command to update to the latest patch release of an installed package]]}

 /* occurrences of package_patch_arch_regex */

{package_patch_arch_regex,About, [[Regular expression with one backreference to extract update architecture string]]}

 /* occurrences of package_patch_arch_regex */

{package_patch_arch_regex,About, [[Regular expression with one backreference to extract update architecture string]]}

 /* occurrences of package_noverify_returncode */

{package_noverify_returncode,About, [[Integer return code indicating package verification failure]]}

 /* occurrences of package_noverify_returncode */

{package_noverify_returncode,About, [[Integer return code indicating package verification failure]]}

 /* occurrences of package_noverify_regex */

{package_noverify_regex,About, [[Regular expression to match verification failure output]]}

 /* occurrences of package_noverify_regex */

{package_noverify_regex,About, [[Regular expression to match verification failure output]]}

 /* occurrences of package_name_regex */

{package_name_regex,About, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_name_regex */

{package_name_regex,About, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_name_convention */

{package_name_convention,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_name_convention,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_name_convention */

{package_name_convention,About, [[This is how the package manager expects the package to be referred to, e.g. $(name).$(arch)]]}

 /* occurrences of package_name_convention */

{package_name_convention,About, [[This is how the package manager expects the package to be referred to, e.g. $(name).$(arch)]]}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_list_version_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,About, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_list_version_regex */

{package_list_version_regex,About, [[Regular expression with one backreference to extract package version string]]}

 /* occurrences of package_list_update_ifelapsed */

{package_list_update_ifelapsed,About, [[The ifelapsed locking time in between updates of the package list]]}

 /* occurrences of package_list_update_ifelapsed */

{package_list_update_ifelapsed,About, [[The ifelapsed locking time in between updates of the package list]]}

 /* occurrences of package_list_update_command */

{package_list_update_command,About, [[Command to update the list of available packages (if any)]]}

 /* occurrences of package_list_update_command */

{package_list_update_command,About, [[Command to update the list of available packages (if any)]]}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_list_name_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_list_name_regex */

{package_list_name_regex,About, [[Regular expression with one backreference to extract package name string]]}

 /* occurrences of package_list_command */

{package_list_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_list_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_list_command */

{package_list_command,About, [[Command to obtain a list of available packages]]}

 /* occurrences of package_list_command */

{package_list_command,About, [[Command to obtain a list of available packages]]}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_list_arch_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,About, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_list_arch_regex */

{package_list_arch_regex,About, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_installed_regex */

{package_installed_regex,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_installed_regex,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_installed_regex */

{package_installed_regex,About, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_installed_regex */

{package_installed_regex,About, [[Regular expression which matches packages that are already installed]]}

 /* occurrences of package_file_repositories */

{package_file_repositories,About, [[A list of machine-local directories to search for packages]]}

 /* occurrences of package_file_repositories */

{package_file_repositories,About, [[A list of machine-local directories to search for packages]]}

 /* occurrences of package_delete_convention */

{package_delete_convention,About, [[This is how the package manager expects the package to be referred to in the deletion part of a package update, e.g. $(name)]]}

 /* occurrences of package_delete_command */

{package_delete_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_delete_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_delete_command */

{package_delete_command,About, [[Command to remove a package from the system]]}

 /* occurrences of package_changes */

{package_changes,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_changes,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_changes */

{package_changes,About, [[Menu option - whether to group packages into a single aggregate command]]}

 /* occurrences of package_changes */

{package_changes,About, [[Menu option - whether to group packages into a single aggregate command]]}

 /* occurrences of package_arch_regex */

{package_arch_regex,About, [[Regular expression with one backreference to extract package architecture string]]}

 /* occurrences of package_add_command */

{package_add_command,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_add_command,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_add_command */

{package_add_command,About, [[Command to install a package to the system]]}

 /* occurrences of package_method */

{package_method,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{package_method,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of package_method */

{package_method,About, [[Criteria for installation and verification]]}

 /* occurrences of package_architectures */

{package_architectures,About, [[Select the architecture for package selection]]}

 /* occurrences of promiser_type */

{promiser_type,About, [[Output level to observe for the named promise or bundle (meta-promise)]]}

 /* occurrences of output_level */

{output_level,About, [[Output level to observe for the named promise or bundle (meta-promise)]]}

 /* occurrences of usebundle */

{usebundle,About, [[Specify the name of a bundle to run as a parameterized method]]}

 /* occurrences of ipv6_address */

{ipv6_address,About, [[IPv6 address for the interface]]}

 /* occurrences of ipv4_netmask */

{ipv4_netmask,About, [[Netmask for the interface]]}

 /* occurrences of ipv4_address */

{ipv4_address,About, [[IPv4 address for the interface]]}

 /* occurrences of tcp_ip */

{tcp_ip,About, [[Interface tcp/ip properties]]}

 /* occurrences of replace_value */

{replace_value,promise_library_cf_200, "promises.cf.html#promise_library_cf_200"}
{replace_value,used_in_promise, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of replace_value */

{replace_value,About, [[Value used to replace regular expression matches in search]]}

 /* occurrences of occurrences */

{occurrences,About, [[Menu option to replace all occurrences or just first (NB the latter is non-convergent)]]}

 /* occurrences of replace_with */

{replace_with,promise_library_cf_200, "promises.cf.html#promise_library_cf_200"}
{replace_with,used_in_promise, "promises.cf.html#promise_library_cf_200"}

 /* occurrences of replace_with */

{replace_with,About, [[Search-replace pattern]]}

 /* occurrences of value_separator */

{value_separator,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{value_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of value_separator */

{value_separator,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{value_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of value_separator */

{value_separator,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{value_separator,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of value_separator */

{value_separator,About, [[Character separator for subfields inside the selected field]]}

 /* occurrences of select_field */

{select_field,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{select_field,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of select_field */

{select_field,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{select_field,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of select_field */

{select_field,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{select_field,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of select_field */

{select_field,About, [[Integer index of the field required 1..n]]}

 /* occurrences of select_field */

{select_field,About, [[Integer index of the field required 1..n]]}

 /* occurrences of field_value */

{field_value,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{field_value,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of field_value */

{field_value,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{field_value,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of field_value */

{field_value,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{field_value,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of field_value */

{field_value,About, [[Set field value to a fixed value]]}

 /* occurrences of field_value */

{field_value,About, [[Set field value to a fixed value]]}

 /* occurrences of field_separator */

{field_separator,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{field_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of field_separator */

{field_separator,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{field_separator,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of field_separator */

{field_separator,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{field_separator,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of field_separator */

{field_separator,About, [[The regular expression used to separate fields in a line]]}

 /* occurrences of field_operation */

{field_operation,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{field_operation,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of field_operation */

{field_operation,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{field_operation,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of field_operation */

{field_operation,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{field_operation,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of field_operation */

{field_operation,About, [[Menu option policy for editing subfields]]}

 /* occurrences of field_operation */

{field_operation,About, [[Menu option policy for editing subfields]]}

 /* occurrences of extend_fields */

{extend_fields,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{extend_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of extend_fields */

{extend_fields,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{extend_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of extend_fields */

{extend_fields,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{extend_fields,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of extend_fields */

{extend_fields,About, [[true/false add new fields at end of line if necessary to complete edit]]}

 /* occurrences of extend_fields */

{extend_fields,About, [[true/false add new fields at end of line if necessary to complete edit]]}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{allow_blank_fields,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of allow_blank_fields */

{allow_blank_fields,About, [[true/false allow blank fields in a line (do not purge)]]}

 /* occurrences of edit_field */

{edit_field,promise_webserver_cf_137, "promises.cf.html#promise_webserver_cf_137"}
{edit_field,used_in_promise, "promises.cf.html#promise_webserver_cf_137"}

 /* occurrences of edit_field */

{edit_field,promise_webserver_cf_130, "promises.cf.html#promise_webserver_cf_130"}
{edit_field,used_in_promise, "promises.cf.html#promise_webserver_cf_130"}

 /* occurrences of edit_field */

{edit_field,promise_library_cf_119, "promises.cf.html#promise_library_cf_119"}
{edit_field,used_in_promise, "promises.cf.html#promise_library_cf_119"}

 /* occurrences of edit_field */

{edit_field,About, [[Edit line-based file as matrix of fields]]}

 /* occurrences of whitespace_policy */

{whitespace_policy,About, [[Criteria for matching and recognizing existing lines]]}

 /* occurrences of select_line_matching */

{select_line_matching,free_disk_watch, "promises.cf.html#free_disk_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,apache_watch_memory, "promises.cf.html#apache_watch_memory"}
{select_line_matching,used_in_promise, "promises.cf.html#apache_watch_memory"}

 /* occurrences of select_line_matching */

{select_line_matching,apache_watch_cpu, "promises.cf.html#apache_watch_cpu"}
{select_line_matching,used_in_promise, "promises.cf.html#apache_watch_cpu"}

 /* occurrences of select_line_matching */

{select_line_matching,free_memory_watch, "promises.cf.html#free_memory_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#free_memory_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,monitor_self_watch, "promises.cf.html#monitor_self_watch"}
{select_line_matching,used_in_promise, "promises.cf.html#monitor_self_watch"}

 /* occurrences of select_line_matching */

{select_line_matching,About, [[Regular expression for matching line location]]}

 /* occurrences of select_line_matching */

{select_line_matching,About, [[Regular expression for matching file line location]]}

 /* occurrences of first_last */

{first_last,About, [[Menu option, choose first or last occurrence of match in file]]}

 /* occurrences of before_after */

{before_after,About, [[Menu option, point cursor before of after matched line]]}

 /* occurrences of location */

{location,About, [[Specify where in a file an insertion will be made]]}

 /* occurrences of insert_if_not_contains_from_list */

{insert_if_not_contains_from_list,About, [[Insert line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of insert_if_not_contains_from_list */

{insert_if_not_contains_from_list,About, [[Insert line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of insert_if_contains_from_list */

{insert_if_contains_from_list,About, [[Insert line if a regex in the list match a line fragment]]}

 /* occurrences of insert_if_contains_from_list */

{insert_if_contains_from_list,About, [[Insert line if a regex in the list match a line fragment]]}

 /* occurrences of insert_if_not_match_from_list */

{insert_if_not_match_from_list,About, [[Insert line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of insert_if_not_match_from_list */

{insert_if_not_match_from_list,About, [[Insert line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of insert_if_match_from_list */

{insert_if_match_from_list,About, [[Insert line if it fully matches a regex in the list]]}

 /* occurrences of insert_if_match_from_list */

{insert_if_match_from_list,About, [[Insert line if it fully matches a regex in the list]]}

 /* occurrences of insert_if_not_startwith_from_list */

{insert_if_not_startwith_from_list,About, [[Insert line if it DOES NOT start with a string in the list]]}

 /* occurrences of insert_if_not_startwith_from_list */

{insert_if_not_startwith_from_list,About, [[Insert line if it DOES NOT start with a string in the list]]}

 /* occurrences of insert_if_startwith_from_list */

{insert_if_startwith_from_list,About, [[Insert line if it starts with a string in the list]]}

 /* occurrences of insert_select */

{insert_select,About, [[Insert only if lines pass filter criteria]]}

 /* occurrences of insert_type */

{insert_type,About, [[Type of object the promiser string refers to]]}

 /* occurrences of expand_scalars */

{expand_scalars,About, [[Expand any unexpanded variables]]}

 /* occurrences of not_matching */

{not_matching,About, [[true/false negate match criterion]]}

 /* occurrences of delete_if_not_contains_from_list */

{delete_if_not_contains_from_list,About, [[Delete line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of delete_if_not_contains_from_list */

{delete_if_not_contains_from_list,About, [[Delete line if a regex in the list DOES NOT match a line fragment]]}

 /* occurrences of delete_if_contains_from_list */

{delete_if_contains_from_list,About, [[Delete line if a regex in the list match a line fragment]]}

 /* occurrences of delete_if_contains_from_list */

{delete_if_contains_from_list,About, [[Delete line if a regex in the list match a line fragment]]}

 /* occurrences of delete_if_not_match_from_list */

{delete_if_not_match_from_list,About, [[Delete line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of delete_if_not_match_from_list */

{delete_if_not_match_from_list,About, [[Delete line if it DOES NOT fully match a regex in the list]]}

 /* occurrences of delete_if_match_from_list */

{delete_if_match_from_list,About, [[Delete line if it fully matches a regex in the list]]}

 /* occurrences of delete_if_match_from_list */

{delete_if_match_from_list,About, [[Delete line if it fully matches a regex in the list]]}

 /* occurrences of delete_if_not_startwith_from_list */

{delete_if_not_startwith_from_list,About, [[Delete line if it DOES NOT start with a string in the list]]}

 /* occurrences of delete_if_not_startwith_from_list */

{delete_if_not_startwith_from_list,About, [[Delete line if it DOES NOT start with a string in the list]]}

 /* occurrences of delete_if_startwith_from_list */

{delete_if_startwith_from_list,About, [[Delete line if it starts with a string in the list]]}

 /* occurrences of delete_select */

{delete_select,About, [[Delete only if lines pass filter criteria]]}

 /* occurrences of select_end */

{select_end,About, [[Regular expression matches end of edit region from start]]}

 /* occurrences of select_end */

{select_end,About, [[Regular expression matches end of edit region from start]]}

 /* occurrences of select_start */

{select_start,About, [[Regular expression matching start of edit region]]}

 /* occurrences of select_start */

{select_start,About, [[Regular expression matching start of edit region]]}

 /* occurrences of include_start_delimiter */

{include_start_delimiter,About, [[Whether to include the section delimiter]]}

 /* occurrences of select_region */

{select_region,About, [[Limit edits to a demarked region of the file]]}

 /* occurrences of transformer */

{transformer,About, [[Command (with full path) used to transform current file (no shell wrapper used)]]}

 /* occurrences of touch */

{touch,About, [[true/false whether to touch time stamps on file]]}

 /* occurrences of repository */

{repository,About, [[Name of a repository for versioning]]}

 /* occurrences of rotate */

{rotate,About, [[Maximum number of file rotations to keep]]}

 /* occurrences of rotate */

{rotate,About, [[Maximum number of file rotations to keep]]}

 /* occurrences of newname */

{newname,About, [[The desired name for the current file]]}

 /* occurrences of newname */

{newname,About, [[The desired name for the current file]]}

 /* occurrences of disable_suffix */

{disable_suffix,About, [[The suffix to add to files when disabling (.cfdisabled)]]}

 /* occurrences of disable_suffix */

{disable_suffix,About, [[The suffix to add to files when disabling (.cfdisabled)]]}

 /* occurrences of disable_mode */

{disable_mode,About, [[The permissions to set when a file is disabled]]}

 /* occurrences of disable_mode */

{disable_mode,About, [[The permissions to set when a file is disabled]]}

 /* occurrences of disable */

{disable,About, [[true/false automatically rename and remove permissions]]}

 /* occurrences of rename */

{rename,About, [[Criteria for renaming files]]}

 /* occurrences of rxdirs */

{rxdirs,About, [[true/false add execute flag for directories if read flag is set]]}

 /* occurrences of rxdirs */

{rxdirs,About, [[true/false add execute flag for directories if read flag is set]]}

 /* occurrences of owners */

{owners,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{owners,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of owners */

{owners,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{owners,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of owners */

{owners,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{owners,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of owners */

{owners,promise_site_cf_93, "promises.cf.html#promise_site_cf_93"}
{owners,used_in_promise, "promises.cf.html#promise_site_cf_93"}

 /* occurrences of owners */

{owners,About, [[List of acceptable owners or user ids, first is change target]]}

 /* occurrences of owners */

{owners,About, [[List of acceptable owners or user ids, first is change target]]}

 /* occurrences of mode */

{mode,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{mode,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of mode */

{mode,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{mode,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of mode */

{mode,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{mode,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of mode */

{mode,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{mode,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of mode */

{mode,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{mode,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of mode */

{mode,About, [[File permissions (like posix chmod)]]}

 /* occurrences of mode */

{mode,About, [[File permissions (like posix chmod)]]}

 /* occurrences of groups */

{groups,About, [[List of acceptable groups of group ids, first is change target]]}

 /* occurrences of bsdflags */

{bsdflags,About, [[List of menu options for bsd file system flags to set]]}

 /* occurrences of perms */

{perms,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{perms,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of perms */

{perms,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{perms,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of perms */

{perms,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{perms,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of perms */

{perms,promise_site_cf_93, "promises.cf.html#promise_site_cf_93"}
{perms,used_in_promise, "promises.cf.html#promise_site_cf_93"}

 /* occurrences of perms */

{perms,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{perms,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of perms */

{perms,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{perms,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of perms */

{perms,About, [[Criteria for setting permissions on a file]]}

 /* occurrences of pathtype */

{pathtype,About, [[Menu option for interpreting promiser file object]]}

 /* occurrences of move_obstructions */

{move_obstructions,About, [[true/false whether to move obstructions to file-object creation]]}

 /* occurrences of when_no_source */

{when_no_source,About, [[Behaviour when the source file to link to does not exist]]}

 /* occurrences of when_linking_children */

{when_linking_children,About, [[Policy for overriding existing files when linking directories of children]]}

 /* occurrences of when_linking_children */

{when_linking_children,About, [[Policy for overriding existing files when linking directories of children]]}

 /* occurrences of source */

{source,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{source,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of source */

{source,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{source,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of source */

{source,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{source,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of source */

{source,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{source,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of source */

{source,promise_site_cf_349, "promises.cf.html#promise_site_cf_349"}
{source,used_in_promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of source */

{source,promise_site_cf_343, "promises.cf.html#promise_site_cf_343"}
{source,used_in_promise, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of source */

{source,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{source,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of source */

{source,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{source,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of source */

{source,About, [[The source file to which the link should point]]}

 /* occurrences of source */

{source,About, [[The source file to which the link should point]]}

 /* occurrences of link_type */

{link_type,About, [[The type of link used to alias the file]]}

 /* occurrences of link_type */

{link_type,About, [[The type of link used to alias the file]]}

 /* occurrences of link_children */

{link_children,About, [[true/false whether to link all directory's children to source originals]]}

 /* occurrences of link_children */

{link_children,About, [[true/false whether to link all directory's children to source originals]]}

 /* occurrences of copy_patterns */

{copy_patterns,About, [[A set of patterns that should be copied ansd synchronized instead of linked]]}

 /* occurrences of link_from */

{link_from,About, [[Criteria for linking file from a source]]}

 /* occurrences of file_result */

{file_result,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{file_result,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of file_result */

{file_result,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{file_result,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of file_result */

{file_result,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of file_result */

{file_result,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of file_result */

{file_result,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{file_result,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of file_result */

{file_result,About, [[Logical expression combining classes defined by file search criteria]]}

 /* occurrences of file_result */

{file_result,About, [[Logical expression combining classes defined by file search criteria]]}

 /* occurrences of issymlinkto */

{issymlinkto,About, [[List of regular expressions to match file objects]]}

 /* occurrences of file_types */

{file_types,About, [[List of acceptable file types from menu choices]]}

 /* occurrences of exec_program */

{exec_program,About, [[Execute this command on each file and match if the exit status is zero]]}

 /* occurrences of exec_regex */

{exec_regex,About, [[Matches file if this regular expression matches any full line returned by the command]]}

 /* occurrences of atime */

{atime,About, [[Range of access times (atime) for acceptable files]]}

 /* occurrences of mtime */

{mtime,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{mtime,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of mtime */

{mtime,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{mtime,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of mtime */

{mtime,About, [[Range of modification times (mtime) for acceptable files]]}

 /* occurrences of ctime */

{ctime,About, [[Range of change times (ctime) for acceptable files]]}

 /* occurrences of search_bsdflags */

{search_bsdflags,About, [[String of flags for bsd file system flags expected set]]}

 /* occurrences of search_bsdflags */

{search_bsdflags,About, [[String of flags for bsd file system flags expected set]]}

 /* occurrences of search_groups */

{search_groups,About, [[List of acceptable group names or ids for the file, or regexes to match]]}

 /* occurrences of search_groups */

{search_groups,About, [[List of acceptable group names or ids for the file, or regexes to match]]}

 /* occurrences of search_owners */

{search_owners,About, [[List of acceptable user names or ids for the file, or regexes to match]]}

 /* occurrences of search_size */

{search_size,About, [[Integer range of file sizes]]}

 /* occurrences of search_size */

{search_size,About, [[Integer range of file sizes]]}

 /* occurrences of search_mode */

{search_mode,About, [[A list of mode masks for acceptable file permissions]]}

 /* occurrences of path_name */

{path_name,About, [[List of pathnames to match acceptable target]]}

 /* occurrences of path_name */

{path_name,About, [[List of pathnames to match acceptable target]]}

 /* occurrences of leaf_name */

{leaf_name,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{leaf_name,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of leaf_name */

{leaf_name,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{leaf_name,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of leaf_name */

{leaf_name,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{leaf_name,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of leaf_name */

{leaf_name,About, [[List of regexes that match an acceptable name]]}

 /* occurrences of file_select */

{file_select,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{file_select,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of file_select */

{file_select,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{file_select,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of file_select */

{file_select,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of file_select */

{file_select,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of file_select */

{file_select,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{file_select,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of file_select */

{file_select,About, [[Choose which files select in a search]]}

 /* occurrences of recognize_join */

{recognize_join,About, [[Join together lines that end with a backslash, up to 4kB limit]]}

 /* occurrences of recognize_join */

{recognize_join,About, [[Join together lines that end with a backslash, up to 4kB limit]]}

 /* occurrences of max_file_size */

{max_file_size,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{max_file_size,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of max_file_size */

{max_file_size,About, [[Do not edit files bigger than this number of bytes]]}

 /* occurrences of max_file_size */

{max_file_size,About, [[Do not edit files bigger than this number of bytes]]}

 /* occurrences of empty_file_before_editing */

{empty_file_before_editing,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{empty_file_before_editing,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of empty_file_before_editing */

{empty_file_before_editing,About, [[Baseline memory model of file to zero/empty before commencing promised edits]]}

 /* occurrences of edit_backup */

{edit_backup,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{edit_backup,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of edit_backup */

{edit_backup,About, [[Menu option for backup policy on edit changes]]}

 /* occurrences of edit_defaults */

{edit_defaults,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{edit_defaults,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of edit_defaults */

{edit_defaults,About, [[Default promise details for file edits]]}

 /* occurrences of edit_xml */

{edit_xml,About, [[XML editing model for file]]}

 /* occurrences of edit_line */

{edit_line,promise_webserver_cf_76, "promises.cf.html#promise_webserver_cf_76"}
{edit_line,used_in_promise, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of edit_line */

{edit_line,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{edit_line,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of edit_line */

{edit_line,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{edit_line,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of edit_line */

{edit_line,About, [[Line editing model for file]]}

 /* occurrences of xdev */

{xdev,About, [[true/false exclude directories that are on different devices]]}

 /* occurrences of xdev */

{xdev,About, [[true/false exclude directories that are on different devices]]}

 /* occurrences of traverse_links */

{traverse_links,About, [[true/false traverse symbolic links to directories (false)]]}

 /* occurrences of traverse_links */

{traverse_links,About, [[true/false traverse symbolic links to directories (false)]]}

 /* occurrences of rmdeadlinks */

{rmdeadlinks,About, [[true/false remove links that point to nowhere]]}

 /* occurrences of rmdeadlinks */

{rmdeadlinks,About, [[true/false remove links that point to nowhere]]}

 /* occurrences of include_dirs */

{include_dirs,About, [[List of regexes of directory names to include in depth search]]}

 /* occurrences of include_dirs */

{include_dirs,About, [[List of regexes of directory names to include in depth search]]}

 /* occurrences of include_basedir */

{include_basedir,About, [[true/false include the start/root dir of the search results]]}

 /* occurrences of include_basedir */

{include_basedir,About, [[true/false include the start/root dir of the search results]]}

 /* occurrences of exclude_dirs */

{exclude_dirs,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{exclude_dirs,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of exclude_dirs */

{exclude_dirs,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{exclude_dirs,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of exclude_dirs */

{exclude_dirs,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{exclude_dirs,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of exclude_dirs */

{exclude_dirs,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{exclude_dirs,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of exclude_dirs */

{exclude_dirs,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{exclude_dirs,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of exclude_dirs */

{exclude_dirs,About, [[List of regexes of directory names NOT to include in depth search]]}

 /* occurrences of exclude_dirs */

{exclude_dirs,About, [[List of regexes of directory names NOT to include in depth search]]}

 /* occurrences of depth */

{depth,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{depth,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of depth */

{depth,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{depth,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of depth */

{depth,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{depth,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of depth */

{depth,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{depth,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of depth */

{depth,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{depth,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of depth */

{depth,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{depth,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of depth */

{depth,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{depth,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of depth */

{depth,About, [[Maximum depth level for search]]}

 /* occurrences of depth_search */

{depth_search,promise_knowledge_cf_28, "promises.cf.html#promise_knowledge_cf_28"}
{depth_search,used_in_promise, "promises.cf.html#promise_knowledge_cf_28"}

 /* occurrences of depth_search */

{depth_search,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{depth_search,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of depth_search */

{depth_search,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{depth_search,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of depth_search */

{depth_search,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{depth_search,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of depth_search */

{depth_search,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{depth_search,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of depth_search */

{depth_search,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{depth_search,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of depth_search */

{depth_search,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{depth_search,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of depth_search */

{depth_search,About, [[Criteria for file depth searches]]}

 /* occurrences of rmdirs */

{rmdirs,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{rmdirs,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of rmdirs */

{rmdirs,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{rmdirs,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of rmdirs */

{rmdirs,About, [[true/false whether to delete empty directories during recursive deletion]]}

 /* occurrences of dirlinks */

{dirlinks,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{dirlinks,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of dirlinks */

{dirlinks,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{dirlinks,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of dirlinks */

{dirlinks,About, [[Menu option policy for dealing with symbolic links to directories during deletion]]}

 /* occurrences of delete */

{delete,promise_site_cf_210, "promises.cf.html#promise_site_cf_210"}
{delete,used_in_promise, "promises.cf.html#promise_site_cf_210"}

 /* occurrences of delete */

{delete,promise_site_cf_204, "promises.cf.html#promise_site_cf_204"}
{delete,used_in_promise, "promises.cf.html#promise_site_cf_204"}

 /* occurrences of delete */

{delete,About, [[Criteria for deleting files]]}

 /* occurrences of create */

{create,promise_site_cf_131, "promises.cf.html#promise_site_cf_131"}
{create,used_in_promise, "promises.cf.html#promise_site_cf_131"}

 /* occurrences of create */

{create,About, [[true/false whether to create non-existing file]]}

 /* occurrences of verify */

{verify,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{verify,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of verify */

{verify,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{verify,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of verify */

{verify,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{verify,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of verify */

{verify,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{verify,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of verify */

{verify,About, [[true/false verify transferred file by hashing after copy (resource penalty)]]}

 /* occurrences of verify */

{verify,About, [[true/false verify transferred file by hashing after copy (resource penalty)]]}

 /* occurrences of type_check */

{type_check,About, [[true/false compare file types before copying and require match]]}

 /* occurrences of type_check */

{type_check,About, [[true/false compare file types before copying and require match]]}

 /* occurrences of trustkey */

{trustkey,About, [[true/false trust public keys from remote server if previously unknown]]}

 /* occurrences of trustkey */

{trustkey,About, [[true/false trust public keys from remote server if previously unknown]]}

 /* occurrences of stealth */

{stealth,About, [[true/false whether to preserve time stamps on copied file]]}

 /* occurrences of stealth */

{stealth,About, [[true/false whether to preserve time stamps on copied file]]}

 /* occurrences of purge */

{purge,About, [[true/false purge files on client that do not match files on server when depth_search]]}

 /* occurrences of purge */

{purge,About, [[true/false purge files on client that do not match files on server when depth_search]]}

 /* occurrences of preserve */

{preserve,promise_site_cf_349, "promises.cf.html#promise_site_cf_349"}
{preserve,used_in_promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of preserve */

{preserve,promise_site_cf_343, "promises.cf.html#promise_site_cf_343"}
{preserve,used_in_promise, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of preserve */

{preserve,About, [[true/false whether to preserve file permissions on copied file]]}

 /* occurrences of portnumber */

{portnumber,About, [[Port number to connect to on server host]]}

 /* occurrences of portnumber */

{portnumber,About, [[Port number to connect to on server host]]}

 /* occurrences of force_ipv4 */

{force_ipv4,About, [[true/false force use of ipv4 on ipv6 enabled network]]}

 /* occurrences of force_ipv4 */

{force_ipv4,About, [[true/false force use of ipv4 on ipv6 enabled network]]}

 /* occurrences of force_update */

{force_update,About, [[true/false force copy update always]]}

 /* occurrences of force_update */

{force_update,About, [[true/false force copy update always]]}

 /* occurrences of link_type */

{link_type,About, [[Menu option for type of links to use when copying]]}

 /* occurrences of link_type */

{link_type,About, [[Menu option for type of links to use when copying]]}

 /* occurrences of linkcopy_patterns */

{linkcopy_patterns,About, [[List of patterns matching files that should be replaced with symbolic links]]}

 /* occurrences of findertype */

{findertype,About, [[Menu option for default finder type on MacOSX]]}

 /* occurrences of copy_size */

{copy_size,About, [[Integer range of file sizes that may be copied]]}

 /* occurrences of copy_size */

{copy_size,About, [[Integer range of file sizes that may be copied]]}

 /* occurrences of copylink_patterns */

{copylink_patterns,About, [[List of patterns matching files that should be linked instead of copied]]}

 /* occurrences of copylink_patterns */

{copylink_patterns,About, [[List of patterns matching files that should be linked instead of copied]]}

 /* occurrences of check_root */

{check_root,About, [[true/false check permissions on the root directory when depth_search]]}

 /* occurrences of check_root */

{check_root,About, [[true/false check permissions on the root directory when depth_search]]}

 /* occurrences of encrypt */

{encrypt,About, [[true/false use encrypted data stream to connect to remote host]]}

 /* occurrences of copy_backup */

{copy_backup,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{copy_backup,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of copy_backup */

{copy_backup,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{copy_backup,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of copy_backup */

{copy_backup,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{copy_backup,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of copy_backup */

{copy_backup,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{copy_backup,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of copy_backup */

{copy_backup,promise_site_cf_349, "promises.cf.html#promise_site_cf_349"}
{copy_backup,used_in_promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of copy_backup */

{copy_backup,promise_site_cf_343, "promises.cf.html#promise_site_cf_343"}
{copy_backup,used_in_promise, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of copy_backup */

{copy_backup,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{copy_backup,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of copy_backup */

{copy_backup,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{copy_backup,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of copy_backup */

{copy_backup,About, [[Menu option policy for file backup/version control]]}

 /* occurrences of compare */

{compare,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{compare,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of compare */

{compare,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{compare,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of compare */

{compare,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{compare,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of compare */

{compare,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{compare,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of compare */

{compare,About, [[Menu option policy for comparing source and image file attributes]]}

 /* occurrences of compare */

{compare,About, [[Menu option policy for comparing source and image file attributes]]}

 /* occurrences of collapse_destination_dir */

{collapse_destination_dir,About, [[true/false Place files in subdirectories into the root destination directory during copy]]}

 /* occurrences of servers */

{servers,About, [[List of servers in order of preference from which to copy]]}

 /* occurrences of source */

{source,About, [[Reference source file from which to copy]]}

 /* occurrences of copy_from */

{copy_from,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{copy_from,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of copy_from */

{copy_from,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{copy_from,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of copy_from */

{copy_from,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{copy_from,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of copy_from */

{copy_from,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{copy_from,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of copy_from */

{copy_from,promise_site_cf_349, "promises.cf.html#promise_site_cf_349"}
{copy_from,used_in_promise, "promises.cf.html#promise_site_cf_349"}

 /* occurrences of copy_from */

{copy_from,promise_site_cf_343, "promises.cf.html#promise_site_cf_343"}
{copy_from,used_in_promise, "promises.cf.html#promise_site_cf_343"}

 /* occurrences of copy_from */

{copy_from,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{copy_from,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of copy_from */

{copy_from,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{copy_from,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of copy_from */

{copy_from,About, [[Criteria for copying file from a source]]}

 /* occurrences of report_diffs */

{report_diffs,About, [[Generate reports summarizing the major differences between individual text files]]}

 /* occurrences of report_diffs */

{report_diffs,About, [[Generate reports summarizing the major differences between individual text files]]}

 /* occurrences of update_hashes */

{update_hashes,promise_site_cf_138, "promises.cf.html#promise_site_cf_138"}
{update_hashes,used_in_promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of update_hashes */

{update_hashes,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{update_hashes,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of update_hashes */

{update_hashes,About, [[Update hash values immediately after change warning]]}

 /* occurrences of report_changes */

{report_changes,promise_site_cf_138, "promises.cf.html#promise_site_cf_138"}
{report_changes,used_in_promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of report_changes */

{report_changes,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{report_changes,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of report_changes */

{report_changes,About, [[Specify criteria for change warnings]]}

 /* occurrences of hash */

{hash,About, [[Hash files for change detection]]}

 /* occurrences of changes */

{changes,promise_site_cf_138, "promises.cf.html#promise_site_cf_138"}
{changes,used_in_promise, "promises.cf.html#promise_site_cf_138"}

 /* occurrences of changes */

{changes,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{changes,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of changes */

{changes,About, [[Criteria for change management]]}

 /* occurrences of specify_inherit_aces */

{specify_inherit_aces,About, [[Native settings for access control entry]]}

 /* occurrences of acl_type */

{acl_type,About, [[Access control list type for the affected file system]]}

 /* occurrences of acl_method */

{acl_method,About, [[Editing method for access control list]]}

 /* occurrences of acl_directory_inherit */

{acl_directory_inherit,About, [[Access control list type for the affected file system]]}

 /* occurrences of aces */

{aces,About, [[Native settings for access control entry]]}

 /* occurrences of acl */

{acl,About, [[Criteria for access control lists on file]]}

 /* occurrences of environment_type */

{environment_type,About, [[Virtual environment type]]}

 /* occurrences of environment_state */

{environment_state,About, [[The desired dynamical state of the specified environment]]}

 /* occurrences of env_spec_file */

{env_spec_file,About, [[The path to a file containing a technology specific set of promises for the virtual instance]]}

 /* occurrences of env_baseline */

{env_baseline,About, [[The path to an image with which to baseline the virtual environment]]}

 /* occurrences of env_baseline */

{env_baseline,About, [[The path to an image with which to baseline the virtual environment]]}

 /* occurrences of env_disk */

{env_disk,About, [[Amount of secondary storage (DISK) in the virtual environment (MB)]]}

 /* occurrences of env_disk */

{env_disk,About, [[Amount of secondary storage (DISK) in the virtual environment (MB)]]}

 /* occurrences of env_memory */

{env_memory,About, [[Amount of primary storage (RAM) in the virtual environment (KB)]]}

 /* occurrences of env_memory */

{env_memory,About, [[Amount of primary storage (RAM) in the virtual environment (KB)]]}

 /* occurrences of env_cpus */

{env_cpus,About, [[Number of virtual CPUs in the environment]]}

 /* occurrences of environment_resources */

{environment_resources,About, [[Virtual environment resource description]]}

 /* occurrences of env_network */

{env_network,About, [[The hostname of the virtual network]]}

 /* occurrences of env_network */

{env_network,About, [[The hostname of the virtual network]]}

 /* occurrences of env_name */

{env_name,About, [[The hostname of the virtual environment]]}

 /* occurrences of env_name */

{env_name,About, [[The hostname of the virtual environment]]}

 /* occurrences of env_addresses */

{env_addresses,About, [[The IP addresses of the environment's network interfaces]]}

 /* occurrences of environment_interface */

{environment_interface,About, [[Virtual environment outward identity and location]]}

 /* occurrences of environment_host */

{environment_host,About, [[The name of the virtual environment host (this must be promised uniquely)]]}

 /* occurrences of registry_exclude */

{registry_exclude,About, [[A list of regular expressions to ignore in key/value verification]]}

 /* occurrences of database_rows */

{database_rows,About, [[An ordered list of row values to be promised by SQL databases]]}

 /* occurrences of database_columns */

{database_columns,About, [[A list of column definitions to be promised by SQL databases]]}

 /* occurrences of database_operation */

{database_operation,About, [[The nature of the promise - to be or not to be]]}

 /* occurrences of database_type */

{database_type,About, [[The type of database that is to be manipulated]]}

 /* occurrences of db_server_connection_db */

{db_server_connection_db,About, [[The name of an existing database to connect to in order to create/manage other databases]]}

 /* occurrences of db_server_type */

{db_server_type,About, [[The dialect of the database server]]}

 /* occurrences of db_server_type */

{db_server_type,About, [[The dialect of the database server]]}

 /* occurrences of db_server_host */

{db_server_host,About, [[Hostname or address for connection to database, blank means localhost]]}

 /* occurrences of db_server_host */

{db_server_host,About, [[Hostname or address for connection to database, blank means localhost]]}

 /* occurrences of db_server_password */

{db_server_password,About, [[Clear text password for database connection]]}

 /* occurrences of db_server_password */

{db_server_password,About, [[Clear text password for database connection]]}

 /* occurrences of db_server_owner */

{db_server_owner,About, [[User name for database connection]]}

 /* occurrences of database_server */

{database_server,About, [[Credentials for connecting to a local/remote database server]]}

 /* occurrences of module */

{module,About, [[true/false whether to expect the cfengine module protocol]]}

 /* occurrences of no_output */

{no_output,About, [[true/false discard all output from the command]]}

 /* occurrences of no_output */

{no_output,About, [[true/false discard all output from the command]]}

 /* occurrences of preview */

{preview,About, [[true/false preview command when running in dry-run mode (with -n)]]}

 /* occurrences of chroot */

{chroot,About, [[Directory of root sandbox for process]]}

 /* occurrences of chdir */

{chdir,promise_knowledge_cf_56, "promises.cf.html#promise_knowledge_cf_56"}
{chdir,used_in_promise, "promises.cf.html#promise_knowledge_cf_56"}

 /* occurrences of chdir */

{chdir,About, [[Directory for setting current/base directory for the process]]}

 /* occurrences of exec_timeout */

{exec_timeout,About, [[Timeout in seconds for command completion]]}

 /* occurrences of exec_timeout */

{exec_timeout,About, [[Timeout in seconds for command completion]]}

 /* occurrences of exec_group */

{exec_group,About, [[The group name or id under which to run the process]]}

 /* occurrences of exec_group */

{exec_group,About, [[The group name or id under which to run the process]]}

 /* occurrences of exec_owner */

{exec_owner,About, [[The user name or id under which to run the process]]}

 /* occurrences of umask */

{umask,About, [[The umask value for the child process]]}

 /* occurrences of umask */

{umask,About, [[The umask value for the child process]]}

 /* occurrences of useshell */

{useshell,About, [[true/false embed the command in a shell environment (true)]]}

 /* occurrences of contain */

{contain,promise_knowledge_cf_56, "promises.cf.html#promise_knowledge_cf_56"}
{contain,used_in_promise, "promises.cf.html#promise_knowledge_cf_56"}

 /* occurrences of contain */

{contain,About, [[Containment options for the execution process]]}

 /* occurrences of args */

{args,About, [[Alternative string of arguments for the command (concatenated with promiser string)]]}

 /* occurrences of comment */

{comment,About, [[Retained comment about this promise's real intention]]}

 /* occurrences of comment */

{comment,About, [[A comment about this promise's real intention that follows through the program]]}

 /* occurrences of depends_on */

{depends_on,About, [[A list of promise handles that this promise builds on or depends on somehow (for knowledge management)]]}

 /* occurrences of handle */

{handle,About, [[A unique id-tag string for referring to this as a promisee elsewhere]]}

 /* occurrences of ifvarclass */

{ifvarclass,About, [[Extended classes ANDed with context]]}

 /* occurrences of timer_policy */

{timer_policy,promise_site_cf_123, "promises.cf.html#promise_site_cf_123"}
{timer_policy,used_in_promise, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of timer_policy */

{timer_policy,About, [[Whether a persistent class restarts its counter when rediscovered]]}

 /* occurrences of timer_policy */

{timer_policy,About, [[Whether a persistent class restarts its counter when rediscovered]]}

 /* occurrences of persist_time */

{persist_time,promise_site_cf_123, "promises.cf.html#promise_site_cf_123"}
{persist_time,used_in_promise, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of persist_time */

{persist_time,About, [[A number of minutes the specified classes should remain active]]}

 /* occurrences of cancel_notkept */

{cancel_notkept,About, [[A list of classes to be cancelled if the promise is not kept for any reason]]}

 /* occurrences of cancel_repaired */

{cancel_repaired,About, [[A list of classes to be cancelled if the promise is repaired]]}

 /* occurrences of cancel_kept */

{cancel_kept,About, [[A list of classes to be cancelled if the promise is kept]]}

 /* occurrences of promise_kept */

{promise_kept,promise_webserver_cf_76, "promises.cf.html#promise_webserver_cf_76"}
{promise_kept,used_in_promise, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of promise_kept */

{promise_kept,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{promise_kept,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of promise_kept */

{promise_kept,About, [[A list of classes to be defined globally]]}

 /* occurrences of repair_timeout */

{repair_timeout,About, [[A list of classes to be defined globally]]}

 /* occurrences of repair_denied */

{repair_denied,About, [[A list of classes to be defined globally]]}

 /* occurrences of repair_failed */

{repair_failed,About, [[A list of classes to be defined globally]]}

 /* occurrences of promise_repaired */

{promise_repaired,promise_knowledge_cf_35, "promises.cf.html#promise_knowledge_cf_35"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_knowledge_cf_35"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_webserver_cf_76, "promises.cf.html#promise_webserver_cf_76"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_webserver_cf_76"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_webserver_cf_64, "promises.cf.html#promise_webserver_cf_64"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_webserver_cf_64"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_site_cf_123, "promises.cf.html#promise_site_cf_123"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_site_cf_123"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of promise_repaired */

{promise_repaired,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{promise_repaired,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of promise_repaired */

{promise_repaired,About, [[A list of classes to be defined globally]]}

 /* occurrences of classes */

{classes,About, [[Signalling behaviour]]}

 /* occurrences of measurement_class */

{measurement_class,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{measurement_class,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of measurement_class */

{measurement_class,About, [[If set performance will be measured and recorded under this identifier]]}

 /* occurrences of report_level */

{report_level,About, [[The reporting level for standard output]]}

 /* occurrences of report_level */

{report_level,About, [[The reporting level for standard output]]}

 /* occurrences of background */

{background,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{background,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of background */

{background,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{background,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of background */

{background,promise_site_cf_177, "promises.cf.html#promise_site_cf_177"}
{background,used_in_promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of background */

{background,run_agent, "promises.cf.html#run_agent"}
{background,used_in_promise, "promises.cf.html#run_agent"}

 /* occurrences of background */

{background,About, [[true/false switch for parallelizing the promise repair]]}

 /* occurrences of background */

{background,About, [[true/false switch for parallelizing the promise repair]]}

 /* occurrences of audit */

{audit,About, [[true/false switch for detailed audit records of this promise]]}

 /* occurrences of audit */

{audit,About, [[true/false switch for detailed audit records of this promise]]}

 /* occurrences of value_notkept */

{value_notkept,About, [[A real number value (possibly negative) attributed to not keeping this promise]]}

 /* occurrences of value_notkept */

{value_notkept,About, [[A real number value (possibly negative) attributed to not keeping this promise]]}

 /* occurrences of value_repaired */

{value_repaired,About, [[A real number value attributed to reparing this promise]]}

 /* occurrences of value_repaired */

{value_repaired,About, [[A real number value attributed to reparing this promise]]}

 /* occurrences of value_kept */

{value_kept,About, [[A real number value attributed to keeping this promise]]}

 /* occurrences of log_failed */

{log_failed,About, [[This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger]]}

 /* occurrences of log_repaired */

{log_repaired,About, [[This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger]]}

 /* occurrences of log_priority */

{log_priority,About, [[The priority level of the log message, as interpreted by a syslog server]]}

 /* occurrences of log_kept */

{log_kept,About, [[This should be filename of a file to which log_string will be saved, if undefined it goes to the system logger]]}

 /* occurrences of log_level */

{log_level,About, [[The reporting level sent to syslog]]}

 /* occurrences of log_level */

{log_level,About, [[The reporting level sent to syslog]]}

 /* occurrences of log_string */

{log_string,About, [[A message to be written to the log when a promise verification leads to a repair]]}

 /* occurrences of log_string */

{log_string,About, [[A message to be written to the log when a promise verification leads to a repair]]}

 /* occurrences of expireafter */

{expireafter,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{expireafter,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of expireafter */

{expireafter,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{expireafter,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of expireafter */

{expireafter,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{expireafter,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of expireafter */

{expireafter,free_disk_watch, "promises.cf.html#free_disk_watch"}
{expireafter,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of expireafter */

{expireafter,promise_site_cf_177, "promises.cf.html#promise_site_cf_177"}
{expireafter,used_in_promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of expireafter */

{expireafter,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{expireafter,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of expireafter */

{expireafter,run_agent, "promises.cf.html#run_agent"}
{expireafter,used_in_promise, "promises.cf.html#run_agent"}

 /* occurrences of expireafter */

{expireafter,About, [[Number of minutes before a repair action is interrupted and retried]]}

 /* occurrences of expireafter */

{expireafter,About, [[Number of minutes before a repair action is interrupted and retried]]}

 /* occurrences of ifelapsed */

{ifelapsed,promise_knowledge_cf_43, "promises.cf.html#promise_knowledge_cf_43"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_knowledge_cf_43"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_laptop_cf_31, "promises.cf.html#promise_laptop_cf_31"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_laptop_cf_31"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_laptop_cf_22, "promises.cf.html#promise_laptop_cf_22"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_laptop_cf_22"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_library_cf_171, "promises.cf.html#promise_library_cf_171"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_library_cf_171"}

 /* occurrences of ifelapsed */

{ifelapsed,free_disk_watch, "promises.cf.html#free_disk_watch"}
{ifelapsed,used_in_promise, "promises.cf.html#free_disk_watch"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_177, "promises.cf.html#promise_site_cf_177"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_177"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_site_cf_74, "promises.cf.html#promise_site_cf_74"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_site_cf_74"}

 /* occurrences of ifelapsed */

{ifelapsed,run_agent, "promises.cf.html#run_agent"}
{ifelapsed,used_in_promise, "promises.cf.html#run_agent"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_update_cf_21, "promises.cf.html#promise_update_cf_21"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_update_cf_21"}

 /* occurrences of ifelapsed */

{ifelapsed,promise_update_cf_13, "promises.cf.html#promise_update_cf_13"}
{ifelapsed,used_in_promise, "promises.cf.html#promise_update_cf_13"}

 /* occurrences of ifelapsed */

{ifelapsed,About, [[Number of minutes before next allowed assessment of promise]]}

 /* occurrences of action_policy */

{action_policy,promise_library_cf_171, "promises.cf.html#promise_library_cf_171"}
{action_policy,used_in_promise, "promises.cf.html#promise_library_cf_171"}

 /* occurrences of action_policy */

{action_policy,promise_site_cf_81, "promises.cf.html#promise_site_cf_81"}
{action_policy,used_in_promise, "promises.cf.html#promise_site_cf_81"}

 /* occurrences of action_policy */

{action_policy,About, [[Whether to repair or report about non-kept promises]]}

 /* occurrences of action */

{action,About, [[Output behaviour]]}

 /* occurrences of showstate */

{showstate,promise_site_cf_401, "promises.cf.html#promise_site_cf_401"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_401"}

 /* occurrences of showstate */

{showstate,promise_site_cf_394, "promises.cf.html#promise_site_cf_394"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_394"}

 /* occurrences of showstate */

{showstate,promise_site_cf_387, "promises.cf.html#promise_site_cf_387"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_387"}

 /* occurrences of showstate */

{showstate,promise_site_cf_380, "promises.cf.html#promise_site_cf_380"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_380"}

 /* occurrences of showstate */

{showstate,promise_site_cf_373, "promises.cf.html#promise_site_cf_373"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_373"}

 /* occurrences of showstate */

{showstate,promise_site_cf_366, "promises.cf.html#promise_site_cf_366"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_366"}

 /* occurrences of showstate */

{showstate,promise_site_cf_359, "promises.cf.html#promise_site_cf_359"}
{showstate,used_in_promise, "promises.cf.html#promise_site_cf_359"}

 /* occurrences of showstate */

{showstate,About, [[List of services about which status reports should be reported to standard output]]}

 /* occurrences of report_to_file */

{report_to_file,About, [[The path and filename to which output should be appended]]}

 /* occurrences of number_of_lines */

{number_of_lines,About, [[Integer maximum number of lines to print from selected file]]}

 /* occurrences of file_to_print */

{file_to_print,About, [[Path name to the file that is to be sent to standard output]]}

 /* occurrences of printfile */

{printfile,About, [[Quote part of a file to standard output]]}

 /* occurrences of lastseen */

{lastseen,About, [[Integer time threshold in hours since current peers were last seen, report absence]]}

 /* occurrences of intermittency */

{intermittency,About, [[Real number threshold [0,1] of intermittency about current peers, report above]]}

 /* occurrences of friend_pattern */

{friend_pattern,About, [[Regular expression to keep selected hosts from the friends report list]]}

 /* occurrences of not */

{not,About, [[Evaluate the negation of string expression in normal form]]}

 /* occurrences of expression */

{expression,About, [[Evaluate string expression of classes in normal form]]}

 /* occurrences of dist */

{dist,About, [[Generate a probabilistic class distribution (strategy in cfengine 2)]]}

 /* occurrences of xor */

{xor,About, [[Combine class sources with XOR]]}

 /* occurrences of and */

{and,About, [[Combine class sources with AND]]}

 /* occurrences of or */

{or,About, [[Combine class sources with inclusive OR]]}

 /* occurrences of policy */

{policy,About, [[The policy for (dis)allowing (re)definition of variables]]}

 /* occurrences of rlist */

{rlist,About, [[A list of real numbers]]}

 /* occurrences of ilist */

{ilist,About, [[A list of integers]]}

 /* occurrences of slist */

{slist,About, [[A list of scalar strings]]}

 /* occurrences of real */

{real,About, [[A scalar real number]]}

 /* occurrences of int */

{int,About, [[A scalar integer]]}

 /* occurrences of string */

{string,About, [[A scalar string]]}

 /* occurrences of sys */

{sys,About, [[cfengine's internal bundle of system specific values]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Represent type string and should match .*]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Represent type slist and should match .*]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Represent type real and should match ]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Represent type slist and should match ]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Represent type string and should match ]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Should match the generic pattern .*, i.e. unspecified characters]]}

 /* occurrences of an_arbitrary_string */

{an_arbitrary_string,About, [[Should match the generic pattern , i.e. unspecified characters]]}

 /* occurrences of a_syslog_level */

{a_syslog_level,About, [[Should match the generic pattern LOG_USER,LOG_DAEMON,LOG_LOCAL0,LOG_LOCAL1,LOG_LOCAL2,LOG_LOCAL3,LOG_LOCAL4,LOG_LOCAL5,LOG_LOCAL6,LOG_LOCAL7, i.e. a syslog constant]]}

 /* occurrences of a_file_path */

{a_file_path,About, [[Should match the generic pattern [cC]:\.*|/.*, i.e. a system file path suitable for the target system]]}

 /* occurrences of a_user_group_id */

{a_user_group_id,About, [[Represent type slist and should match [a-zA-Z0-9_$.-]+]]}

 /* occurrences of a_user_group_id */

{a_user_group_id,About, [[Should match the generic pattern [a-zA-Z0-9_$.-]+, i.e. an alphanumeric string with option underscores and hyphens]]}

 /* occurrences of a_cfengine_identifier */

{a_cfengine_identifier,About, [[Should match the generic pattern [a-zA-Z0-9_$.]+, i.e. an alphanumeric string with option underscores]]}

 /* occurrences of a_cfengine_class_expression */

{a_cfengine_class_expression,About, [[Should match the generic pattern [a-zA-Z0-9_!&|.()]+, i.e. an alphanumeric string with option underscores and logical operators]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,About, [[Represent type string and should match [0-7augorwxst,+-]+]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,About, [[Represent type slist and should match [0-7augorwxst,+-]+]]}

 /* occurrences of posix_file_mode_or_permission */

{posix_file_mode_or_permission,About, [[Should match the generic pattern [0-7augorwxst,+-]+, i.e. something that you would give as an argument to chmod]]}

 /* occurrences of a_single_character */

{a_single_character,About, [[Represent type string and should match ^.$]]}

 /* occurrences of a_single_character */

{a_single_character,About, [[Should match the generic pattern ^.$, i.e. one symbol]]}

 /* occurrences of real_number */

{real_number,About, [[Represent type rlist and should match -9.99999E100,9.99999E100]]}

 /* occurrences of real_number */

{real_number,About, [[Represent type real and should match -9.99999E100,9.99999E100]]}

 /* occurrences of real_number */

{real_number,About, [[Should match the generic pattern -9.99999E100,9.99999E100, i.e. a number between the minus and positive maximum values]]}

 /* occurrences of integer */

{integer,About, [[Represent type ilist and should match -99999999999,9999999999]]}

 /* occurrences of integer */

{integer,About, [[Represent type int and should match -99999999999,9999999999]]}

 /* occurrences of integer */

{integer,About, [[Should match the generic pattern -99999999999,9999999999, i.e. a number between the minus and positive maximum values]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,About, [[Represent type irange [int,int] and should match 0,99999999999]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,About, [[Represent type int and should match 0,99999999999]]}

 /* occurrences of a_positive_integer */

{a_positive_integer,About, [[Should match the generic pattern 0,99999999999, i.e. a number between zero and the maximum value]]}

 /* occurrences of a_time_range */

{a_time_range,About, [[Should match the generic pattern 0,2147483648, i.e. a value from zero to a maximum system time -- but you should use time functions to convert this]]}

 /* occurrences of link_type */

{link_type,About, [[Represent type (menu option) and should match symlink,hardlink,relative,absolute,none]]}

 /* occurrences of link_type */

{link_type,About, [[Should match the generic pattern symlink,hardlink,relative,absolute,none, i.e. a support link type]]}

 /* occurrences of boolean */

{boolean,About, [[Represent type (menu option) and should match true,false,yes,no,on,off]]}

 /* occurrences of boolean */

{boolean,About, [[Should match the generic pattern true,false,yes,no,on,off, i.e. a positive or a negative]]}

 /* occurrences of system_signals */

{system_signals,About, [[Represent type (option list) and should match hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv]]}

 /* occurrences of system_signals */

{system_signals,About, [[Should match the generic pattern hup,int,trap,kill,pipe,cont,abrt,stop,quit,term,child,usr1,usr2,bus,segv, i.e. a unix signal name]]}

 /* occurrences of values */

{values,About, [[Formal rvalues in constraint assignments and their legal ranges]]}

 /* occurrences of functions */

{functions,About, [[In-built functions that may be used to set variables or classes]]}

 /* occurrences of body_constraints */

{body_constraints,About, [[The attributes that cfengine enables you to promise about the promiser]]}

 /* occurrences of promise_types */

{promise_types,About, [[The types of promise that cfengine can keep]]}

 /* occurrences of promises */

{promises,About, [[Complete occurrences of promiser + promisee + promise-body]]}

 /* occurrences of promisers */

{promisers,About, [[The objects affected by a promise]]}

 /* occurrences of promisees */

{promisees,About, [[Recipients of a promise, i.e. promise handles, or persons]]}

 /* occurrences of contexts */

{contexts,About, [[Class expressions that say where or when a promise applies]]}

 /* occurrences of bodies */

{bodies,About, [[A modular collection of body constraints for re-use]]}

 /* occurrences of bundles */

{bundles,About, [[A modular collection of promises of different types]]}

 /* occurrences of available_patches_report */

{available_patches_report,About, [[Patches already installed on system]]}

 /* occurrences of installed_patches_report */

{installed_patches_report,description, [[For systems with a separate patch model, this shows OS software patches. There are two reports (for current status and patches that are available but not already applied)]]}

 /* occurrences of installed_patches_report */

{installed_patches_report,About, [[Patches not yet installed, but published by vendor]]}

 /* occurrences of variables_report */

{variables_report,description, [[Shows the values of variables used on each host. Some discovered, some defined.]]}

 /* occurrences of variables_report */

{variables_report,About, [[Current variable values expanded on different hosts]]}

 /* occurrences of value_report */

{value_report,About, [[Value estimate / ROI of cfengine configuration]]}

 /* occurrences of setuid_report */

{setuid_report,description, [[List the discovered setuid/setgid root programs on the system (Unix only)]]}

 /* occurrences of setuid_report */

{setuid_report,About, [[Known setuid programs found on system]]}

 /* occurrences of promises_not_kept_report */

{promises_not_kept_report,description, [[Show the log of recently failed or unkept promises. For debugging]]}

 /* occurrences of promises_not_kept_report */

{promises_not_kept_report,About, [[Promises that were recently unkept]]}

 /* occurrences of promises_repaired_report */

{promises_repaired_report,description, [[Show the log of recently repaired promises. For debugging]]}

 /* occurrences of promises_repaired_report */

{promises_repaired_report,About, [[Promises that were recently repaired]]}

 /* occurrences of promise_report */

{promise_report,description, [[Show the status of named policy promises, along with average compliance. Useful for quick auditing.]]}

 /* occurrences of promise_report */

{promise_report,About, [[Per-promise average compliance report]]}

 /* occurrences of performance_report */

{performance_report,description, [[Describes the real time it has taken on average to complete or keep promises]]}

 /* occurrences of performance_report */

{performance_report,About, [[Time cost of verifying system promises]]}

 /* occurrences of monitor_summary_report */

{monitor_summary_report,portal, "reports/allhosts.html"}

 /* occurrences of monitor_summary_report */

{monitor_summary_report,index_portal, "reports/host_portal.html"}

 /* occurrences of monitor_summary_report */

{monitor_summary_report,About, [[Pseudo-real-time measurement]]}

 /* occurrences of license_report */

{license_report,site_usage, "reports/license_report.html"}

 /* occurrences of license_report */

{license_report,About, [[License utilization statistics]]}

 /* occurrences of lastseen_report */

{lastseen_report,description, [[When was the last time the current host contacted or was contacted by another? (+) indicates contacted, (-) indictaes was contacted by.]]}

 /* occurrences of lastseen_report */

{lastseen_report,About, [[Time and frequency of communications with peers]]}

 /* occurrences of installed_software_report */

{installed_software_report,description, [[OS software packages installed and their version information.]]}

 /* occurrences of installed_software_report */

{installed_software_report,About, [[Software already installed on system]]}

 /* occurrences of hashes_report */

{hashes_report,description, [[A list of actual computed hash values for promised files.]]}

 /* occurrences of hashes_report */

{hashes_report,About, [[File hash values measured (change detection)]]}

 /* occurrences of file_diffs_report */

{file_diffs_report,description, [[A log of diffs of files promised under change monitoring]]}

 /* occurrences of file_diffs_report */

{file_diffs_report,About, [[Latest observed differences to system files]]}

 /* occurrences of file_changes_report */

{file_changes_report,description, [[A log of changes to files promised under change monitoring]]}

 /* occurrences of file_changes_report */

{file_changes_report,About, [[Latest observed changes to system files]]}

 /* occurrences of compliance_report */

{compliance_report,description, [[Show the status of all promises, along with average compliance. Useful for quick auditing.]]}

 /* occurrences of compliance_report */

{compliance_report,About, [[Total summary of host compliance]]}

 /* occurrences of classes_report */

{classes_report,description, [[Shows classes defined on the current host. This provides something like CMDB information but at level that can say something about the dynamics of the system. Probabilities that classes have been defined are based on actual observation.]]}

 /* occurrences of classes_report */

{classes_report,About, [[User defined classes observed on the system]]}

 /* occurrences of micro_audit_report */

{micro_audit_report,description, [[Detailed reports with every transaction made by cfengine - very storage consuming]]}

 /* occurrences of micro_audit_report */

{micro_audit_report,About, [[Generated by cfengine self-auditing]]}
