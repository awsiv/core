
#
# Set up the knowledge management components
#

bundle agent setup_knowledge
{
vars:

  # Directory to which you have already copied and edited the enterprise.cf files


  "doc_root" string => readfile("$(sys.workdir)/document_root.dat",40),
            comment => "Read the knowledge base document root for the web server";

  "config_src"   string => "$(sys.workdir)/inputs";

  "hosts"  slist => { 
                    "eternity.iu.hio.no",
                    "cf001lin.cfengine.com",
                    "cf002lin.cfengine.com"
                    };

classes:

  # make this class represent your environment

  "web_server"  or =>  { "eternity" };

  # check when updates arrive, new compared to the database

  "kn_update"   expression => isnewerthan("$(config_src)","$(doc_root)/db_stamp");

  "kn_init"     not => fileexists("$(doc_root)/db_stamp");

files:

  any::

   "$(doc_root)"

      comment      => "Make sure knowledge files are accessible to webserver",
      perms        => p("root","644"),
      depth_search => recurse("inf");

  kn_update|kn_init::

   "$(doc_root)/db_stamp"

       create => "true",
        touch => "true",
      comment => "Record the time of last update";  

  web_server::

   "$(doc_root)/reports/$(hosts)"

           handle => "collate_reports",
          comment => "Collate cf-reports from the list of hosts (this won't scale much)",
        copy_from => rcp("$(sys.workdir)/reports","$(hosts)"),
     depth_search => recurse("inf"),
       depends_on => { "generate_reports" },
           action => aggregator;

commands:

  any::

    "/usr/local/sbin/cf-report"
            handle => "generate_reports",
           comment => "Generate reports on each local machine, for aggregation";

  web_server.kn_update::

    #

    "/usr/local/sbin/cf-promises -r"

       comment => "Generate config knowledge format after update",
       contain => in_dir("$(doc_root)");

    #

    "/usr/local/sbin/cf-know -f $(doc_root)/enterprise_build.cf -g"

       comment => "Generate knowledge associative graphs";

    #

    "/usr/local/sbin/cf-know -f $(doc_root)/enterprise_build.cf -s"

       comment => "Populate or update database with new knowledge";
}

################################################

body contain in_dir(s)
{
chdir => "$(s)";
}

########################################################

body action aggregator

{
ifelapsed => "120";
expireafter => "240";
background => "true";
}

