############################################################################
#
# Knowledge base / ontology
#
############################################################################

body common control
   
{
bundlesequence  => { 
                   "CFEngine_nomenclature",
                   "mission_portal",
                   "infrastructure_topics",
                   "manual_entries",
                   "system",
                   "commentary",
                   "code_usage",
                   "substrings",
                   "CFEngine",
                   "policy_analysis",

                   #

                   "locations",
                   "goals",
                   "my_organization",
                   "questions",
                   "services",
                   "persons",
                   "compliance_models",
                   "error_messages",
                   "mission_apps"
                   };


inputs         => {
                  "enterprise_control.cf",
                  "enterprise_knowledge.cf",
                  "knowledge_models.cf",
                  "$(sys.workdir)/inputs/company_knowledge.cf",
                  "cf_associations.cf",
                  "cf_system.cf",
                  "examples.cf",
                  "geography.cf",
                  "persons.cf",
                  "goals.cf",
                  "services.cf",

                  # Manually generated for now

                  "error_topics.cf",

                  # Auto analysis of policy

                  "$(sys.workdir)/promise_knowledge.cf",

                  # Automatic scanning of documentation

                  "scan_solutions.cf",
                  "scan_substrings.cf",

                  "scan_bp3.cf",
                  "scan_SpecialTopic_DistributedScheduling.cf",
                  "scan_SpecialTopic_Reporting.cf",
                  "scan_cf3ref.cf",            
                  "scan_SpecialTopic_Editing.cf",
                  "scan_SpecialTopic_Rollback.cf",
                  "scan_NovaEvaluationGuide.cf",             
                  "scan_SpecialTopic_Federation.cf",
                  "scan_SpecialTopic_Scalability.cf",
                  "scan_NovaEvaluationGuideSupplement.cf",
                  "scan_SpecialTopic_FIPS.cf",
                  "scan_SpecialTopic_Scan.cf",
                  "scan_SpecialTopic_Hierarchy.cf",
                  "scan_SpecialTopic_Schedule.cf",
                  "scan_SpecialTopic_BDMA.cf",
                  "scan_SpecialTopic_Iteration.cf",
                  "scan_SpecialTopic_Security.cf",
                  "scan_SpecialTopic_Change.cf",
                  "scan_SpecialTopic_Monitoring.cf",
                  "scan_SpecialTopic_Teamwork.cf",
                  "scan_SpecialTopic_Cloud.cf",
                  "scan_SpecialTopic_OpenNebula.cf",
                  "scan_tutorial3.cf",
                  "scan_SpecialTopic_ContentDrivenPolicies.cf",
                  "scan_SpecialTopic_Packages.cf",
                  "scan_SpecialTopic_DevOps.cf",
                  "scan_SpecialTopic_RBAC.cf",
                  };

host_licenses_paid => "1";
version => "1.0";
}

###################################################
# Bodies
###################################################

body association a(f,name,b)

{
forward_relationship => "$(f)";
backward_relationship => "$(b)";
associates => { $(name) };
}

###################################################

body association A(f,name_list,b)

{
forward_relationship => "$(f)";
backward_relationship => "$(b)";
associates => { @(name_list) };
}

##################################################################
# Nova's standard influence strings - coordinate with knowledge.c
##################################################################

body association impacts(name)

{
forward_relationship => "has direct influence on";
backward_relationship => "is directly influenced by";
associates => { $(name) };
}

###################################################

body association Impacts(name_list)

{
forward_relationship => "has direct influence on";
backward_relationship => "is directly influenced by";
associates => { @(name_list) };
}

###################################################

body association see(name)
{
forward_relationship => "see also";
backward_relationship => "see also";
associates => { $(name) };
}