
bundle knowledge services

{

things:

 "Web Services";
 "Database service";
 "Storage";
 "Boot services"; 
 "SAP";


topics:

 # This is example knowledge -- add your own

 services::

  "installation"         comment => "Installing computers from bare metal";
  "boot services"        comment => "Boot services are a way of booting a computer directly from the network";
  "application services" comment => "Software running on servers";
  "network services"     comment => "Network connectivity and availability";
  "monitoring"           comment => "Pseudo-real-time status information about system components",
                     association => a("contributes to","mission status","draws on data from");
  "scheduling"           comment => "Set the time and place for jobs to run";
  "desktop"              comment => "Confgure the desktop environment for workstations";
  "access control"       comment => "Restricting user access to objects";
  "compliance"           comment => "Collective issues to ensure policy decisions are implemented";

  "virtualization"       comment => "Virtual hosts running on a hypervisor";
  "cloud"                comment => "Platform as a service. Implementing disposable virtual computers on demand.",
                     association => a("typically implemented using","virtualization","may be used to implement");
  "time services"        comment => "Clock synchronization and timezones";
  "logging"              comment => "Archiving system messages and events";
  "monitoring"           comment => "Data sampling and collection";

 monitoring::

  "SNMP"                 comment => "Simple Network Management Protocol.";
  "cacti"                comment => "System monitoring and graphing tool";
  "nagios"               comment => "System monitoring and graphing tool";
  "interactive load monitor";
  "processor snapshot";
  "vital signs" comment => "A set of key performance measurements for a host. Use the host finder to pick a host and use the finder on the host page.";

 logging::

  "syslog"                comment => "Unix log aggregator";
  "syslog-ng"             comment => "Unix log aggregator (improved version)";
  "log rotation"          comment => "The act of periodically emptying and archiving system logs";

 access_control::

  "pam"; 
  "passwords"; 
  "shadow file";
  "iptables"; 
  "ssh key management";
  "tcp wrappers";

 virtualization::

   "kdm"                 comment => "The Linux kernel virtualization scheme";
   "vmware"              comment => "The commercial VM implementation derived from IBM's VM system.";
   "xen"                 comment => "The paravirtualization project for Linux";
   "hyper-V"             comment => "The Windows virtualization framework";

 desktop::

   "X Windows" comment => "The Unix Windowing system";
   "GDM"       comment => "The login manager for X Windows";
   "GNOME"     comment => "The GNOME window manager for Unix";
   "KDE"       comment => "The Qt based KDE window manager for Unix";

 scheduling::

   "cron" comment => "The periodic time based scheduler (as in chronometer)";
   "at"   comment => "The one-shot job scheduler";

 application_services::

  "mail"               comment => "Electronic mail service, as made famous by the Unix operating system.";
  "configuration"      comment => "Cfengine desired-state automation and self-repair service";
  "web"                comment => "The WWW web service";
  "directory services" comment => "Directory services are look-up services, typically with identity or host information.";
  "storage"            comment => "Remotely accessible disk volumes.";
  "database"           comment => "Relational database services";
  "login"              comment => "The ability to log onto systems with a username and password";
  "daemons"            comment => "Unix parlance for a running background process that handles an application service";


things:

 daemons::

   "httpd" comment => "The apache web daemon",
           affects => { "application_services::web", "promise_types::processes" },
          provides => { "application_services::web", "www" },
        is_part_of => { "application_services::web" };

  "saslauthd"     comment => "Authentication module for the mail delivery service";
  "freshclam"     comment => "Gets updates for the clam virus scanner";
  "clamd"         comment => "A mail anti-virus content scanner";
  "clamav-milter" comment => "Mail virus scanner interface for clamd";
  "spamd"         comment => "A mail spam scanner, Spam Assassin service";
  "amavisd"       comment => "Yet another virus/spam scanner";
  "smtpd"         comment => "SMTP server used by postfix";



 "$(mail_daemons)" comment => "Email delivery software",
         affects => { "application_services::mail", "promise_types::processes" },
         provides => { "application_services::mail", "smtp" },
       is_part_of => { "application_services::mail" },
             uses => { "@(used_by_mail_daemons)" };


 network_services::

  "routing"      comment => "Router and switch configuration";
  "connectivity" comment => "Cables and hardware";

 boot_services::

  "PXE"   comment => "A composite network service based on the PXE protocol, allows systems to boot directly from the network.";
  "BOOTP" comment => "A simple broadcast protocol for booting a system directly from the network, e.g. for installation purposes.";

  "grub" comment => "The Linux boot menu";

 directory_services::

  "DNS"      comment => "Domain Name Service for translating Internet addresses into hostnames and vice versa.";
  "LDAP"     comment => "A well-known directory service. MS Active Directory purports to support this standard.";
  "NIS"      comment => "Sun's Network Information Service (previously called Yellow Pages).";
  "DHCP"     comment => "An IP configuration service.";

topics:

 database::

  "mysql"    comment => "Open source SQL database engine optimized for web",
             association => a("is managed by","promise_types::database","may be used to manage");

  "postgres" comment => "Open source relational SQL database engine for transaction processing",
             association => a("is managed by","promise_types::database","may be used to manage");

  "oracle"   comment => "Commercial relational SQL database";

 storage::

  "NFS"      comment => "Network File System (storage)",
             association => a("is managed by","promise_types::storage","may be used to manage");


  "samba"    comment => "The Unix service for integrating with MS Windows";




}